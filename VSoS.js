var iFileName = "Valda's Spire of Secrets";
RequiredSheetVersion("13.2.3");

/* 

    ! Important
    *   - This script is still currently being written and is not yet complete.
    *   - I am updating this to fit the 13.2.0 version of MPMB's Character Sheet.
    *   - I will be referencing both Seaworld's version and u/Anasurimborlnnrilatas's scripts to save on time 
    
    ! NOTE
    *   - This script adds everything according to version 1.4 of Valda's Spire of Secrets
    *   - The previous script written by u/Anasurimborlnnrilatas found here https://pastebin.com/GwU8JnCM are from 2 years ago. (version unknown, but most likely 1.0)
    *   - Seaworld also made changes to the script to fix some issues with firearms
    *   - The reason for using ! and * etc is due to a VS Code extension that is used for comments
    
    TODO 
    *   - Basically everything currently since I still have school/work priorities
*/

// ! UPDATING AS OF 8/31/2024

SourceList["VSoS"]={
	name : "Valda's Spire of Secrets",
	abbreviation : "VSoS",
	abbreviationSpellsheet : "V",
	date : "2022/12/30" // ! Updated as of 12-30-2022 (Version 1.4)
};

// ! This section adds races

// * Geppettin

RaceList["bisque geppettin"] = {
	regExpSearch : /^(?=.*bisque)(?=.*geppettin).*$/i,
	name : "Bisque geppettin",
	sortname : "Geppettin, Bisque",
	source : ["VSoS", 8],
	plural : "Bisque geppettin",
	size : 4,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	vision : [["Darkvision", 60]],
	age : " do not age, and are mature as soon as they become sentient",
	height : " rarely break 3 feet in height",
	heightMetric : " rarely break 0,9 metres in height",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	savetxt : {
		text : ["Magic can't put me to sleep"],
		immune : ["nonmagical disease"]
	},
    trait : "Bisque Geppettin (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Construct Anatomy: Can eat/drink, but don't need to. Instead of sleep, I go inactive for 4 hrs, not unconscious, can see/hear normally. Spells and effects affecting constructs also affect me",
        "\u2022 False Appearance: While motionless, indistinguishable from an ordinary doll",
        "\u2022 Sudden Strike: Add proficiency bonus to the damage of weapon attacks on my first turn in combat",
        "\u2022 Unnerving: Proficient with Intimidation, and adv. Cha (Intimidation) rolls against a crea who hasn't seen me move"
    ]),
	skills : ["Intimidation"]
};

RaceList["marionette geppettin"] = {
	regExpSearch : /^(?=.*marionette)(?=.*geppettin).*$/i,
	name : "Marionette geppettin",
	sortname : "Geppettin, Marionette",
	source : ["VSoS", 8],
	plural : "Marionette geppettin",
	size : [3, 4],
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	vision : [["Darkvision", 60]],
	age : " do not age, and are mature as soon as they become sentient",
	height : " rarely break 3 feet in height",
	heightMetric : " rarely break 0,9 metres in height",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	savetxt : {
		text : ["Magic can't put me to sleep"],
		immune : ["nonmagical disease"]
	},
    trait : "Marionette Geppettin (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Construct Anatomy: Can eat/drink, but don't need to. Instead of sleep, I go inactive for 4 hrs, not unconscious, can see/hear normally. Spells and effects affecting constructs also affect me",
        "\u2022 False Appearance: While motionless, indistinguishable from an ordinary doll",
        "\u2022 Clipped Strings: Melee attacks with weapons that aren't Two-Handed have Reach on my turn",
        "\u2022 Pantomime: Proficient with Performance, and adv. on Cha (Performance) checks to dance"
    ]),
	skills : ["Performance"]
};

RaceList["plushie geppettin"] = {
	regExpSearch : /^(?=.*plushie)(?=.*geppettin).*$/i,
	name : "Plushie geppettin",
	sortname : "Geppettin, Plushie",
	source : ["VSoS", 9],
	plural : "Plushie geppettin",
	size : 4,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	vision : [["Darkvision", 60]],
	age : " do not age, and are mature as soon as they become sentient",
	height : " rarely break 3 feet in height",
	heightMetric : " rarely break 0,9 metres in height",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	savetxt : {
		text : ["Magic can't put me to sleep"],
		immune : ["nonmagical disease"]
	},
    trait : "Plushie Geppettin (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Construct Anatomy: Can eat/drink, but don't need to. Instead of sleep, I go inactive for 4 hrs, not unconscious, can see/hear normally. Spells and effects affecting constructs also affect me",
        "\u2022 False Appearance: While motionless, indistinguishable from an ordinary doll",
        "\u2022 Adorable: Proficient with Persuasion, and adv. on Cha (Persuasion) rolls against children or other humanoids fond of cute things",
        "\u2022 Stuffed with Fluff: When taking blud. dmg, I can use my reaction to gain resistance to the damage and be knocked 5 feet away from the damage source. I can't use this feature if I can't be knocked away."
    ]),
	skills : ["Persuasion"],
	features : {
		"stuffed with fluff" : {
			name : "Stuffed with Fluff",
			minlevel : 1,
			usages : 1,
			recovery : "Turn", 
			action : [["reaction", ""]]
		}
	}
};

// * Mandrake

RaceList["spring mandrake"] = {
	regExpSearch : /^(?=.*spring)(?=.*mandrake).*$/i,
	name : "Spring Mandrake",
	sortname : "Mandrake, Spring",
	source : ["VSoS",10],
	plural : "Spring Mandrakes",
	size : 3,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " must grow undisturbed for a year and a day before they are harvested. They then mature in a decade and live for centuries, growing wider with more gnarled bark as they age.",
	height : " usually stand tall and slim, typically almost seven feet high",
	heightMetric : " usually stand tall and slim, typically over two meters high",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	skills : ["Nature"],
	trait : "Spring Mandrake (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Plant Nature: Don't need to eat if in sunlight for 4 hrs/day. Breathe through leaves/limbs, and get water/nutrients through feet",
        "\u2022 Emissary of the Trees: Prof. with Nature, and adv. on Cha (Persuasion) checks to interact with Beasts and Plants",
        "\u2022 Root Magic: Learn Shillelagh and use it with my own limb. At 3rd, cast Goodberry 1/LR. At 5th, cast Barkskin 1/LR. Spells use Intelligence, Wisdom, or Charisma and can be cast using SL"
    ]),
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
		name : "Root Magic (level 1)",
		spells : ["shillelagh"],
		selection : ["shillelagh"],
		firstCol : "atwill"
	}],
	spellChanges : {
		"shillelagh" : {
			description : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg and uses my spellcasting ability modifier instead of Str",
			descriptionShorter : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg \u0026 uses my spellcasting modifier instead of Str",
			descriptionFull : "The wood of a club, quarterstaff, or my tree limb  is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.",
			changes : "I can also use one of my limbs as a club for the duration of the spell."
		}
	},
	features : {
		"entangling vines" : {
			name: "Entangling Vines",
			limfeaname: "Entangling Vines",
			minlevel : 1,
			usages : "Proficiency Bonus per ",
			usagescalc : "event.value = How('Proficiency Bonus');",
			recovery : "long rest",
			action : ["bonus action", ""],
		},
		"goodberry" : {
			name : "Root Magic (level 3)",
			limfeaname : "Goodberry",
			minlevel : 3,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 3)",
				spells : ["goodberry"],
				selection : ["goodberry"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"goodberry" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting goodberry no longer requires material components"
				}
			}
		},
		"barkskin" : {
			name : "Root Magic (level 5)",
			limfeaname : "Barkskin",
			minlevel : 5,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 5)",
				spells : ["barkskin"],
				selection : ["barkskin"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"barkskin" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting barkskin no longer requires material components"
				}
			}
		}
	},
	toNotesPage : [{
		name : "Entangling Vines",
		source : ["VSoS", 11],
		page3notes : true,
		note : desc([ 
			"I can use my bonus action to cause weeds and vines to grasp a large or smaller creature within 30 feet of me. Until the end of the creature's next turn, its speed becomes 0. This ends early if it takes the disengage action.",
			"At 3rd level, my Entangling Vines can target an airborne creature within 30 feet of the ground, which is pulled safely to the ground."
		])
	}]
};

RaceList["summer mandrake"] = {
	regExpSearch : /^(?=.*summer)(?=.*mandrake).*$/i,
	name : "Summer Mandrake",
	sortname : "Mandrake, Summer",
	source : ["VSoS",10],
	plural : "Summer Mandrakes",
	size : 3,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " must grow undisturbed for a year and a day before they are harvested. They then mature in a decade and live for centuries, growing wider with more gnarled bark as they age.",
	height : " usually stand tall and slim, typically almost seven feet high",
	heightMetric : " usually stand tall and slim, typically over two meters high",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	skills : ["Nature"],
	trait : "Summer Mandrake (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Plant Nature: Don't need to eat if in sunlight for 4 hrs/day. Breathe through leaves/limbs, and get water/nutrients through feet",
        "\u2022 Emissary of the Trees: Prof. with Nature, and adv. on Cha (Persuasion) checks to interact with Beasts and Plants",
        "\u2022 Root Magic: Learn Shillelagh and use it with my own limb. At 3rd, cast Goodberry 1/LR. At 5th, cast Barkskin 1/LR. Spells use Intelligence, Wisdom, or Charisma and can be cast using SL"
    ]),
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
		name : "Root Magic (level 1)",
		spells : ["shillelagh"],
		selection : ["shillelagh"],
		firstCol : "atwill"
	}],
	spellChanges : {
		"shillelagh" : {
			description : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg and uses my spellcasting ability modifier instead of Str",
			descriptionShorter : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg \u0026 uses my spellcasting modifier instead of Str",
			descriptionFull : "The wood of a club, quarterstaff, or my tree limb  is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.",
			changes : "I can also use one of my limbs as a club for the duration of the spell."
		}
	},
	features : {
		"entangling vines" : {
			name: "Entangling Vines",
			limfeaname: "Entangling Vines",
			minlevel : 1,
			usages : "Proficiency Bonus per ",
			usagescalc : "event.value = How('Proficiency Bonus');",
			recovery : "long rest",
			action : ["bonus action", ""],
		},
		"goodberry" : {
			name : "Root Magic (level 3)",
			limfeaname : "Goodberry",
			minlevel : 3,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 3)",
				spells : ["goodberry"],
				selection : ["goodberry"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"goodberry" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting goodberry no longer requires material components"
				}
			}
		},
		"barkskin" : {
			name : "Root Magic (level 5)",
			limfeaname : "Barkskin",
			minlevel : 5,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 5)",
				spells : ["barkskin"],
				selection : ["barkskin"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"barkskin" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting barkskin no longer requires material components"
				}
			}
		}
	},
	toNotesPage : [{
		name : "Entangling Vines",
		source : ["VSoS", 11],
		page3notes : true,
		note : desc([ 
			"I can use my bonus action to cause weeds and vines to grasp a large or smaller creature within 30 feet of me. Until the end of the creature's next turn, its speed becomes 0. This ends early if it takes the disengage action.",
			"At 3rd level, my Entangling Vines can move the target up to 10 feet to an unoccupied space on the ground or on a floor."
		])
	}]
};

RaceList["autumn mandrake"] = {
	regExpSearch : /^(?=.*autumn)(?=.*mandrake).*$/i,
	name : "Autumn Mandrake",
	sortname : "Mandrake, Autumn",
	source : ["VSoS",10],
	plural : "Autumn Mandrakes",
	size : 3,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " must grow undisturbed for a year and a day before they are harvested. They then mature in a decade and live for centuries, growing wider with more gnarled bark as they age.",
	height : " usually stand tall and slim, typically almost seven feet high",
	heightMetric : " usually stand tall and slim, typically over two meters high",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	skills : ["Nature"],
	trait : "Autumn Mandrake (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Plant Nature: Don't need to eat if in sunlight for 4 hrs/day. Breathe through leaves/limbs, and get water/nutrients through feet",
        "\u2022 Emissary of the Trees: Prof. with Nature, and adv. on Cha (Persuasion) checks to interact with Beasts and Plants",
        "\u2022 Root Magic: Learn Shillelagh and use it with my own limb. At 3rd, cast Goodberry 1/LR. At 5th, cast Barkskin 1/LR. Spells use Intelligence, Wisdom, or Charisma and can be cast using SL"
    ]),
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
		name : "Root Magic (level 1)",
		spells : ["shillelagh"],
		selection : ["shillelagh"],
		firstCol : "atwill"
	}],
	spellChanges : {
		"shillelagh" : {
			description : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg and uses my spellcasting ability modifier instead of Str",
			descriptionShorter : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg \u0026 uses my spellcasting modifier instead of Str",
			descriptionFull : "The wood of a club, quarterstaff, or my tree limb  is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.",
			changes : "I can also use one of my limbs as a club for the duration of the spell."
		}
	},
	features : {
		"entangling vines" : {
			name: "Entangling Vines",
			limfeaname: "Entangling Vines",
			minlevel : 1,
			usages : "Proficiency Bonus per ",
			usagescalc : "event.value = How('Proficiency Bonus');",
			recovery : "long rest",
			action : ["bonus action", ""],
		},
		"goodberry" : {
			name : "Root Magic (level 3)",
			limfeaname : "Goodberry",
			minlevel : 3,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 3)",
				spells : ["goodberry"],
				selection : ["goodberry"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"goodberry" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting goodberry no longer requires material components"
				}
			}
		},
		"barkskin" : {
			name : "Root Magic (level 5)",
			limfeaname : "Barkskin",
			minlevel : 5,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 5)",
				spells : ["barkskin"],
				selection : ["barkskin"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"barkskin" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting barkskin no longer requires material components"
				}
			}
		}
	},
	toNotesPage : [{
		name : "Entangling Vines",
		source : ["VSoS", 11],
		page3notes : true,
		note : desc([ 
			"I can use my bonus action to cause weeds and vines to grasp a large or smaller creature within 30 feet of me. Until the end of the creature's next turn, its speed becomes 0. This ends early if it takes the disengage action.",
			"At 3rd level, my Entangling Vines can affect a second creature within 5 feet of the first target."
		])
	}]
};

RaceList["winter mandrake"] = {
	regExpSearch : /^(?=.*winter)(?=.*mandrake).*$/i,
	name : "Winter Mandrake",
	sortname : "Mandrake, Winter",
	source : ["VSoS",10],
	plural : "Winter Mandrakes",
	size : 3,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " must grow undisturbed for a year and a day before they are harvested. They then mature in a decade and live for centuries, growing wider with more gnarled bark as they age.",
	height : " usually stand tall and slim, typically almost seven feet high",
	heightMetric : " usually stand tall and slim, typically over two meters high",
    scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	skills : ["Nature"],
	trait : "Autumn Mandrake (+2 and +1, or +1 to three different scores)" + desc([
        "\u2022 Plant Nature: Don't need to eat if in sunlight for 4 hrs/day. Breathe through leaves/limbs, and get water/nutrients through feet",
        "\u2022 Emissary of the Trees: Prof. with Nature, and adv. on Cha (Persuasion) checks to interact with Beasts and Plants",
        "\u2022 Root Magic: Learn Shillelagh and use it with my own limb. At 3rd, cast Goodberry 1/LR. At 5th, cast Barkskin 1/LR. Spells use Intelligence, Wisdom, or Charisma and can be cast using SL"
    ]),
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
		name : "Root Magic (level 1)",
		spells : ["shillelagh"],
		selection : ["shillelagh"],
		firstCol : "atwill"
	}],
	spellChanges : {
		"shillelagh" : {
			description : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg and uses my spellcasting ability modifier instead of Str",
			descriptionShorter : "Club/quarterstaff/tree limb does 1d8 Bludg. dmg \u0026 uses my spellcasting modifier instead of Str",
			descriptionFull : "The wood of a club, quarterstaff, or my tree limb  is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.",
			changes : "I can also use one of my limbs as a club for the duration of the spell."
		}
	},
	features : {
		"entangling vines" : {
			name: "Entangling Vines",
			limfeaname: "Entangling Vines",
			minlevel : 1,
			usages : "Proficiency Bonus per ",
			usagescalc : "event.value = How('Proficiency Bonus');",
			recovery : "long rest",
			action : ["bonus action", ""],
		},
		"goodberry" : {
			name : "Root Magic (level 3)",
			limfeaname : "Goodberry",
			minlevel : 3,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 3)",
				spells : ["goodberry"],
				selection : ["goodberry"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"goodberry" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting goodberry no longer requires material components"
				}
			}
		},
		"barkskin" : {
			name : "Root Magic (level 5)",
			limfeaname : "Barkskin",
			minlevel : 5,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Root Magic (level 5)",
				spells : ["barkskin"],
				selection : ["barkskin"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"barkskin" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting barkskin no longer requires material components"
				}
			}
		}
	},
	toNotesPage : [{
		name : "Entangling Vines",
		source : ["VSoS", 11],
		page3notes : true,
		note : desc([ 
			"I can use my bonus action to cause weeds and vines to grasp a large or smaller creature within 30 feet of me. Until the end of the creature's next turn, its speed becomes 0. This ends early if it takes the disengage action.",
			"At 3rd level, my Entangling Vines deal cold damage equal to my proficiency bonus to the target."
		])
	}]
};

// * Mousefolk "Subraces"
RaceList["mouseling"] = {
	regExpSearch : /^(?=.*mouseling).*$/i,
	name : "Mouseling",
	sortname : "Mousefolk, Mouseling",
	source : ["VSoS",12],
	plural : "Mouselings",
	size : 4,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " mature in their teens and live around 80 years.",
	height : " stand around 3 feet tall, appearing slightly taller with their large ears",
	heightMetric : " stand around 90 centimeters tall, appearing slightly taller with their large ears",
	weight : " normally weigh no more than 40 pounds.",
	weightMetric : " normally weigh no more than 18 kilograms.",
	vision : [["Darkvision", 60]],
	skills : ["Stealth"],
	trait : "Mouseling (+2 and +1, or +1 to three different scores)" + desc([
		"\u2022 Scurry: Move through hostile creatures' spaces as difficult terrain",
		"\u2022 Squeeze: No penalty for squeezing into a space one size smaller",
		"\u2022 Sidestep: When a creature I can see makes an opportunity attack against me and I'm not wearing medium or heavy armor, I can use my reaction to impose disadvantage on the attack roll."
	]),
	scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	reaction : [["reaction", "Sidestep"]]
};

RaceList["ratling"] = {
	regExpSearch : /^(?=.*ratling).*$/i,
	name : "Ratling",
	sortname : "Mousefolk, Ratling",
	source : ["VSoS",12],
	plural : "Ratlings",
	size : 4,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " mature in their teens and live around 80 years.",
	height : " stand around 3 feet tall, appearing slightly taller with their large ears",
	heightMetric : " stand around 90 centimeters tall, appearing slightly taller with their large ears",
	weight : " normally weigh no more than 40 pounds.",
	weightMetric : " normally weigh no more than 18 kilograms.",
	vision : [["Darkvision", 60]],
	skills : ["Stealth"],
	trait : "Ratling (+2 and +1, or +1 to three different scores)" + desc([
		"\u2022 Scurry: Move through hostile creatures' spaces as difficult terrain",
		"\u2022 Squeeze: No penalty for squeezing into a space one size smaller",
		"\u2022 Gnaw: I can use my action to chew through a small nonmagical object that isn't being worn or carried. I can spend 1 minute chewing a Tiny hole through a wooden wall or floor. I can't chew through metal, stone, etc"
	]),
	scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	reaction : [["action", "Gnaw"]]
};

// * Spirithost
RaceList["spirithost"] = {
	regExpSearch : /^(?=.*spirithost).*$/i,
	name : "Spirithost",
	sortname : "Spirithost",
	source : ["VSoS",13],
	plural : "Spirithosts",
	size : 3,
	speed : {
		walk : { spd : 30, enc : 20 }
	},
	languageProfs : ["Common", 1],
	age : " do not experience time in the same way as most mortal creatures. As a result, even though they mature in their teens, their lives can stretch on for hundreds of years.",
	height : " stand as tall as humans, usually around 5 or 6 feet tall.",
	heightMetric : " stand as tall as humans, usually around 150 to 180 centimeters tall.",
	weight : " weigh half as much as a similarly sized human, as their slightly ethereal form is only loosely affiliated with gravity.",
	vision : [["Ethereal Plane", 120]],
	scorestxt : "+2 to an ability score of my choice and +1 to a different ability score, or +1 to three different ability scores",
	trait : "Spirithost (+2 and +1, or +1 to three different scores)" + desc([
		"\u2022 Spells and effects that affect the Undead also affect me",
		"\u2022 Ghostly Descent: If not incapacitated, subtract 60 ft. from fall distance when calculating fall damage.",
		"\u2022 Incorporeal Movement: I can move through other crea and obj as if they were dif. terrain. If I end my turn inside a crea or an obj, I am shunted out and take force dmg equal to 2x the distance",
		"\u2022 Spirit Speech: Cast Speak With Dead 1/LR requiring no material comp. and ask questions equal to prof bonus. Spell uses Int, Wis, or Cha, and can also be cast with spell slots"
	]),
	spellcastingAbility : [4, 5, 6],
	features : {
		"spirit speech" : {
			name : "Spirit Speech",
			limfeaname : "Speak With Dead",
			minlevel : 1,
			usages : 1,
			recovery : "long rest",
			spellcastingBonus : [{
				name : "Spirit Speech (level 1)",
				spells : ["speak with dead"],
				selection : ["speak with dead"],
				firstCol : "oncelr"
			}],
			spellChanges : {
				"speak with dead" : {
					components : "V,S",
					compMaterial : "",
					changes : "Casting speak with dead no longer requires material components"
				}
			},
		}
	}
};

// * Near-Human variant
AddRacialVariant("human", "near-human", {
	regExpSearch : /near-human/i,
	source : ["VSoS", 14],
	plural : "Near-Humans",
	skillstxt : "Choose any one skill",
	scorestxt : "+1 to two different ability scores of my choice",
	trait : "Near-Human (+1 to two different ability scores of my choice)" + desc([
		"\u2022 Skills: I gain proficiency in one skill of my choice",
		"\u2022 I gain one Near-Humant feat of my choice, that must be picked at first level."
	]),
	eval : function() { AddString('Feat Note 1', 'Near-Human feat', '; '); },
	removeeval : function() { RemoveString('Feat Note 1', 'Near-Human feat'); }
});

// ! This section adds feats

// * Near-Human feats
FeatsList["aberrant spawn"] = {
	name : "Aberrant Spawn",
	source : ["VSoS", 14],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You were somehow mutated or created by an aberration, such as an aboleth, and you suffer from strange deformities as a result. Due to these changes, you have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have advantage on saving throws you make to avoid or end the charmed condition on yourself and against any effect that would sense your emotions or read your thoughts.\n \u2022 You have resistance to psychic damage.\n \u2022 At least one of your limbs is muscular, rubbery, and pliant, acting as a tentacle that you can use to make unarmed strikes. When you hit with it, the strike deals 1d6 + your Strength modifier bludgeoning damage, instead of the bludgeoning damage normal for an unarmed strike.",
	description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 to any ability score.]",
	dmgres : ["Psychic"],
	weaponOptions : [{
		baseWeapon : "unarmed strike",
		regExpSearch : /^(?=.*aberrant)(?=.*tentacle).*$/i,
		name : "Aberrant Tentacle",
		source : ["VSoS", 14],
		damage : [1, 6, "bludgeoning"],
		selectNow : true
	}],
	savetxt : {
		adv_vs : ["charmed", "sense emotions", "read thoughts"],
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "Adv. on saves to avoid or end charmed, and against having my emotions sensed or my thoughts read. I can use one of my limbs as a natural weapon for unarmed strikes, dealing 1d6 + Strength in bludgeoning damage on a hit. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["aquanaut"] = {
	name : "Aquanaut",
	source : ["VSoS", 14],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "One of your parents is a merfolk, or you are distantly descended from the Elemental Plane of Water; consequently, you have aquatic features like gills, webbed fingers and toes, and fishlike scales, which grant you the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You can breathe water as well as air.\n \u2022 You have a swimming speed equal to your walking speed.",
	description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 to any ability score.]",
	speed : {
		swim : { spd : "walk", enc : "walk" },
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I can breathe water and air. I have a swimming speed equal to my walking speed. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["arachne"] = {
	name : "Arachne",
	source : ["VSoS", 14],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Much like drow, humans can be corrupted by the magic of the drow goddess, becoming arachne—humans with eight eyes and coarse, black hair. Sometimes these humans are the offspring of driders or drow priestesses, while other times they bear the marks of a ritual sacrifice gone terribly awry.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You can see in dim light within 120 feet of you as if it were bright light and in darkness as if it were dim light. You discern colors in that darkness only as shades of gray.\n \u2022 You know the poison spray cantrip. Stng at 3rd level, you can cast the bane spell with this trait. Starting at 5th level, you can also cast the spider climb spell with this trait. Once you cast spider climb with this trait, you can't cast that spell with it again until you finish a long rest. You can also cast either of those spells using any spell slots you have of the appropriate level.\n   Intelligence, Wisdom, or Charisma is your spellcasting ability for these spells when you cast them with this trait (choose when you select this race).",
	description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 to any ability score.]",
	vision : ["Darkvision", 120],
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
        name : "Arachne (level 1)",
        spells : ["poison spray"],
        selection : ["poison spray"],
        firstCol : "atwill"
    }, {
        name : "Arachne (level 3)",
        spells : ["bane"],
        selection : ["bane"],
        firstCol : "oncelr",
        times : levels.map( function (n) {
			return n < 3 ? 0 : 1;
		})
    }, {
        name : "Arachne (level 5)",
        spells : ["spider climb"],
        selection : ["spider climb"],
        firstCol : "oncelr",
		times : levels.map( function (n) {
			return n < 5 ? 0 : 1;
		})
    }],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have darkvision to 120 ft and I know the Poison Spray cantrip. At 3rd level, I can cast Bane 1/LR. At 5th, I can cast Spider Climb 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["beastman"] = {
	name : "Beastman",
	source : ["VSoS", 14],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "With a short tail, coarse fur covering your face, and long teeth and claws, you appear more like a ferocious beast than a man. Perhaps your parentage includes a werecreature or an intelligent beast, granting you the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have advantage on Wisdom (Perception) checks made to smell.\n \u2022 You possess sharp claws, which are natural weapons that you can use to make unarmed strikes. On a hit with them, you deal slashing damage equal to 1d6 + your Strength modifier, instead of the bludgeoning damage normal for an unarmed strike.",
	description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 to any ability score.]",
	weaponOptions : [{
		baseWeapon : "unarmed strike",
		regExpSearch : /^(?=.*(beastman))(?=.*claw).*$/i,
		name : "Beastman Claws",
		source : ["VSoS", 14],
		damage : [1, 6, "slashing"],
		selectNow : true
	}],
	vision : [["Keen Smell", 0]],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have advantage on Wisdom (Perception) checks made to smell. I can use my claws as natural weapons to make unarmed strikes, dealing 1d6 + Strength in slashing damage on a hit. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["firebrand"] = {
	name : "Firebrand",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Born, imbued with, or later marked by the powers of Elemental Fire, these near-humans have an affinity for fire magic. Their heritage makes them dangerous adversaries in combat, as does the volatile nature of their innate powers. Firebrands are human in shape, but have deep red skin and flames behind their eyes. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have resistance to fire damage.\n \u2022 You know the produce flame cantrip. Starting at 3rd level, you can cast the burning hands spell with this trait. Starting at 5th level, you can also cast the flaming sphere spell with this trait, without requiring a material component. Once you cast flaming sphere with this trait, you can't cast that spell with it again until you finish a long rest. You can also cast either of those spells using any spell slots you have of the appropriate level.\n   Intelligence, Wisdom, or Charisma is your spellcasting ability for these spells when you cast them with this trait (choose when you select this race).",
	description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 to any ability score.]",
	dmgres : ["Fire"],
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
        name : "Firebrand (level 1)",
        spells : ["produce flame"],
        selection : ["produce flame"],
        firstCol : "atwill"
    }, {
        name : "Firebrand (level 3)",
        spells : ["burning hands"],
        selection : ["burning hands"],
        firstCol : "oncelr",
        times : levels.map( function (n) {
			return n < 3 ? 0 : 1;
		})
    }, {
        name : "Firebrand (level 5)",
        spells : ["flaming sphere"],
        selection : ["flaming sphere"],
        firstCol : "oncelr",
		times : levels.map( function (n) {
			return n < 5 ? 0 : 1;
		})
    }],
	spellChanges : {
		"flaming sphere" : {
			components : "V,S",
			compMaterial : "",
			changes : "Casting flaming sphere no longer requires material components"
		}
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have resistance to fire damage. I know the Produce Flame cantrip. At 3rd level, I can cast Burning Hands 1/LR. At 5th, I can cast Flaming Sphere 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["green skin"] = {
	name : "Green Skin",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
	return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Your people metabolize by basking in the sunlight. Aided by your tough, photosynthetic skin, you gain the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have advantage on saving throws you make to avoid or end the poisoned condition on yourself. You also have resistance to poison damage.\n \u2022 While you aren't wearing armor, your AC equals 12 + your Dexterity modifier.",
	description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 to any ability score.]",
	armorOptions : {
		regExpSearch : /^(?=.*green)(?=.*skin).*$/i,
		name : "Green Skin",
		source : ["VSoS", 15],
		ac : 12,
		selectNow : true
	},
	savetxt : {
		adv_vs : ["poisoned"],
	},
	dmgres : ["Poison"],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have advantage on saving throws against being poisoned, and resistance to poison damage. While not wearing armor, my AC is 12 + Dexterity. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

// * Human is medium by default
FeatsList["grendel medium"] = {
	name : "Grendel (medium)",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "The children of goblins, hobgoblins, and bugbears with humans are known as grendels. Despite their varied heritage, grendels don't quite resemble either of their parents, with green- or orange-tanned skin, coarse hair, and three knuckles on each finger.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 Unlike other humans, you are Medium or Small, depending on your heritage.\n \u2022 You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.\n \u2022 You have advantage on saving throws you make to avoid or end the charmed condition on yourself.\n \u2022 On your first turn in combat, you can add your proficiency bonus to your attack rolls, ability checks, and saving throws.",
	vision : ["Darkvision", 60],
	savetxt : {
		adv_vs : ["charmed"],
	},
	description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 to any ability score.]",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I am Medium. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["grendel small"] = {
	name : "Grendel (Small)",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "The children of goblins, hobgoblins, and bugbears with humans are known as grendels. Despite their varied heritage, grendels don't quite resemble either of their parents, with green- or orange-tanned skin, coarse hair, and three knuckles on each finger.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 Unlike other humans, you are Medium or Small, depending on your heritage.\n \u2022 You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.\n \u2022 You have advantage on saving throws you make to avoid or end the charmed condition on yourself.\n \u2022 On your first turn in combat, you can add your proficiency bonus to your attack rolls, ability checks, and saving throws.",
	vision : ["Darkvision", 60],
	eval: function() { PickDropdown("Size Category", 4); },
	removeeval: function(n) { PickDropdown("Size Category", 3); },
	savetxt : {
		adv_vs : ["charmed"],
	},
	description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 to any ability score.]",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I am Small. I have darkvision to 60 feet, and adv. against being charmed. On my 1st turn in combat, I can add my prof. bonus to attacks, checks, and saves. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["grue"] = {
	name : "Grue",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "One of your parents was a creature of darkness, such as a shadow or a native of the Plane of Shadow. Grues, such as yourself, have blackened skin and cast a shadow in all directions, even when directly in light. In shadows, you are nearly invisible. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have darkvision, the ability to see in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.\n \u2022 When you are hidden and a creature discovers you with a successful Wisdom (Perception) check, you can reattempt your Dexterity (Stealth) check to hide. On a success, you silently reposition yourself and the creature doesn't notice you. Once you use this trait, you can't use it again until you finish a short or long rest.",
	description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom(Perception) check, I can make a Dexterity(Stealth) check. On a success, I remain hidden. [+1 to any ability score.]",
	vision : ["Darkvision", 60],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have darkvision out to 60 feet. Once per short rest I can use covert. When I am hidden and detected by a creature's successful Wisdom (Perception) check, I can make a Dexterity (Stealth) check. On a success, I remain hidden. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	},
	usages : 1,
	recovery : "short rest",
	limfeaname : "Covert"
};

FeatsList["insectoid"] = {
	name : "Insectoid",
	source : ["VSoS", 15],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Insectoids bear one or two insectlike features, such as prominent compound eyes or chitinous plates, but almost always have a pair of sensitive antennae atop their heads.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 Due to your antennae, you have blindsight with a range of 10 feet. Within that range, you can effectively see anything that isn't behind total cover, even if you're blinded or in darkness. Moreover, you can see an invisible creature within that range, unless the creature successfully hides from you.\n \u2022 If any part of your body is amputated, but its amputation doesn't kill you, you can fully regrow that part of your body in 24 hours.",
	description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 to any ability score.]",
	vision : ["Blindsight", 10],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have blindsight to 10 ft. I can fully regrow any amputated body part in 24 hours, as long as the amputation doesn't kill me. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["immortal"] = {
	name : "Immortal",
	source : ["VSoS", 16],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "According to legend, a human can achieve immortality by replacing their heart with a mote of celestial radiance. The secret to immortality, including the elixirs and rituals needed to achieve it, is protected by a small, clandestine sect of immortal mystics, each of who only know one component of the process. There are perhaps only a dozen true immortals in the world, but as many as hundreds if every tale can be believed.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You don't age, can't be aged magically, and suffer none of the frailty of old age. You can't die of old age.\n \u2022 You have advantage on saving throws you make to avoid or end diseases and the poisoned condition yourself. You also have resistance to poison damage.",
	savetxt : {
		adv_vs : ["poisoned"],
	},
	dmgres : ["Poison"],
	description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 to any ability score.]",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I don't age, can't be aged magically, and can't die of old age. I have advantage on saves against the poisoned condition, and resistance to poison damage. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["mul"] = {
	name : "Mul",
	source : ["VSoS", 16],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "One of your parents was a human and the other was a dwarf. Such a pairing is unlikely to have produced offspring, but you have defied the odds to join the ranks of the sturdy and resilient muls. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have darkvision, the ability to see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.\n \u2022 Your hit point maximum increases by 1, and it increases by 1 every time you gain a level.\n \u2022 Your speed is not reduced by wearing heavy armor and you never have disadvantage on Dexterity (Stealth) checks as a result of wearing heavy armor.",
	description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 to any ability score.]",
	vision : ["Darkvision", 60],
	calcChanges : {
		hp : function (totalHD) { return [totalHD, "Dwarven Toughness"]; }
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have darkvision out to 60 feet. My hit point maximum increases by 1 for every level. Heavy armor doesn't reduce my speed or impose disadvantage on stealth. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["ogre-blooded"] = {
	name : "Ogre-Blooded",
	source : ["VSoS", 16],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Your coarse features and monstrous build betray that one of your parents is an ogre. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.\n \u2022 You gain proficiency in the Athletics skill. Additionally, when you make a Strength (Athletics) check, you can treat the result as a 10, or your level plus your Strength modifier, whichever is higher.\n \u2022 You count as one size larger when determining your carrying capacity and the weight you can push, drag, or lift.",
	description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str (Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 to any ability score.]",
	vision : ["Darkvision", 60],
	skills : ["Athletics"],
	carryingCapacity : 2,
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have darkvision. I gain proficiency in Athletics, and can treat the result of Str(Ath) checks as 10 or Level + Strength, whichever is higher. I count as one size larger for carry/push/drag/lift capacity. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["owlbearman"] = {
	name : "Owlbearman",
	source : ["VSoS", 16],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You are a hulking thing of feathers, flesh, and fur; half-man, half-bear, and half-owl. None can say for sure what you are, other than the result of some mad wizard meddling in the gods' domain. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You can attempt to grapple creatures two size categories larger than yourself, and you have advantage on grappling checks you make on your turn against creatures that are at least one size category smaller than you.\n \u2022 You have a long, hooked beak that you can use to make unarmed strikes. On a hit with it, you deal piercing damage equal to 1d6 + your Strength modifier instead of the bludgeoning damage normal for an unarmed strike.",
	description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 to any ability score.]",
	weaponOptions : [{
		baseWeapon : "unarmed strike",
		regExpSearch : /^(?=.*owlbearman)(?=.*beak).*$/i,
		name : "Owlbearman Beak",
		source : ["VSoS", 18],
		damage : [1, 6, "piercing"],
		selectNow : true
	}],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I can attempt to grapple creatures up to two sizes larger, and I have advantage on checks to grapple smaller creatures. I have a hooked beak I can use to make unarmed strikes, dealing 1d6 + Strength in piercing damage on a hit. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["porterling"] = {
	name : "Porterling",
	source : ["VSoS", 16],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You are a porterling, parented both by a human and either a gnome or a halfling. You stand about as tall as a dwarf, but are far leaner—and if fathered by a gnome, also somewhat top-heavy. Though they are often confused for dwarves, porterlings can only rarely grow large or thick beards. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have advantage on checks you make to escape grapple or to slip bindings.\n \u2022 You suffer no penalty for squeezing into a space that is only large enough for a creature that is one size smaller than you.\n \u2022 You can roll a d8 whenever you make a long or high jump, adding the number rolled to the number of feet you cover, even when making a standing jump. This extra distance costs movement as normal.",
	description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 to any ability score.]",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have advantage on checks to escape grapples and slip bindings. I can squeeze into a space one size smaller without penalty. I can add 1d8 to my long and high jump distance. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["psionic"] = {
	name : "Psionic",
	source : ["VSoS", 17],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Most humans possess some dull psionic potential, but those who unlock their psionic spark transcend their peers. Sometimes, these humans are indistinguishable from ordinary folks, but other times their psionic awakening leaves a tell-tale mark: stark white hair, glowing pupils, or hair and clothing that float and drift around them. \n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You can use your action to probe the surface level of a creature's emotions. You must be able to see the creature and it must be within 30 feet and have an Intelligence of 3 or higher. You learn the creature's emotional state and, at the GM's discretion, one of the creature's Bonds.\n \u2022 You know the mage hand cantrip, and the hand is invisible when you cast the cantrip with this trait.\n   Starting at 3rd level, you can cast the unseen servant spell with this trait. Starting at 5th level, you can also cast the levitate spell with this trait. Once you cast levitate with this trait, you can't cast that spell with it again until you finish a long rest. You can also cast either of those spells using any spell slots you have of the appropriate level.\n   Intelligence, Wisdom, or Charisma is your spellcasting ability for these spells when you cast them with this trait (choose when you select this race).",
	description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 to any ability score.]",
	features : {
		"empathy" : {
			name : "Empathy",
			minlevel : 1,
			action : [["action", ""]],
		}
	},
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
        name : "Psionic (level 1)",
        spells : ["mage hand"],
        selection : ["mage hand"],
        firstCol : "atwill"
    }, {
        name : "Psionic (level 3)",
        spells : ["unseen servant"],
        selection : ["unseen servant"],
        firstCol : "oncelr",
        times : levels.map( function(n) {
			return n < 3 ? 0 : 1;
		})
    }, {
        name : "Psionic (level 5)",
        spells : ["levitate"],
        selection : ["levitate"],
        firstCol : "oncelr",
		times : levels.map( function(n) {
			return n < 5 ? 0 : 1;
		})
    }],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "As an action, choose 1 crea within 30 feet and Int 3 or higher to read surface level emotions. I know the Mage Hand cantrip and the hand is invis. At 3rd level, cast Unseen Servant 1/LR. At 5th, cast Levitate 1/LR. Spells use Int, Wis, or Cha and can also be cast with spell slots. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["proto-man"] = {
	name : "Proto-Man",
	source : ["VSoS", 17],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You come from a place of massive flora and ancient creatures; your people are hearty and robust, much like very early humans. You gain the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You advantage vs. saving throws against being frightened.\n \u2022 When you take a short rest, you can automatically regain 1 hit die and can choose to spend it immediately. You can't use the ability again until you finish a long rest.",
	description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 to any ability score.]",
	savetxt : {
		adv_vs : ["Frightened"],
	},
	usages : 1,
	recovery : "long rest",
	limfeaname : "Recover 1 HD on SR",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have adv. in saving throws against being frightened. Once per long rest, when I take a short rest, I can regain 1 hit die and can spend it immediately. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["reptiloid"] = {
	name : "Reptiloid",
	source : ["VSoS", 18],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You bear the abrasive skin, slitted eyes, and split tongue of a reptile—perhaps due to a dragonborn or kobold parent—which grant you the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 When you take the Attack action on your turn, you can replace one of your attacks with a lob of acid from your mouth. This is a special ranged attack with a range of 30 feet. You are proficient with it, and you add your Dexterity modifier to its attack and damage rolls. On a hit, the target takes 1d10 acid damage. This damage increases by 1d10 when you reach 5th level (2d10), 11th level (3d10), and 17th level (4d10).\n   You can use your Acid Spit a number of times equal to your proficiency bonus, and you regain all expended uses when you finish a long rest.",
	description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 to any ability score.]",
	usages : "Prof bonus times per",
	recovery : "long rest",
	usagescalc : "event.value = What('Proficiency Bonus');",
	limfeaname : "Acid Spit",
	additional : levels.map( function(n) {
		return n < 5 ? "1d10" : n < 11 ? "2d10" : n < 17 ? "3d10" : "4d10";
	}),
	weaponOptions : [{
		regExpSearch : /^(?=.*acid)(?=.*spit).*$/i,
		name : "Acid Spit",
		source : ["VSoS", 18],
		ability : 2,
		type : "Natural",
		damage : ["C", 10, "acid"],
		range : "30 ft",
		description : "Replaces an attack during Attack action; prof. times per long rest",
		selectNow : true
	}],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "Prof. times per long rest with the Attack action, I can replace an attack by spitting acid. Ranged attack 30 ft, hit: 1d10+Dex acid damage. +1d10 CL5/11/17 [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["roguean"] = {
	name : "Roguean",
	source : ["VSoS", 18],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "You hail from an icy, desolate land, prone to dramatic swings in temperature. Surviving the interminable harshness of your home gives you the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have resistance to cold damage.\n \u2022 You can tolerate temperatures as low as −100 degrees Fahrenheit and as high as 300 degrees Fahrenheit.\n \u2022 You have darkvision, the ability to see in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
	description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 to any ability score.]",
	vision : ["Darkvision", 60],
	dmgres : ["Cold"],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have resistance to cold damage and can tolerate temperatures from -100 to 300 Fahrenheit. I have darkvision out to 60 feet. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["stoneborn"] = {
	name : "Stoneborn",
	source : ["VSoS", 18],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "With cracked and abrasive skin, stoneborn appear as if they were roughly hewn from granite and have similarly rigid personalities. These near-humans are proud of their connection to Elemental Earth and believe themselves conquerors, fated to rule over every stone. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 Your Armor Class increases by 1.\n \u2022 You have advantage on ability checks and saving throws you make to resist being knocked prone or moved against you will.\n \u2022 By placing your hand on natural stone and using your action to focus, you can feel the presence of any natural gems or metals within 100 feet of you.", 
	description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 to any ability score.]",
	limfeaname : "Sense minerals",
	action: ["action", ""],
	extraAC : [{
		mod : 1,
		text : "I gain a +1 bonus to AC when using my action to sense minerals",
	}],
	savetxt : {
		adv_vs : ["being knocked prone or moved"],
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "My AC increases by 1. I have advantage on checks and saving throws to avoid being knocked down or moved. I can touch natural stone and use my action sense natural gems/metals within 100 feet. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["stheno"] = {
	name : "Stheno",
	source : ["VSoS", 18],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "The offspring of medusas—named sthenos—are usually conceived before the mother begins their transformation. With sharp features and a nest of snakes for hair, sthenos can be easily mistaken for their monstrous parent, but possess a gaze that falls short of turning people into stone.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 When you take the Attack action on your turn, you can replace one of your attacks with an immobilizing gaze. Choose a creature you can see within 60 feet of you that can see you to make a Constitution saving throw (DC = 8 + your Constitution modifier + your proficiency bonus). A creature that is immune to being restrained automatically succeeds this saving throw. On a failed save, the creature is incapacitated and its speed becomes 0 until the start of your next turn.\n   You can use your Immobilizing Gaze a number of times equal to your proficiency bonus, and you regain all expended uses when you finish a long rest.",
	description : "Prof. times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a Con save, fail: incapacitated and speed reduced to 0 until my next turn. [+1 to any ability score.]",
	usages : "Prof bonus times per",
	recovery : "long rest",
	usagescalc : "event.value = What('Proficiency Bonus');",
	limfeaname : "Immobilizing Gaze",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Strength.]';",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Dexterity.]';",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Constitution.]';",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Intelligence.]';",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Wisdom.]';",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		calculate : "event.value = Number(What('Proficiency Bonus')) + ' (prof bonus) times per LR, with Attack action, I can replace an attack: A creature within 60 feet that can see me (immune to restrained: auto success) makes a DC ' + (8 + Number(What('Proficiency Bonus')) + Number(What('Con Mod'))) + ' Con save (DC = 8 + prof bonus + Con mod), fail: incap. and speed 0 until my next turn. [+1 Charisma.]';",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["tauran"] = {
	name : "Tauran",
	source : ["VSoS", 19],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Your large nose, strong jaw, and wide head do much to reveal your distantly bovine nature, but the prominent bull-horns atop your head reveal to all that you are half-minotaur. Taurans tower over most people and can solve mazes with ease, but typically possess only a shadow of their minotaur parent's might. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You always know which direction is north, and you have advantage on any Wisdom(Survival) check you make to navigate or track.\n \u2022 On any turn in which you only move in a straight line, your speed increases by 10 feet.\n \u2022 You have two horns that you can use to effectively gore your enemies. The horns are a natural melee weapon that you can use to make unarmed strikes. On a hit with them, you deal piercing damage equal to 1d6 + your Strength modifier, instead of the bludgeoning damage normal for an unarmed strike.", 
	description : "I always know which way is north, and have adv. on Wis(Sur) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 to any ability score.]",
	weaponOptions : [{
		baseWeapon : "unarmed strike",
		regExpSearch : /^(?=.*tauran)(?=.*horns).*$/i,
		name : "Tauran Horns",
		source : ["VSoS", 19],
		damage : [1, 6, "piercing"],
		selectNow : true
	}],
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I always know which way is north, and have adv. on Wisdom (Survival) checks to navigate or track. If I move only in a straight line on my turn, my speed increases by 10 ft for that turn. I can use my horns to make unarmed attacks, dealing 1d6 + Strength in piercing damage on a hit. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["troll-blooded"] = {
	name : "Troll-Blooded",
	source : ["VSoS", 19],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "With their green-tinted and boil-ridden skin, spindly fingers, and pointed teeth, few people will mark troll-blooded individuals as half-human. These half-humans exclusively favor the look of their troll parentage and have immense difficulty in human society. You have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You retain some of the regenerative properties of your troll parentage. Whenever you have no more than one-fourth of your maximum hit points (rounded down), you regain 1 hit point each minute. You can't use this trait if you have 0 hit points.",
	description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 to any ability score.]",
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "Whenever I have more than zero but fewer than one-fourth of my maximum hit points (rounded down), I regain 1 hit point each minute. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["two-headed"] = {
	name : "Two-Headed",
	source : ["VSoS", 19],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Like ettins, you have two heads with differing personalities that jointly control your body.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have advantage on saving throws you make to avoid or end the following conditions on yourself: blinded, charmed, deafened, frightened.\n \u2022 Because one of your heads is always awake, you retain consciousness when you take a long rest.",
	description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 to any ability score.]",
	savetxt : {
		adv_vs : ["blinded", "charmed", "deafened", "frightened"],
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I can retain consciousness while taking a long rest. I have advantage against blinded, charmed, deafened, and frightened. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["windswept"] = {
	name : "Windswept",
	source : ["VSoS", 19],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Carefree and constantly possessed of wanderlust, the extraordinarily pale windswept embody their connection to Elemental Air. Windswept humans are never likely to sleep in the same bed for two nights in a row; they are always moving, always exploring, and always following the wind. You are lighter than a normal human, capable of floating gently on the breeze, and have faint inborn power over the winds, which grant you have the following racial traits:\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 You have resistance to lightning damage.\n \u2022 You know the message cantrip. Starting at 3rd level, you can cast the feather fall spell with this trait. Starting at 5th level, you can also cast the gust of wind spell with this trait, without requiring a material component. Once you cast gust of wind with this trait, you can't cast that spell with it again until you finish a long rest. You can also cast either of those spells using any spell slots you have of the appropriate level.\n \u2022 Intelligence, Wisdom, or Charisma is your spellcasting ability for these spells when you cast them with this trait (choose when you select this race).", 
	description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 to any ability score.]",
	dmgres: ["Lightning"],
	spellcastingAbility : [4,5,6],
	spellcastingBonus : [{
        name : "Windswept (level 1)",
        spells : ["message"],
        selection : ["message"],
        firstCol : "atwill"
    }, {
        name : "Windswept (level 3)",
        spells : ["feather fall"],
        selection : ["feather fall"],
        firstCol : "oncelr",
        times : levels.map( function(n) {
			return n < 3 ? 0 : 1;
		})
    }, {
        name : "Windswept (level 5)",
        spells : ["gust of wind"],
        selection : ["gust of wind"],
        firstCol : "oncelr",
		times : levels.map( function(n) {
			return n < 5 ? 0 : 1;
		})
    }],
	spellChanges : {
		"gust of wind" : {
			components : "V,S",
			compMaterial : "",
			changes : "Casting gust of wind no longer requires material components"
		}
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I resist lightning damage and I know the Message cantrip. At 3rd level, I can cast Feather Fall 1/LR. At 5th, I can cast Gust of Wind 1/LR. Spells use Intelligence, Wisdom, or Charisma and can also be cast with spell slots. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

FeatsList["winged"] = {
	name : "Winged",
	source : ["VSoS", 19],
	prerequisite : "Chosen at 1st level only, Near-Human variant",
	prereqeval : function(v) {
		return classes.totallevel === 1 && CurrentRace.known === 'human' && CurrentRace.variant;
	},
	descriptionFull : "Winged humans, sometimes called Icarusians, are the offspring of aarakocra, harpies, or birdfolk. Depending on their parentage, these humans might possess feathers, talons, or beaks.\n \u2022 Increase one ability score of your choice by 1, to a maximum of 20.\n \u2022 Because of your wings, you have a flying speed equal to your walking speed. You can't use this flying speed if you're wearing medium or heavy armor.", 
	description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 to any ability score.]",
	speed : {
		fly : { spd : "walk", enc : "walk" },
	},
	choices : ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"],
	"strength" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Strength]",
		scores : [1, 0, 0, 0, 0, 0],
	},
	"dexterity" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Dexterity]",
		scores : [0, 1, 0, 0, 0, 0],
	},
	"constitution" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Constitution]",
		scores : [0, 0, 1, 0, 0, 0],
	},
	"intelligence" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Intelligence]",
		scores : [0, 0, 0, 1, 0, 0],
	},
	"wisdom" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Wisdom]",
		scores : [0, 0, 0, 0, 1, 0],
	},
	"charisma" : {
		description : "I have a flying speed equal to my walking speed. I can't use my flying speed while wearing medium or heavy armor. [+1 Charisma]",
		scores : [0, 0, 0, 0, 0, 1],
	}
};

// * Chapter 4 feats

FeatsList["battle adept"] = {
    name : "Battle Adept",
    source : ["VSoS", 282],
    calculate : "event.value = 'I learn two maneuvers of my choice from those available to the Captain class or Grey Watchman subclass of the Warden class (2nd page \"Choose Feature\" button). The saving throw DC for this is ' + (8 + Number(How('Proficiency Bonus')) + Math.max(Number(What('Str Mod')), Number(What('Dex Mod')))) + ' (8 + proficiency bonus + Str/Dex mod). I gain one battle die (d6), which I regain when I finish a short rest or roll initiative.';",
    description : "",
    descriptionFull : "",
    // due to limitations, I have to do both separately.
    bonusClassExtrachoices : [{
        "class" : "captain",
        feature : "war tactics",
        bonus : 2
    }, {
        "class" : "warden",
        "subclass" : "warden-grey watchman",
        "feature" : "subclassfeature3",
        "bonus" : 2
    }],
	extraLimitedFeatures : [{
		name : "Battle Dice",
		usages : 1,
        additional : 'd6',
		recovery : "short rest",
        addToExisting : true
	}]
};

// ! This section adds classes

// * Alchemist class
ClassList["alchemist"] = {
    name: "Alchemist",
    regExpSearch: /alchemist/i,
    source: ["VSoS", 28],
    primaryAbility: "Intelligence or Dexterity",
    prereqs: "Intelligence 13",
    die: 6,
    improvements: [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5],
    saves: ["Dex", "Int"],
    abilitySave: 4,
    skillstxt: {
        primary: "Choose three from Arcana, History, Insight, Medicine, Nature, Perception, Sleight of Hand, Survival",
    },
    toolProfs: {
        primary: ["Alchemist's supplies", "herbalism kit"],
        secondary: ["Alchemist's supplies"]
    },
    armorProfs: {
        primary: [true, false, false, false],
        secondary: [true, false, false, false]
    },
    weaponProfs: {
        primary: [true, false, ["bombs"]],
        secondary: [false, false, ["bombs"]]
    },
    equipment: "Alchemist starting equipment: " +
        "\n \u2022 light crossbow and 20 bolts or any simple weapon;" +
        "\n \u2022 An explorer's pack or a scholar's pack;" +
        "\n \u2022 Alchemist's supplies;" +
        "\n \u2022 A vial of acid or a flask of alchemist's fire or a vial of basic poison;" +
        "\n \u2022 Leather armor and a dagger",
    subclasses: ["Field of Study", []],
    attacks: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    features: {
        "natural philosopher": {
            name: "Natural Philosopher",
            source: ["VSoS", 28],
            minlevel: 1,
            description: desc([
                "I can add half my prof. bonus rounded up to any ability check to identify herbs, potions,",
                "poisons, or other alchemical substances, on top of any normal prof. bonus."
            ])
        },
        "bombs": {
            name: "Bombs",
            source: ["VSoS", 29],
            minlevel: 1,
            description: desc([
                "On short or long rest, create bombs with necessary materials that go inert after 24 hours.",
                "My bomb save DC is 8 + prof. bonus + my Int mod. Once per turn I can take the Use an",
                "Object action to prime and throw a bomb. This bomb can use Int mod for the damage roll.",
                "Primed bomb damage increases to 2d10 at 5th, 3d10 at 11th, and 4d10 at 17th."
            ]),
			weaponOptions : [{
				name : "Primed Bomb",
				regExpSearch : /primed bomb/i,
				source : ["VSoS", 29],
				baseWeapon : "bomb",
				damage : ["C", 10, "Fire"],	
				tooltip : "Special: Once per turn, I can use the \"Use an Object\" action to prime and throw a bomb. When priming a bomb, I get to add my Intelligence modifier instead of my Dexterity to the bomb's damage roll." + "\n   Additionally, I can use a bonus action to empty some of the bomb's explosive material to permanently remove the blast radius from this bomb, dealing damage only to the bomb's target.",
				selectNow : true
			}, {
				name : "Bomb (Alchemist)",
				regExpSearch : /bomb \(alchemist\)/i,
				source : ["VSoS", 29],
				baseWeapon : "bomb",
				description : "Finesse, special, Dex save or \u00BD dmg to all in 7.5 ft; See tool tip",
				tooltip : "   Special: When a bomb hits a target, it explodes in a 5-foot radius and is destroyed. The bomb can be thrown at an unoccupied space within its range. Each creature other than the target within the blast radius must succeed on an Intelligence saving throw, taking half the damage rolled on a failed save or no damage on a successful one.\n   Additionally, as a bonus action, you can empty some of the bomb's explosive material to permanently remove the blast radius from this bomb, dealing damage only to the bomb's target.",			
				damage : ["C", 10, "Fire"],	
				selectNow : true
			}],
            calcChanges: {
				atkAdd : [
					function(fields, v) { 
						if((/bomb/i).test(v.WeaponTextName)) { // * Proficient in all bombs
							// * This replaces the bombs normal Dex save to an Int save
							fields.Description = fields.Description.replace(/dc \d+ dex save/i, "Dex save");
							fields.Description_Tooltip = fields.Description_Tooltip.replace(/on a DC 11 Dexterity/i, "an Intelligence");
							fields.Proficiency = true;
							fields.Mod = 4;
						};
					}
				],
                atkCalc: [
                    function (fields, v, output) {
                        if (((/bomb/i).test(v.WeaponTextName) || v.baseWeapon == "bomb") && (/\(?primed\)?/i).test(v.WeaponTextName)) { // * Only applies to primed bombs
							/* 
								* Since this only applies to primed bombs, abilitytodamage is set to true 
								* But we changed the ability to 4 and used dc true to show the Save DC of 8 + PB + Int mod
								* So currently primed bombs are adding int mod to the damage instead of dex from the original
								* We need to change it back to Dex if it is higher than Int
							*/
							var mod = What("Str Mod") > What("Dex Mod") ? What("Str Mod") : What("Dex Mod");
							if(What("Int Mod") < mod) {
								output.extraDmg = Math.max(mod - What("Int Mod"), 0);
							};
                        };
						if((/bomb/i).test(v.WeaponTextName) && !(/\(?primed\)?/i).test(v.WeaponTextName) && !v.theWea.excludeBombDamage) { // * Only applies to non-primed bombs that CAN do damage
							output.extraDmg = (What("Str Mod") > What("Dex Mod") ? What("Str Mod") : What("Dex Mod")) - What("Int Mod");
						}
                    },
                    "When priming a bomb, I can add my Intelligence modifier instead of my Dexterity to the bomb's damage roll."
                ],
            },
			usages : "10 + 2\xD7 my alchemist level of Bombs per ",
			usagescalc : "event.value = 2 * classes.known.alchemist.level + 10;",
			recovery : "short rest",
            action: [["action", "Prime & Throw a Bomb"], ["bonus action", "Remove Some of the Bomb's Material"]],
			extraLimitedFeatures : [{
				name : "Prime a Bomb",
				usages : 1,
				recovery : "Turn"
			}]
        },
        "bomb formulae": {
            name: "Bomb Formulae",
            source: [["VSoS", 29], ["VSoS", 31]],
            minlevel: 2,
            additional: levels.map(function (n) {
                return n < 2 ? "" : (n < 5 ? "3" : n < 7 ? "4" : n < 9 ? "5" : n < 11 ? "6" : n < 13 ? "7" : n < 15 ? "8" : n < 17 ? "9" : n < 19 ? "10" : "11") + " bomb formulae known";
            }),
            description: desc([
                "I learn bomb formulae I can use once per turn to modify my bombs when I prime them.",
                "Use the \"Choose Feature\" button above to add Bomb Formulae to the notes pages." ,
                "When I gain a level in this class, I can replace a bomb formula I know with another."
            ]),
            toNotesPage : [{
                name: "Known Bomb Formulae",
                source: ["VSoS", 29],
                note: ["I know these formulae and can apply them once per turn when I prime a bomb.",
                       "Known Bomb formulae are written here as follows:\n" + "\u25C6Bomb Formula [Damage Die, Type - Saving Throw]",
					   "Description of additional effects written here."
                ]
            }],
            extraname: "Bomb Formulae",
            extrachoices: ["Acid Bomb", "Bramble Bomb", "Cryo Bomb", "Holy Bomb", "Impact Bomb", "Incendiary Bomb", "Laughing Gas Bomb", "Lightning Bomb", "Nonlethal Bomb", "Oil Bomb", "Prismatic Bomb", "Psionic Bomb", "Quiet Bomb", "Seeking Bomb", "Smoke Bomb", "Sonic Bomb", "Stink Bomb", "Teleportation Bomb", "Thermobaric Bomb", "Withering Bomb"],
            extraTimes: levels.map(function (n) {
                return n < 2 ? 0 : (n < 5 ? 3 : n < 7 ? 4 : n < 9 ? 5 : n < 11 ? 6 : n < 13 ? 7 : n < 15 ? 8 : n < 17 ? 9 : n < 19 ? 10 : 11);
            }),
            "acid bomb": {
                name: "Acid Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Acid Bomb [d6 Acid - Dexterity]",
                    note: "All affected take the same amount of damage again at the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Acid Bomb",
					source : ["VSoS", 31],
					regExpSearch : /acid bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 4, "Acid"],
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bacid\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
                                fields.Description += (fields.Description ? '; ' : '') + "Crea(s) take same dmg at end of next turn";
							}
                        },
                        "When the word 'Acid' is added to the title one of my Bomb attacks, the attack is treated as one of my Acid Bombs."
                    ]
                }
            },
            "bramble bomb": {
                name: "Bramble Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Bramble Bomb [No Damage - No Save]",
                    note: "\nBlast radius becomes difficult terrain for 1 minute; prone creatures must Str save before it can move or stand",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Bramble Bomb",
					source : ["VSoS", 31],
					regExpSearch : /bramble bomb/i,
					baseWeapon : "bomb",
					ability : 0,
					abilitytodamage : false,
					excludeBombDamage : true,
					damage :  ["", "", ""]
				}],
				calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bbramble\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Diff. terrain in 7.5 ft for 1 min, if prone on detonate, Str save to move or stand");
                            }
                        },
                        "When the word 'Bramble' is added to the title one of my Bomb attacks, the attack is treated as one of my Bramble Bombs."
                    ]
                }
            },
            "cryo bomb": {
                name: "Cryo Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Cryo Bomb [d8 Cold - Constitution]",
                    note: "\nAll affected get -10 ft move speed until the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Cryo Bomb",
					source : ["VSoS", 31],
					regExpSearch : /cryo bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 8, "Cold"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bcryo\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg and -10 ft speed to all");
								fields.Description_Tooltip = fields.Description_Tooltip.replace(/an intelligence/i, "on a Constitution");
                            }
                        },
                        "When the word 'Cryo' is added to the title one of my Bomb attacks, the attack is treated as one of my Cryo Bombs."
                    ]
                }
            },
            "holy bomb": {
                name: "Holy Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Holy Bomb [d8 Radiant - Dexterity]",
                    note: "\nThis bomb's damage dice are d6s vs Celestials, or d12s vs Fiends/Undead",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Holy Bomb",
					source : ["VSoS", 31],
					regExpSearch : /holy bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 10, "Radiant"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bholy\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
                                fields.Description +=  (fields.Description ? '; ' : '') + "d6 vs Celestials; d12 vs Fiends/Undead";
                            }
                        },
                        "When the word 'Holy' is added to the title one of my Bomb attacks, the attack is treated as one of my Holy Bombs"
                    ]
                }
            },
            "impact bomb": {
                name: "Impact Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Impact Bomb [d8 Force - Dexterity]",
                    note: "\nAll affected are pushed 5 feet away from the blast",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Impact Bomb",
					source : ["VSoS", 31],
					regExpSearch : /impact bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 8, "Force"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bimpact\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dmg to all/i, "dmg and pushed 5 ft away to all");
                            }
                        },
                        "When the word 'Impact' is added to the title one of my Bomb attacks, the attack is treated as one of my Impact Bombs."
                    ]
                }
            },
            "incendiary bomb": {
                name: "Incendiary Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Incendiary Bomb [d6 Fire - Dexterity]",
                    note: "\nUntil start of my next turn, creatures that end turn in blast radius take half damage."+
                           " Flammable objects that aren't being worn or carried ignite",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Incendiary Bomb",
					source : ["VSoS", 32],
					regExpSearch : /incendiary bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 6, "Force"]
				}],                
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bincendiary\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {								
                                fields.Description += (fields.Description ? '; ' : '') + "Crea(s) still in rad. next turn take \u00BD dmg";
                            }
                        },
                        "When the word 'Incendiary' is added to the title one of my Bomb attacks, the attack is treated as one of my Incendiary Bombs."
                    ]
                }
            },
            "laughing gas bomb": {
                name: "Laughing Gas Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Laughing Gas Bomb [d6 Poison - Constitution]",
                    note: "\nAll affected fall prone and are immune to this effect for 24 hours",
                    amendTo: "Known Bomb Formulae"
                }],  
				weaponOptions : [{
					name : "Laughing Gas Bomb",
					source : ["VSoS", 32],
					regExpSearch : /laughing gas bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 6, "Poison"]
				}], 
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\blaughing gas\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg and fall prone to all");
                            }
                        },
                        "When the word 'Laughing Gas' is added to the title one of my Bomb attacks, the attack is treated as one of my Laughing Gas Bombs."
                    ]
                }
            },
            "lightning bomb": {
                name: "Lightning Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Lightning Bomb [d8 Lightning - Dexterity]",
                    note: "\nAll affected can't take reactions until the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Lightning Bomb",
					source : ["VSoS", 32],
					regExpSearch : /lightning bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 8, "Lightning"]
				}],  
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\blightning\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/in 7\.5 ft/i, "in 7.5 ft and no rea. til end of next turn");
                            }
                        },
                        "When the word 'Lightning' is added to the title one of my Bomb attacks, the attack is treated as one of my Lightning Bombs."
                    ]
                }
            },
            "nonlethal bomb": {
                name: "Nonlethal Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Nonlethal Bomb [d8 Bludgeoning - Dexterity]",
                    note: "\nBlast radius ignores 1/2 & 3/4 cover. Creatures dropped to 0 hp are K.O'd, stable.",
                    amendTo: "Known Bomb Formulae"
                }],
                weaponOptions : [{
					name : "Nonlethal Bomb",
					source : ["VSoS", 32],
					regExpSearch : /nonlethal bomb/i,
					baseWeapon : "bomb",
					damage :  ["C", 8, "Bludgeoning"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bnonlethal\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description += (fields.Description ? '; ' : '') + "Blast ignores all but full cover";
                            }
                        },
                        "When the word 'Nonlethal' is added to the title one of my Bomb attacks, the attack is treated as one of my Nonlethal Bombs."
                    ]
                }
            },
            "oil bomb": {
                name: "Oil Bomb Formula",
                description: " See notes",
                additional: levels.map(function(n) { return "Max oil damage: " + Math.ceil(n/2) + "d6"}),
                toNotesPage: [{
                    name: "Oil Bomb [d8 Bludgeoning - Dexterity]",
                    note: "\nBlast radius coats creatures in oil. Oil can be removed with a gallon of water."+
                          "\nThe next fire damage to coated creature deals +1d6 fire damage per damage die rolled. Extra fire damage dice added cannot exceed half my alchemist level, rounded up",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Oil Bomb",
					source : ["VSoS", 32],
					regExpSearch : /oil bomb/i,
					baseWeapon : "bomb",
					ability : 0,
					abilitytodamage : false,
					excludeBombDamage : true,
					damage : ["", "", ""]
				}],
				calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\boil\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Dex save or covered in oil to all in 7.5 ft");
                            }
                        },
                        "When the word 'Oil' is added to the title one of my Bomb attacks, the attack is treated as one of my Oil Bombs."
                    ]
                }
            },
            "prismatic bomb": {
                name: "Prismatic Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Prismatic Bomb [d8 damage dice]",
                    note: "\nDamage type and save ability are determined by rolling on the below tables."+
                        "\nd6    Damage Type        d6    Saving Throw"+
                        "\n1      Acid                      1-2    Dexterity"+
                        "\n2      Cold                      3-4    Constitution"+
                        "\n3      Fire                        5-6   Wisdom"+
                        "\n4      Lightning"+
                        "\n5      Poison"+
                        "\n6      Radiant",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Prismatic Bomb",
					source : ["VSoS", 32],
					regExpSearch : /prismatic bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 8, ""]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bprismatic\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Save") + (fields.Description ? '; ' : '') + "See Table for dmg & save type" ;
                            }
                        },
                        "When the word 'Prismatic' is added to the title one of my Bomb attacks, the attack is treated as one of my Prismatic Bombs."
                    ]
                }
            },
            "psionic bomb": {
                name: "Psionic Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Psionic Bomb [d6 Psychic - Wisdom]",
                    note: "\nAll affected have disadv. on concentration saves until the end of their next turn, including against this bomb's damage.",
                    amendTo: "Known Bomb Formulae"
                }],
                weaponOptions : [{
					name : "Psionic Bomb",
					source : ["VSoS", 33],
					regExpSearch : /psionic bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 6, "Psychic"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bpsionic\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Wis save").replace(/dmg to all/i, "dmg and disadv. on Conc. saves til end of next turn to all");
                            }
                        },
                        "When the word 'Psionic' is added to the title one of my Bomb attacks, the attack is treated as one of my Psionic Bombs."
                    ]
                }
            },
            "quiet bomb": {
                name: "Quiet Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Quiet Bomb [d6 Fire - Dexterity]",
                    note: "\nOnly audible out 10 ft, makes no light. Disadv. on ability checks to detect blast",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Quiet Bomb",
					source : ["VSoS", 33],
					regExpSearch : /quiet bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 8, "Fire"]
				}],
                calcChanges: {
                    atkAdd : [
                        function (fields, v) {
                            if (/\bquiet\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description += (fields.Description ? '; ' : '') + "Disadv. on ability checks to detect blast";
                            }
                        },
                        "When the word 'Quiet' is added to the title one of my Bomb attacks, the attack is treated as one of my Quiet Bombs."
                    ]
                }
            },
            "seeking bomb": {
                name: "Seeking Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Seeking Bomb [d6 Fire - Dexterity]",
                    note: "\nRanged attack rolls with this bomb don't get disadv. when within 5 ft of a hostile",
                    amendTo: "Known Bomb Formulae"
                }],
                weaponOptions : [{
					name : "Seeking Bomb",
					source : ["VSoS", 33],
					regExpSearch : /seeking bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 6, "Fire"]
				}],
                calcChanges: {
                    atkAdd : [
                        function (fields, v) {
                            if (/\bseeking\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description += (fields.Description ? '; ' : '') + "No disadv. when within 5 ft of a hostile";
                            }
                        },
                        "When the word 'Seeking' is added to the title one of my Bomb attacks, the attack is treated as one of my Seeking Bombs."
                    ]
                }
            },
            "smoke bomb": {
                name: "Smoke Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Smoke Bomb [No Damage - No Save]",
                    note: "\nFills a 10 ft rad. sphere with heavily-obscuring smoke that lasts (Int mod min 1) rounds. Wind speeds of at least 10 miles/hour disperses it. The smoke spreads around corners. Once thrown, I cannot throw another smoke bomb for 1 minute",
                    amendTo: "Known Bomb Formulae"
                }],
                weaponOptions : [{
					name : "Smoke Bomb",
					source : ["VSoS", 33],
					regExpSearch : /smoke bomb/i,
					baseWeapon : "bomb",
					ability : 0,
					abilitytodamage : false,
					excludeBombDamage : true,
					damage : ["", "", ""]
				}],
				calcChanges: {
					atkAdd : [
						function (fields, v) { 
							if (/\bsmoke\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Smoke fills 10 ft rad. sphere") + (fields.Description ? '; ' : '') + "Lasts " + Math.max(What("Int Mod"), 1) + " round(s)";
							}
						},
						"When the word 'Smoke' is added to the title one of my Bomb attacks, the attack is treated as one of my Sonic Bombs."
					]
				}
            },
            "sonic bomb": {
                name: "Sonic Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Sonic Bomb [d6 Thunder - Constitution]",
                    note: "\nCreatures affected by this bomb are deafened until the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Sonic Bomb",
					source : ["VSoS", 33],
					regExpSearch : /sonic bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 6, "Thunder"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bsonic\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg and deaf til end of next turn to all");
                            }
                        },
                        "When the word 'Sonic' is added to the title one of my Bomb attacks, the attack is treated as one of my Sonic Bombs."
                    ]
                }
            },
            "stink bomb": {
                name: "Stink Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Stink Bomb [d8 Poison - Constitution]",
                    note: "\nAffected have disadv. on ability checks they make until the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
                weaponOptions : [{
					name : "Stink Bomb",
					source : ["VSoS", 33],
					regExpSearch : /stink bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 8, "Poison"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bstink\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg and disadv. on ability checks til end of next turn to all");
                            }
                        },
                        "When the word 'Stink' is added to the title one of my Bomb attacks, the attack is treated as one of my Stink Bombs."
                    ]
                }
            },
            "teleportation bomb": {
                name: "Teleportation Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Teleportation Bomb [No Damage - No Save]",
                    note: "\nInstantly teleports me to where it explodes. Fails if it explodes over 30 ft away",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Teleportation Bomb",
					source : ["VSoS", 33],
					regExpSearch : /teleportation bomb/i,
					baseWeapon : "bomb",
					ability : 0,
					abilitytodamage : false,
					excludeBombDamage : true,
					damage : ["", "", ""]
				}],
				calcChanges : {
					atkAdd : [
						function(fields, v) { 
							if(/\bteleportation\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Teleport to where it explodes");
								fields.Range = "30 ft";
							}
						},
						"When the word 'Teleportation' is added to the title one of my Bomb attacks, the attack is treated as one of my Thermobaric Bombs."
					]
				}
            },
            "thermobaric bomb": {
                name: "Thermobaric Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Thermobaric Bomb [d6 Fire - Dexterity]",
                    note: "\nThis bomb's blast radius is 10 feet instead of 15 feet",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Thermobaric Bomb",
					source : ["VSoS", 33],
					regExpSearch : /thermobaric bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 6, "Fire"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bthermobaric\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/7\.5 ft/i, "10 ft");
                            }
                        },
                        "When the word 'Thermobaric' is added to the title one of my Bomb attacks, the attack is treated as one of my Thermobaric Bombs."
                    ]
				}
            },
            "withering bomb": {
                name: "Withering Bomb Formula",
                description: " See notes",
                toNotesPage: [{
                    name: "Withering Bomb [d8 Necrotic - Constitution]",
                    note: "\nAll affected by this bomb cannot regain hit points until the end of their next turn",
                    amendTo: "Known Bomb Formulae"
                }],
				weaponOptions : [{
					name : "Withering Bomb",
					source : ["VSoS", 33],
					regExpSearch : /withering bomb/i,
					baseWeapon : "bomb",
					damage : ["C", 8, "Necrotic"]
				}],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (/\bwithering\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg and can't regain HP til end of next turn to all");
                            }
                        },
                        "When the word 'Withering' is added to the title one of my Bomb attacks, the attack is treated as one of my Withering Bombs."
                    ]
                }
            }
        },
        "subclassfeature2": {
            name: "Field of Study",
            source: ["VSoS", 29],
            minlevel: 2,
            description: "\n    " + "Choose a Field of Study in the \"Class\" field."
        },
        "reagent": {
            name: "Reagent",
            source: ["VSoS", 29],
            minlevel: 3,
            description: desc([
                "I gain a pool of Reagent dice. I can expend reagent dice to:",
                "\u2022 add them to the damage of a primed bomb (number added can't exceed proficiency bonus).",
                "\u2022 Spend 10 min to brew potions that use my bomb save DC & retain potency for 24 hours.",
                "1/LR after a short rest, I can regain spent reagent dice I didn't use to brew potions."
            ]),
            toNotesPage: [{
                name: "Reagent Potions Table",
                note: [
                    "I can brew these potions by expending reagent dice, as long as I meet",
					"the Alchemist level requirement.",
                    "Potion                                     Cost        Alchemist Level",
                    "Potion of Climbing                 1 die           3rd",
                    "Potion of Growth                    1 die           3rd",
                    "Potion of Healing                    1 die           3rd",
                    "Potion of Water Breathing      1 die           3rd",
                    "Universal Solvent                    1 die           3rd",
                    "Cure-All                                  2 dice          7th",
                    "Potion of Greater Healing       2 dice          7th",
                    "Potion of Heroism                   2 dice          7th",
                    "Potion of Resistance               2 dice          7th",
                    "Sovereign Glue (1 ounce)        2 dice          7th",
                    "Potion of Dimunition               3 dice         14th",
                    "Potion of Flying                       4 dice          14th",
                    "Potion of Hill Giant Strength    4 dice         14th",
                    "Potion of Invisibility                 4 dice          14th",
                    "Potion of Superior Healing       4 dice         14th"
                ],
                popupName: "Alchemist's Reagent Potions Table",
                amendTo: "Poisoner's Poisons Table",
            }],
            additional : levels.map( function(n) {
				return n + " reagent dice";
			}),
            extraLimitedFeatures: [{
                name: "Reagent Synthesis",
                usages: 1,
                recovery: "long rest",
            }, {
				name : "Reagent Dice (d10)",
				usages: "Alchemist level",
				usagescalc : "event.value = classes.known.alchemist.level < 3 ? 0 : classes.known.alchemist.level;",
				recovery: "long rest",
			}]
        },
        "discoveries": {
            name: "Discoveries",
            source: ["VSoS", 30],
            minlevel: 4,
            additional: levels.map(function (n) {
                return n < 4 ? "" : (n < 6 ? "2" : n < 9 ? "3" : n < 13 ? "4" : n < 17 ? "5" : "6") + " discoveries known";
            }),
            description: desc([
                "Choose discoveries to learn by clicking the \"Choose Feature\" button above.",
                "When I gain a level in this class, I may replace a discovery I know with another."
            ]),
            extraname: "Discoveries",
            extrachoices: ["Fire in The Hole (prereq: 9th level Alchemist)", "Advanced Poisoner (prereq: 13th level Venomsmith)", "Alchemy of Ascendancy (prereq: 17th level Alchemist)", "Alchemy of Influence (prereq: 13th level Alchemist)", "Alchemy of Transformation (prereq: 13th level Alchemist)", "Arcane Study", "Ballistics Research", "Battle Training", "Beguiling Haze (prereq: 13th level Amorist)", "Buffered Metabolism (prereq: 13th level Xenoalchemist)", "Clotting Agent", "Craft Homonculus", "Demolition Spree (prereq: 13th level Mad Bomber)", "Explosive Missile", "Fire Brand", "Fire Eater", "Fortified Serum (prereq: 13th level Apothecary)", "Grenadier", "Dynamo Charger (prereq: 13th level Dynamo Engineer)", "Hemoreagent (prereq: 17th level Alchemist)", "Lazarus Bolt (prereq: 9th level Alchemist)", "Magnified Blast (prereq: 17th level Alchemist)", "Ooze Cowboy (prereq: 13th level Ooze Rancher)", "Poisoner", "Precision Explosives", "Reactionary Gulp (prereq: 17th level Alchemist)", "Recycled Potions", "Syringe", "Tri-Mutation (prereq: 13th level Mutagenist)"],
            extraTimes: [0, 0, 0, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6],
			"advanced poisoner (prereq: 13th level venomsmith)": {
                name: "Advanced Poisoner",
                source: ["VSoS", 34],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("venomsmith") !== -1 },
                description: "\n   " + "I can brew the poisons found on the notes page using reagent dice.",
                toNotesPage: [{
                    name: "Advanced Poisons Table",
                    note: [
                        "I can brew these poisons by expending reagent dice.",
                        "Poison                                 Cost",
                        "Burnt Othur Fumes            3 dice",
                        "Crawler Mucus                   3 dice,",
                        "Drow Poison                      3 dice",
                        "Pale Tinture                       4 dice",
                        "Midnight Tears                  5 dice",
                        "Wyvern Poison                  6 dice",
                    ],
                    popupName: "Advanced Poisoner's Poisons Table",
                    amendTo: "Reagent Potions Table",
                }]
            },
            "alchemy of ascendancy (prereq: 17th level alchemist)": {
                name: "Alchemy of Ascendancy",
                source: ["VSoS", 34],
                submenu: "[17th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 17 },
                description: "\n   " + "I can brew new potions found on the notes page using reagent dice.",
                toNotesPage: [{
                    name: "Alchemy of Ascendancy Potions Table",
                    note: [
                        "I can brew these potions by expending reagent dice.",
                        "Potion                                             Cost",
                        "Necromantic Draught                    4 dice",
                        "Oil of Etherealness                          4 dice,",
                        "Potion of Speed                              4 dice",
                        "Potion of Stone Giant Strength       4 dice",
                    ],
                    amendTo: "Reagent Potions Table",
                    popupName: "Alchemy of Ascendancy Potions Table",
                }]
            },
            "alchemy of influence (prereq: 13th level alchemist)": {
                name: "Alchemy of Influence",
                source: ["VSoS", 34],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 },
                description: "\n   " + "I can brew new potions found on the notes page using reagent dice.",
                toNotesPage: [{
                    name: "Alchemy of Influence Potions Table",
                    note: [
                        "I can brew these potions by expending reagent dice.",
                        "Potion                                             Cost",
                        "Potion of Animal Friendship           1 die",
                        "Philter of Love                                2 dice",
                        "Potion of Clairvoyance                   3 dice",
                        "Potion of Mind Reading                  3 dice",
                    ],
                    amendTo: "Reagent Potions Table",
                    popupName: "Alchemy of Influence Potions Table",
                }]
            },
            "alchemy of transformation (prereq: 13th level alchemist)": {
                name: "Alchemy of Transformation",
                source: ["VSoS", 34],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 },
                description: "\n   " + "I can brew new potions found on the notes page using reagent dice.",
                toNotesPage: [{
                    name: "Alchemy of Transformation Potions Table",
                    note: [
                        "I can brew these potions by expending reagent dice.",
                        "Potion                                    Cost",
                        "Potion of Slipperiness            2 die",
                        "Sandstone Solution               2 dice",
                        "Aqua Fortis                            3 dice",
                        "Chameleon Concoction         3 dice",
                        "Potion of Gaseous Form        3 dice",
                    ],
                    popupName: "Alchemy of Transformation Potions Table",
                    amendTo: "Reagent Potions Table",
                }]
            },
			"arcane study": {
                name: "Arcane Study",
                source: ["VSoS", 34],
                description: "\n   I learn 3 wizard cantrips. Intelligence is my Spellcasting ability for these cantrips.",
                spellcastingBonus: [{
                    name: "Arcane Study",
                    spellcastingAbility: 4,
                    "class": ["wizard"],
					times : levels.map(function (n) {
						return n < 3 ? 0 : 3;
					}),
                    level: [0, 0]
                }]
            },
            "ballistics research": {
                name: "Ballistics Research",
                source: ["VSoS", 34],
                description: " I learn 2 additional bomb formulae.",
                bonusClassExtrachoices: [{
                    'class': "alchemist",
                    feature: "bomb formulae",
                    bonus: 2
                }]
            },
            "battle training": {
                name: "Battle Training",
                source: ["VSoS", 34],
                description: " I gain proficiency with martial weapons and shields.",
                weaponProfs: [true, true],
                armorProfs: [true, false, false, true],
            },
            "beguiling haze (prereq: 13th level amorist)": {
                name: "Beguiling Haze",
                source: ["VSoS", 34],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("amorist") !== -1},
                description: "\n   When I charm a creature, I can choose to place it in a dreamy state."+
                             "\n   While charmed, it is nonhostile and acts as if it is charmed by everyone it sees equally.",
                usages: 1,
                recovery: "short rest",
            },
            "buffered metabolism (prereq: 13th level xenoalchemist)": {
                name: "Buffered Metabolism",
                source: ["VSoS", 35],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("xenoalchemist") !== -1},
                description: "\n   When I take damage, I can use my reaction and reagent dice (max prof. bonus)."+
                             "\n   This reduces the amount of damage taken by the total rolled.",
                action: ["reaction", ""],
            },
            "clotting agent": {
                name: "Clotting Agent",
                source: ["VSoS", 35],    
                description: " My hit point max is increased by my alchemist level.",
                calcChanges: {
					hp : function (totalHD) {
						return [classes.known.alchemist.level * 2 + What("Con Mod"), '\n + ' + classes.known.alchemist.level + ' \xD7 2 from the Clotting Agent (' + (classes.known.alchemist.level * 2) + What("Con Mod") + ')', true];
					},
                    hpForceRecalc: true
                }
            },
            "craft homonculus": {
                name: "Craft Homunculus",
                source: ["VSoS", 35],
                description: "\n    With 8 hours of work, I can create a homunculus. Use the \"Companion Options\"" + 
							 "\n    menu on the companion page to select your homunculus.",
            },
            "demolition spree (prereq: 13th level mad bomber)": {
                name: "Demolition Spree",
                source: ["VSoS", 35],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("mad bomber") !== -1},
                description: "\n   When priming a bomb, I can throw bombs equal to the # of damage dice of the original"+
                             "\n   bomb. Each bomb deals (1d10 + Int mod) damage, & can't target the same creature/space. I"+
                             "\n   can spend reagent dice seperately on these bombs and can apply a bomb formula to only 1.",
                action: ["action", ""],
            },
            "explosive missile": {
                name: "Explosive Missile",
                source: ["VSoS", 35],
                description: "\n   As a bonus action, I can load a bomb (max 1) onto the head of a crossbow bolt."+
                             "\n   This bolt deals primed bomb damage, but has no blast radius."+ 
                             "\n   I can't fire a bomb bolt on the same turn I throw a bomb.",
				weaponOptions : [{
					name : "Explosive Missile (Primed)",
					source : ["VSoS", 33],
					regExpSearch : /explosive missile \(primed\)/i,
					baseWeapon : "bomb"
				}],
				calcChanges: {
					atkAdd: [
						function (fields, v) {
							if (/\bexplosive\b/i.test(v.WeaponTextName) && /\bmissile\b/i.test(v.WeaponTextName)) {
								fields.Description = fields.Description.replace(/dmg to all in 7\.5 ft/i, "dmg");
							}
						},
						"When the word 'Explosive' is added to the title one of my Bomb attacks, the attack is treated as one of my Explosive missile."
					]
				},
                action: ["bonus action", ""],
            },
            "fire brand": {
                name: "Fire Brand",
                source: ["VSoS", 35],
                description: "\n   As a bonus action, until the end of my turn, one of my melee weapons deals an extra 1d6 fire"+ 
                             "\n   damage on hit. This extra damage increases by 1d6 at 5th, 11th, and 17th level.",
                additional: levels.map(function (n) {
                    return (n < 5 ? "1" : n < 11 ? "2" : n < 17 ? "3" : "4") + "d6 additional fire damage";
                }),
                action: ["bonus action", ""],
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if (v.isMeleeWeapon && /fire\s*brand/i.test(v.WeaponTextName)) {
                                var n = classes.known.alchemist.level;
                                fields.Description += "; +" + (n < 5 ? "1" : n < 11 ? "2" : n < 17 ? "3" : "4") + "d6 fire dmg";
                            }
                        },
                        "If the phrase 'Fire Brand' is included in the title of a weapon attack, it is treated as a weapon coated in one of my bomb's contents, as per my Fire Brand discovery.",
                    ]
                }
            },
            "fire eater": {
                name: "Fire Eater",
                source: ["VSoS", 35],
                description: "\n   As an action, I can use a bomb to make each creature in a 15 ft cone from me Dex save vs my"+
                             "\n   bomb save DC, taking primed bomb fire damage, or half on a success. When I use this ability,"+
                             "\n   I take 1d4 fire damage for each of my bomb's damage dice.",
                weaponOptions: [{
                    name: "Fire Eater (Primed)",
                    source: ["VSoS", 35],
                    regExpSearch: /fire eater \(primed\)/i,
					baseWeapon : "bomb",
                    range: "15 ft cone",
                    description: "Finesse, special, \u00BD on Dex save, or full on fail; See tool tip; I take 1d4 fire dmg per dmg die"
                }]
            },
			"fire in the hole (prereq: 9th level alchemist)": {
				name: "Fire in The Hole",
				source: ["VSoS", 35],
				submenu: "[9th Level]",
				prereqeval: function (v) { return classes.known.alchemist.level >= 9 },
				description: "\n   My bomb save DC increases by half of my proficiency bonus, rounded down.",
				addMod : [
					{ type : "dc", field : "Int", mod : "Prof/2", text : "My bomb save DC increases by half of my proficiency bonus, rounded down."}
				],
				calcChanges : {
					spellCalc: [
						function (type, spellcasters, ability) {
							if (type == "dc" && spellcasters.indexOf('alchemist') !== -1) return Math.floor(Number(How("Proficiency Bonus") / 2));
						},
						"My bomb save DC increases by half of my proficiency bonus, rounded down.",
						750
					]
				}
			},
            "fortified serum (prereq: 13th level apothecary)": {
                name: "Fortified Serum",
                source: ["VSoS", 35],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("apothecary") !== -1},
                description: "\n   When a creature regains hit points by drinking my potions, they gain resistance to"+ 
                             "\n   nonmagical bludgeoning/piercing/slashing damage until the end of their next turn",
            },
            "grenadier": {
                name: "Grenadier",
                source: ["VSoS", 35],
                description: "\n   When I prime & throw a bomb, I can use my bonus action to make an attack with a weapon"+
                             "\n   that isn't two handed.",
                action: ["bonus action", "Grenadier (Non Two-Handed)"],
            },
            "dynamo charger (prereq: 13th level dynamo engineer)": {
                name: "Dynamo Charger",
                source: ["VSoS", 35],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("dynamo engineer") !== -1},
                description: "\n   When I finish a short rest, I can regain 2 expended spell slots stored in dynamos."+
                             "\n   I can configure these dynamos immediately.",
                usages: 1,
                recovery: "day",
            },
            "hemoreagent (prereq: 17th level alchemist)": {
                name: "Hemoreagent",
                source: ["VSoS", 36],
                submenu: "[17th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 17 },
                description: "\n   When I prime and throw a bomb, I can add 5 or fewer reagent die to the bomb's damage"+
                             "\n   without expending them, losing 1d6 hp that can't be reduced/prevented for each die added.",
            },
            "lazarus bolt (prereq: 9th level alchemist)": {
                name: "Lazarus Bolt",
                source: ["VSoS", 36],
                submenu: "[9th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 9 },
                description: "\n   As an action, I can revive a creature that died within the last min within 5 feet of me. That"+
                             "\n   creature regains 1 hp, unless they lack a heart, died of old age, or are missing vital organs.",
                usages: 1,
                recovery: "short rest",
                action: ["action", ""]
            },
            "magnified blast (prereq: 17th level alchemist)": {
                name: "Magnified Blast",
                source: ["VSoS", 36],
                submenu: "[17th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 17 },
                description: "\n   Whenever I add reagent dice to a bomb's damage, I can also expand the blast radius by 5 ft"+ 
                             "\n   per 2 reagent dice spent.",
            },
            "ooze cowboy (prereq: 13th level ooze rancher)": {
                name: "Ooze Cowboy",
                source: ["VSoS", 36],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("ooze rancher") !== -1},
                description: "\n   Slimes I make have a minimum speed of 30 ft. I can ride any Medium or larger Ooze as a"+
                             "\n   mount. My equipment and I suffer no ill effect from touching my Oozes. My Oozes add my"+ 
                             "\n   proficiency bonus to their damage and initiative rolls.",
                calcChanges: {
                    creatureCallback: [
                        function(prefix, oCrea, bAdd) {
                            if (!(/ooze/i).test(oCrea.type + What(prefix + "Comp.Desc.MonsterType"))) return;
                            Value(prefix + "Comp.Use.Combat.Init.Bonus", "oProf");
                            for (var i = 1; i < 3; ++i) {
                                Value(prefix + "BlueText.Comp.Use.Attack." + i + ".Damage Bonus", "oProf");
                            }
                            Value(prefix + "Comp.Use.Speed", "30 ft,\nclimb 30 ft");
                        },
                        "Oozes I create add my proficiency bonus to their damage and initiative rolls."
                    ]
                }
            },
            "poisoner": {
                name: "Poisoner",
                source: ["VSoS", 36],
                description: "\n   I gain proficiency with the poisoner's kit. I can also brew new poisons using my reagent dice."+
                             "\n   My poisons also use my bomb save DC instead of their normal save DCs.",
                toolProfs: ["Poisoner's kit"],
                toNotesPage: [{
                    name: "Poisoner's Poisons Table",
                    note: [
                        "I can brew these poisons by expending reagent dice.",
                        "Poison                                 Cost",
                        "2 x Antitoxin                        1 die",
                        "2 x Basic Poison                   1 die,",
                        "Oil of Taggit                        2 dice",
                        "Potion of Poison                  2 dice",
                        "Serpent Venom                    2 dice",
                        "Truth Serum                         2 dice",
                    ],
                    popupName: "Poisoner's Poisons Table",
                    amendTo: "Reagent Potions Table",
                }]
            },
            "precision explosives": {
                name: "Precision Explosives",
                source: ["VSoS", 36],
                description: "\n   I can choose 1 creature in the blast radius other than the target to automatically"+
                             "\n   succeed on its saving throw and take no damage from it.",
            },
            "reactionary gulp (prereq: 17th level alchemist)": {
                name: "Reactionary Gulp",
                source: ["VSoS", 36],
                submenu: "[17th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 17 },
                description: "\n   " + "Immediately after taking damage, I can use my reaction to drink a potion.",
                action: ["reaction", ""]
            },
            "recycled potions": {
                name: "Recycled Potions",
                source: ["VSoS", 36],
                description: "\n   When I brew potions, I can destroy previously brewed potions, regaining the reagent dice"+
                             "\n   used to brew them. I can't gain more than my max number of reagent dice using this ability.",
            },
            "syringe": {
                name: "Syringe",
                source: ["VSoS", 36],
                description: "\n   As a bonus action, I can inject a potion into myself or another creature within 5 feet of me,"+
                             "\n   granting the benefits of the potion. I must make a melee attack against unwilling creatures,"+
                             "\n   treating the syringe as a finesse weapon.",
                action: ["bonus action", "Syringe"],
                weaponOptions: [{
                    name: "Syringe",
                    source: ["VSoS", 36],
                    regExpSearch: /\bsyringe\b/i,
                    type: "Improvised Weapons",
                    ability: 1,
                    abilitytodamage: false,
                    damage: [0, 0, ""],
                    range: "Melee",
                    description: "Finesse; on hit, administer potion or poison to target",
                    list: "melee",
                }]
            },
            "tri-mutation (prereq: 13th level mutagenist)": {
                name: "Tri-Mutation",
                source: ["VSoS", 36],
                submenu: "[13th Level]",
                prereqeval: function (v) { return classes.known.alchemist.level >= 13 && classes.known.alchemist.subclass.indexOf("mutagenist") !== -1},
                description: "\n   I can inject myself with a tri-mutagen, which grants me the benefit of all mutagens at once"+
                             "\n   for 1 minute, or until I inject myself with a different mutagen.",
                usages: 1,
                recovery: "long rest",
            }
        },
        "flashbang": {
            name: "Flashbang",
            source: ["VSoS", 30],
            minlevel: 5,
            description: desc([
                "As a bonus action, each large or smaller creature within 5 feet of me can't take reactions until",
                "the start of their next turn."
            ]),
            action: ["bonus action", ""],
        },
        "evasion": {
            name: "Evasion",
            source: ["VSoS", 30],
            minlevel: 11,
            description: desc("My Dexterity saves vs. areas of effect negate damage on success and halve it on failure"),
            savetxt: { text: ["Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg"] }
        },
        "blast coating": {
            name: "Blast Coating",
            source: ["VSoS", 30],
            minlevel: 15,
            description: desc("I automatically succeed on saves against my own bombs and never take damage from them."),
            savetxt: {
                text : ["Saves vs. my own bombs"],
            }
        },
        "philosopher's stone": {
            name: "Philosopher's Stone",
            source: ["VSoS", 30],
            minlevel: 20,
            description: desc([
                "I can make a philosopher's stone using my alchemist's supplies, 1000 gp of materials, and",
                "7 days of work. I can only have 1 stone at a time. I also gain a new bomb formula. When I",
                "create the stone, select the Philosopher's Stone from the \"Magic Item\" dropdown menus."
            ]),
            toNotesPage: [{
                name: "Nuclear Bomb [10d10 Force - Dexterity]",
                note: "\nBlast radius is 1 mile, and destroys my philosopher's stone. Each creature in radius takes full bomb damage rolled, or half on a save. Creatures within 60 feet of the blast gain no benefit from Evasion or similar features",
                amendTo: "Known Bomb Formulae"
            }],
            weaponOptions : [{
				name : "Nuclear Bomb",
				source : ["VSoS", 30],
				regExpSearch : /nuclear bomb/i,
				baseWeapon : "bomb",
				ability : 0,
				range : "1 mile",
				damage : [10, 100, "Force"],
				ability : 0,
				abilitytodamage : false,
				excludeBombDamage : true,
				description : "Finesse, special, \u00BD on Dex save, or full on fail to all; Can't evade for Crea(s) in 60 ft",
				selectNow : true
			}]
        }
    }
};

// * Alchemist Subclasses

// * Amorist Alchemist subclass
AddSubClass("alchemist", "amorist", {
	regExpSearch : /\bamorist\b/i,
	subname : "Amorist",
	source: ["VSoS", 37],
	fullname: "Amorist",
	skills: ["Deception", "Persuasion"],
	features: {
		"subclassfeature2" : {
			name: "Pheromone Bomb Formula",
			source: ["VSoS", 37],
			skills: ["Persuasion"],
			minlevel: 2,
			description: " I gain a new bomb formula. See notes",
			toNotesPage: [{
				name: "Pheromone Bomb Formula [No Damage - Wisdom]",
				note: "\nAll affected are charmed by me until the end of its next turn or it takes damage.",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions: [{
				name: "Pheromone Bomb",
				source: ["VSoS", 37],
				regExpSearch: /\bpheromone\b/i,
				baseWeapon : "bomb",
				ability : 0,
				abilitytodamage : false,
				excludeBombDamage : true,
				damage : ["", "", ""],
				selectNow : true
			}],
			calcChanges: {
				atkAdd : [
					function (fields, v) { 
						if (/\bpheromone\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
							fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Wis save to all in 7.5 ft or charmed til end of next turn or dmg taken");
						}
					},
					"When the word 'Pheromone' is added to the title one of my Bomb attacks, the attack is treated as one of my Pheromone Bombs."
				]
			}
		},
		"subclassfeature6" : {
			name : "Magnetic Personality",
			source: ["VSoS", 38],
			minlevel: 6,
			description: desc("I can add my Int mod to Charisma ability checks."),
			addMod : ["Deception", "Intimidation", "Performance", "Persuasion"].map(function(skill){return {type : "skill", field : skill, mod : "Int", text : "I add my Intelligence modifier to my Charisma checks"};}),
		},
		"subclassfeature10" : {
			name: "Alchemical Perfume",
			source: ["VSoS", 38],
			minlevel: 10,
			description: desc([
				"When a hostile creature within 5 ft of me makes an attack against me, it must succeed on a",
				"Wis save or gain disadv. on the attack roll. If a creature succeeds on this save, it is immune",
				"to this effect for 24 hours. Creatures that can't be charmed are immune to this effect."
			])
		},
		"subclassfeature18" : {
			name: "Alchemical Romance",
			source: ["VSoS", 38],
			minlevel: 18,
			description: desc([
				"During a long rest, I can spend 4 reagent dice to make a potion of true love. Select this ",
				"potion from the \"Magic Item\" dropdown menus."
			]),
			magicitemsAdd: ["Potion of True Love"]              
		}
	}
})

// Apothecary Alchemist subclass
AddSubClass("alchemist","apothecary", {
	regExpSearch : /\bapothecary\b/i,
	subname : "Apothecary",
	source: ["VSoS", 38],
	fullname: "Apothecary",
	skills: ["Medicine"],
	features: {
		"subclassfeature2" : {
			name: "Painkiller Bomb Formula",
			source: ["VSoS", 38],
			minlevel: 2,
			description: desc("I gain a new bomb formula. See notes"),
			toNotesPage: [{
				name: "Painkiller Bomb Formula [No Damage - No Save]",
				note: "\nOn hit, instead of damage, the target gains temporary hp for 1 min equal to the damage roll. Willing creatures don't require an attack roll. Once thrown, I cannot throw another for 1 min.",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions: [{
				name: "Painkiller Bomb",
				source: ["VSoS", 38],
				regExpSearch: /\bpainkiller\b/i,
				baseWeapon : "bomb",
				selectNow : true
			}],
			calcChanges: {
				atkAdd : [
					function (fields, v) { 
						if (/\bpainkiller\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
							fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all in 7\.5 ft/i, "Target heals for dmg rolled");
						}
					},
					"When the word 'Painkiller' is added to the title one of my Bomb attacks, the attack is treated as one of my Painkiller Bombs."
				]
			}
		},
		"subclassfeature6" : {
			name : "Potion Toss",
			source: ["VSoS", 38],
			minlevel: 6,
			description: desc("As an action, administer a potion to a willing/unconscious creature within 20 ft of me."),
			action: ["action", ""],
		},
		"subclassfeature10" : {
			name : "Self-Medication",
			source: ["VSoS", 38],
			minlevel: 10,
			description: desc("When I drink a potion that restores hp, I gain adv. on saves until the end of my next turn."),
		},
		"subclassfeature18" : {
			name : "Alchemical Resurrection",
			source: ["VSoS", 38],
			minlevel: 18,
			description: desc([
				"If I mix 500 gp of diamond dust into a potion of superior/supreme healing, I create a potion",
				"of raise dead. Select this potion from the \"Magic Item\" dropdown menus."
			]),
			magicitemsAdd: ["Potion of Raise Dead"]
		}
	}
})

// * Dynamo Engineer alchemist subclass
AddSubClass("alchemist","dynamo engineer",{
	regExpSearch : /\bdynamo engineer\b/i,
	subname : "Dynamo Engineer",
	source: ["VSoS", 38],
	fullname: "Dynamo Engineer",
	spellcastingKnown : {
		cantrips : 0,
		spells : [0,2,2,3,3,3,4,4,4,5,6,6,7,7,7,8,8,8,9,9],
	},
	spellcastingList: {
		"class": "wizard",
		school: ["Evoc", "Trans"],
		level: [1,4],           
	},
	spellcastingAbility: 4,
	spellcastingFactor: "warlock1",
	spellcastingTable: [
		[0,0,0,0,0,0,0,0,0],
		[0,0,0,0,0,0,0,0,0],
		[2,0,0,0,0,0,0,0,0],
		[2,0,0,0,0,0,0,0,0],
		[3,0,0,0,0,0,0,0,0],
		[3,0,0,0,0,0,0,0,0],
		[3,0,0,0,0,0,0,0,0],
		[0,4,0,0,0,0,0,0,0],
		[0,4,0,0,0,0,0,0,0],
		[0,4,0,0,0,0,0,0,0],
		[0,5,0,0,0,0,0,0,0],
		[0,5,0,0,0,0,0,0,0],
		[0,5,0,0,0,0,0,0,0],
		[0,0,5,0,0,0,0,0,0],
		[0,0,5,0,0,0,0,0,0],
		[0,0,5,0,0,0,0,0,0],
		[0,0,6,0,0,0,0,0,0],
		[0,0,6,0,0,0,0,0,0],
		[0,0,6,0,0,0,0,0,0],
		[0,0,0,7,0,0,0,0,0],
		[0,0,0,7,0,0,0,0,0]
	],
	spellFirstColTitle: "DY",
	features: {
		"subclassfeature2" : {
			name: "Spectrum Analyzer",
			source: ["VSoS", 39],
			minlevel: 2,
			description: desc("Once per short or long rest, I can cast detect magic at will."),
			spellcastingBonus: {
				spells: ["detect magic"],
				name: "Spectrum Analyzer",
				selection: ["detect magic"],
				firstCol: "oncesr",
				magicItemComponents: false,
			},
			action: ["action", ""],
			usages: 1,
			recovery: "short rest"
		},
		"subclassfeature2.1": {
			name : "Spellcasting",
			source: ["VSoS", 39],
			minlevel: 2,
			description: desc([
				"I have spell dynamos which each hold a wizard spell slot and 1 spell that I know. Int is my",
				"spellcasting ability. I use my bomb save DC for spell saves. Dynamo slots are spent when I",
				"cast the spell & regained on long rest. Switch the spells inside my dynamos on a short rest."
			]),
			limfeaname : "Spell Dynamos",
			usages : levels.map(function (n) { n < 2 ? "" : (n < 4 ? 2 : n < 7 ? 3 : n < 10 ? 4 : n < 16 ? 5 : n < 19 ? 6 : 7) }),
			recovery : "short rest",
			additional : levels.map(function(n){
				return n < 2 ? "" : (n < 4 ? "2" : n < 7 ? "3" : n < 10 ? "4" : n < 16 ? "5" : n < 19 ? "6" : "7") + " total spell dynamos";
			}),
			spellcastingBonus : { // the spells gained at level 2, 8, 14, 20
				name : "From any school",
				"class" : "wizard",
				times : [0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4],
				level : [1, 4]
			},
			extraLimitedFeatures: [{
				name : "Spell Dynamos",
				usagescalc: "event.value = classes.known.alchemist.level < 2 ? 0 : classes.known.alchemist.level < 4 ? 2 : classes.known.alchemist.level < 7 ? 3 : classes.known.alchemist.level < 10 ? 4 : classes.known.alchemist.level < 16 ? 5 : classes.known.alchemist.level < 19 ? 6 : 7",
				recovery: "long rest",
			}],
		},
		"subclassfeature6": {
			name : "Arcano Bomb Formula",
			source: ["VSoS", 39],
			minlevel: 6,
			description: " I gain a new bomb formula. See notes",
			toNotesPage : [{
				name: "Arcano Bomb Formula [d12 Force - Dexterity]",
				note: "\nI use a spell dynamo slot to prime this bomb. It deals 1 extra die of damage.",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions: [{
				name: "Arcano Bomb (SS)",
				source: ["VSoS", 39],
				regExpSearch: /\barcano\b/i,
				baseWeapon : "bomb",
				damage : ["Q", 12, "Force"],
				selectNow : true
			}]
		},
		"subclassfeature10" : {
			name : "Counter-Discharge",
			source: ["VSoS", 39],
			minlevel: 10,
			description: desc([
				"As a reaction to a creature I can see casting a spell that affects me, I can use a spell dynamo",
				"to gain adv. on the spell's saving throw & resistance to the spell's damage."
			]),
			action: ["reaction", ""],
			usages: 1,
			recovery: "long rest",
		},
		"subclassfeature18": {
			name: "Arcane Recycler",
			source: ["VSoS", 40],
			minlevel: 18,
			description: desc("When I miss with an arcano bomb, I reuse the spell slot, transferring it to an empty dynamo."),
		}
	}
})

// * Mad Bomber alchemist subclass
AddSubClass("alchemist","mad bomber",{
	regExpSearch : /\bmad bomber\b/i,
	subname : "Mad Bomber",
	source: ["VSoS", 40],
	fullname: "Mad Bomber",
	features: {
		"subclassfeature2" : {
			name : "Blasting Specialty",
			source: ["VSoS", 40],
			minlevel: 2,
			description: desc("My bombs deal double damage to objects and structures."),
		},
		"subclassfeature2.1" : {
			name : "Shrapnel Bomb Formula",
			source: ["VSoS", 40],
			minlevel: 2,
			description: desc("I gain a new bomb formula. See notes."),
			toNotesPage : [{
				name: "Shrapnel Bomb Formula [d8 Piercing - Dexterity]",
				note: "\nThis bomb has a blast radius of 10 feet.",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions: [{
				name: "Shrapnel Bomb",
				source: ["VSoS", 40],
				regExpSearch: /\bshrapnel\b/i,
				baseWeapon : "bomb",
				damage : ["C", 8, "Piercing"],
				selectNow : true,
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (/\bshrapnel\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
							fields.Description = fields.Description.replace(/in 7\.5 ft/, "in 10 ft") + (fields.Description ? '; ' : '') + "\xD72 damage against obj/structures";
						}
					},
					"When the word 'Shrapnel' is added to the title one of my Bomb attacks, the attack is treated as one of my Shrapnel Bombs."
				]
			}
		},
		"subclassfeature6" : {
			name : "Timed Demolition",
			source: ["VSoS", 40],
			minlevel: 6,
			description: desc([
				"When I prime and throw a bomb, I can delay the detonation a number rounds up to 1",
				"minute. A creature can only be affected by one bomb blast radius at a time."
			])
		},
		"subclassfeature10" : {
			name : "Blast Shield",
			source: ["VSoS", 40],
			minlevel: 10,
			description: desc([
				"I gain resistance to my choice of acid/cold/fire/lightning/thunder damage.",
				"I can change my selection when I finish a long rest."
			]),
			choices: ["Acid", "Cold", "Fire", "Lightning", "Thunder"],
			"acid" : {
				name : "Acid Blast Shield",
				description: desc([
					"I gain resistance to acid damage.",
					"I can change my resistance to cold/fire/lightning/thunder when I finish a long rest."
				]),
				dmgres:["Acid"]
			},
			"cold" : {
				name : "Cold Blast Shield",
				description: desc([
					"I gain resistance to cold damage.",
					"I can change my resistance to acid/fire/lightning/thunder when I finish a long rest."
				]),
				dmgres:["Cold"]

			},
			"fire" : {
				name : "Fire Blast Shield",
				description: desc([
					"I gain resistance to fire damage.",
					"I can change my resistance to acid/cold/lightning/thunder when I finish a long rest."
				]),
				dmgres:["Fire"]

			},
			"lightning" : {
				name : "Lightning Blast Shield",
				description: desc([
					"I gain resistance to lightning damage.",
					"I can change my resistance to acid/cold/fire/thunder when I finish a long rest."
				]),
				dmgres:["Lightning"]

			},
			"thunder" : {
				name : "Thunder Blast Shield",
				description: desc([
					"I gain resistance to thunder damage.",
					"I can change my resistance to acid/cold/fire/lightning when I finish a long rest."
				]),
				dmgres:["Thunder"]
			},
			usages : 1,
			recovery : "long rest"
		},
		"subclassfeature18" : {
			name : "Formula: Black Powder Bomb",
			source: ["VSoS", 40],
			minlevel: 18,
			description: desc("I gain a new bomb formula. See notes."),
			toNotesPage : [{
				name: "Black Powder Bomb Formula [d12 Fire - Dexterity]",
				note: "\nNo additional effects.",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions: [{
				name: "Black Powder Bomb",
				source: ["VSoS", 40],
				regExpSearch: /\bblack powder\b/i,
				baseWeapon : "bomb",
				damage : ["C", 12, "Fire"], 
				selectNow : true
			}]
		}
	}
})

// * Mutagenist Subclass
AddSubClass("alchemist","mutagenist",{
	regExpSearch : /\bmutagenist\b/i,
	subname : "Mutagenist",
	source: ["VSoS", 40],
	fullname: "Mutagenist",
	features: {
		"subclassfeature2" : {
		name : "Bonus Proficiencies",
			source: ["VSoS", 40],
			minlevel: 2,
			description: desc([
			"Gain a proficiency in either Acrobatics or Athletics, and shields.",
			]),
			skillstxt: "Choose either Acrobatics or Athletics",
			armorProfs : [true, false, false, true]
		},
		"subclassfeature2.1" : {
			name : "Mutagen",
			source: ["VSoS", 40],
			minlevel: 2,
			description: desc([
				"As a bonus action, inject a mutagen, gaining its effects for one minute.",
				"When injecting, select \"Mutagen\" in the \"Magic Items\" section."
			]),
			action: ["bonus action", "Inject Mutagen"],
		},
		"subclassfeature6" : {
			name: "Shared Mutagen",
			source: ["VSoS", 40],
			minlevel: 6,
			description: desc([
				"As an action, inject a willing creature with one mutagen. A creature can only be injected by",
				"one mutagen at a time, & I cannot inject another creature until the original mutagen ends."
			]),
			action: ["action", "Share Mutagen"],
		},
		"subclassfeature10" : {
			name: "Advanced Mutation",
			source: ["VSoS", 41],
			minlevel: 10,
			description: desc([
				"When I inject myself with a mutagen, I can choose 1 of the following additional benefits:",
				"Hyperelastic, Mucilaginous, Polybrachia. Select \"Advanced Mutagen\" in \"Magic Items\" section."
			])
		},
		"subclassfeature18" : {
		name: "Mutated Blood",
			source: ["VSoS", 41],
			minlevel: 18,
			description: "\n   Choose Strength, Dexterity, or Constitution in the \"Choose Feature\" button."+
				"\n   The chosen score increases by 2, and its maximum becomes 22.",
			choices: ["Strength", "Dexterity", "Constitution"],
			"strength" : {
			name : "Mutated Blood: Strength",
				description: "\n   My Strength score increases by 2, and my maximum Strength score increases to 22.",
				scoresMaximum: [22, 0,0,0,0,0],
				scores: [2,0,0,0,0,0],
			},
			"dexterity" : {
			name : "Mutated Blood: Dexterity",
				description: "\n   My Dexterity score increases by 2, and my maximum Dexterity score increases to 22.",
				scoresMaximum: [0, 22, 0, 0, 0, 0],
				scores: [0, 2, 0, 0, 0, 0],
			},
			"constitution" : {
			name : "Mutated Blood: Constitution",
				description: "\n   My Constitution score increases by 2, and my maximum Constitution score increases to 22.",
				scoresMaximum: [0, 0, 22, 0, 0, 0],
				scores: [0, 0, 2, 0, 0, 0],
			}
		}
	}
})

// * Ooze Rancher alchemist subclass
AddSubClass("alchemist","ooze rancher", {      
	regExpSearch : /\booze rancher\b/i,
	subname : "Ooze Rancher",
	source: ["VSoS", 40],
	fullname: "Ooze Rancher",		
	features: {	
		"subclassfeature2" : {
        	name : "Ooze Sympathy",
            source: ["VSoS", 41],
            minlevel: 2,
            description: desc([
            	"Oozes attacking me must succeed a Wis save vs my bomb save DC or miss. On a",
            	"success, the ooze is immune to this effect for 24 hours."
            ])
		},
		"subclassfeature2.1" : {
            name : "Slime Bomb Formula",
            source: ["VSoS", 41],
            minlevel: 2,
            description: " I gain a new bomb formula. See notes.",
            toNotesPage : [{
				name: "Slime Bomb Formula [No Damage - No Save]",
				note: "\nCoats all creatures in slime. Slime can be removed with a gallon of water or an action. Creatures coated in slime can't take the Dash or Disengage actions.",
				amendTo: "Known Bomb Formulae"
            }],
            weaponOptions : [{
				name : "Slime Bomb",
				source : ["VSoS", 41],
				regExpSearch : /slime bomb/i,
				baseWeapon : "bomb",
				ability : 0,
				abilitytodamage : false,
				excludeBombDamage : true,
				damage :  ["", "", ""],
				selectNow : true
			}],
			calcChanges : {
				atkAdd : [
					function(fields, v) {
						if(/\bslime\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
							fields.Description = fields.Description.replace(/dex save or \u00BD dmg to all/i, "Dex save or coat all in slime and no Dash/Disengage"); 
						}
					}
				]
			}
		},
		"subclassfeature6" : {
            name : "Bottled Oozes",
            source: ["VSoS", 41],
            minlevel: 6,
            description: desc([
            	"When I brew potions, I may spend 2 reagent die to create an ooze bottle. My Oozes use my",
            	"Int mod + my prof. bonus for their attack rolls, and my bomb save DC for their save DCs.",
            	"Ooze statistics can be found in the companion pages."
            ]),
            magicitemsAdd: ["Ooze Bottle"],
            creaturesAdd: ["Gray Ooze"],
            creatureOptions: [{
            	name: "Gray Ooze",
            	source: ["SRD", 338],
            	size: 3,
                type: "Ooze",
                alignment: "unaligned",
                ac : 8,
                hp: 22,
                hd: [3, 8],
                speed: "10 ft, climb 10 ft",
                scores: [12,6,16,1,6,2],
                damage_resistances: "acid, cold, fire",
                condition_immunities: "blinded, charmed, deafened, exhaustion, frightened, prone",
                senses: "blindsight 60 ft (blind beyond this radius)",
                passivePerception : 8,
                challengeRating: "1/2",
                proficiencyBonus: 2,
                attacksAction: 1,
                attacks: [{
                    name: "Pseudopod",
                    ability: 1,
                    damage: [1, 6, "bludgeoning"],
                    range: "Melee (5 ft)",
                    description: "Deals +2d6 acid damage, permanent -1 AC cumulatively to nonmagical metal armors",
                    modifiers : ["(oInt+oProf)-(Str+Prof)", ""],
                    abilitytodamage: true,
                    tooltip: "If the target is wearing nonmagical metal armor, its armor is partly corroded and takes a permanent and cumulative −1 penalty to the AC it offers. The armor is destroyed if the penalty reduces its AC to 10.",
                }],
                skills: { "Stealth" : 2 },
                traits: [{
                    name : "Amorphous",
                    description: "The ooze can move through a space as narrow as 1 inch wide without squeezing.",
                }, {
                    name : "Corrode Metal",
                    description: "Any nonmagical weapon made of metal that hits the ooze corrodes. After dealing damage, the weapon takes a permanent and cumulative −1 penalty to damage rolls. If its penalty drops to −5, the weapon is destroyed. Nonmagical ammunition made of metal that hits the ooze is destroyed after dealing damage. The ooze can eat through 2-inch-thick, nonmagical metal in 1 round.",
                }, {
                    name : "False Appearance",
                    description : "While the ooze remains motionless, it is indistinguishable from an oily pool or wet rock.",
                }],
                eval : function(prefix, lvl){
                    AddString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                },
                removeeval : function(prefix, lvl){
                    RemoveString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                }
			}]
	    },
	    "subclassfeature10" : {
            name : "Liquid Anatomy",
            source: ["VSoS", 41],
            minlevel: 10,
            description: "\n   I can now move through any space as narrow as 1 inch wide without squeezing."+
                         "\n   Equipment does not compress with me. Critical hits against me become normal hits.",
	    },
	    "subclassfeature18" : {
            name : "Ooze Jug",
            source: ["VSoS", 41],
            minlevel: 18,
            description: desc("I have new options for creating an ooze bottle. May only have 1 ooze jug at a time. See notes."),
            toNotesPage: [{
                name: "Ooze Rancher's Oozes Table",
                note: [
                        "I can brew these oozes by expending reagent dice.",
                        "Ooze Type                                Cost",
                        "Gray Ooze                               2 dice",
                        "Ochre Jelly                              4 dice",
                        "Gelatinous Cube                     8 dice",
                        "Black Pudding                        10 dice",
                    ],
                    amendTo: "Reagent Potions Table",
            }],
            creatureOptions: [{
                name: "Ochre Jelly",
                source: ["SRD", 146],
                size: 4,
                type: "Ooze",
                alignment: "unaligned",
                ac : 8,
                hp: 45,
                hd: [6, 10],
                speed: "10 ft, climb 10 ft",
                scores: [15,6,14,2,6,1],
                damage_resistances: "acid",
                damage_immunities: "lightning, slashing",
                condition_immunities: "blinded, charmed, deafened, exhaustion, frightened, prone",
                senses: "blindsight 60 ft (blind beyond this radius)",
                passivePerception : 8,
                challengeRating: "2",
                proficiencyBonus: 2,
                attacksAction: 1,
                attacks: [{
                    name: "Pseudopod",
                    ability: 1,
                    damage: [2, 6, "bludgeoning"],
                    range: "Melee (5 ft)",
                    description: "Deals +1d6 acid damage",
                    modifiers : ["(oInt+oProf)-(Str+Prof)", ""],
                    abilitytodamage: true,
                }],
                traits: [{
                    name : "Amorphous",
                    description: "The jelly can move through a space as narrow as 1 inch wide without squeezing.,"
                }, {
                    name : "Spider Climb",
                    description : "The jelly can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check.",
                }],
                actions: [{
                    name: "Reaction: Split",
                    description: "When a jelly that is Medium or larger is subjected to lightning or slashing damage, it splits into two new jellies if it has at least 10 hit points. Each new jelly has hit points equal to half the original jelly's, rounded down. New jellies are one size smaller than the original jelly.", 
                }],
                eval: function(prefix, lvl){
                    AddString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                },
                removeeval: function(prefix, lvl){
                    RemoveString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                }
            }, {
                name: "Gelatinous Cube",
                source: ["SRD", 337],
                size: 4,
                type: "Ooze",
                alignment: "unaligned",
                ac : 6,
                hp: 84,
                hd: [8, 10],
                speed: "15 ft",
                scores: [14,3,20,1,6,1],
                condition_immunities: "blinded, charmed, deafened, exhaustion, frightened, prone",
                senses: "blindsight 60 ft (blind beyond this radius)",
                passivePerception : 8,
                challengeRating: "2",
                proficiencyBonus: 2,
                attacksAction: 1,
                attacks: [{
                    name: "Pseudopod",
                    ability: 1,
                    damage: [3, 6, "acid"],
                    range: "Melee (5 ft)",
                    description: "",
                    modifiers : ["(oInt+oProf)-(Str+Prof)", ""],
                    abilitytodamage: false,
                }],
                traits: [{
                    name : "Ooze Cube",
                    description: "The cube takes up its entire space. Other creatures can enter the space, but a creature that does so is subjected to the cube's Engulf and has disadvantage on the saving throw. Creatures inside the cube can be seen but have total cover. A creature within 5 feet of the cube can take an action to pull a creature or object out of the cube. Doing so requires a successful DC 12 Strength check, and the creature making the attempt takes 10 (3d6) acid damage. The cube can hold only one Large creature or up to four Medium or smaller creatures inside it at a time.",
                }, {
                    name : "Transparent",
                    description: "Even when the cube is in plain sight, it takes a successful DC 15 Wisdom (Perception) check to spot a cube that has neither moved nor attacked. A creature that tries to enter the cube's space while unaware of the cube is surprised by the cube.",
                }],
                eval: function(prefix, lvl){
                    AddString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                    AddString(prefix + 'Cnote.Left', "\u25C6 Engulf: As an action, the cube moves up to its speed. While doing so, it can enter Large or smaller creatures' spaces. Whenever the cube enters a creature's space, the creature must make a  Dexterity saving throw equal to its master's bomb save DC. On a successful save, the creature can choose to be pushed 5 feet back or to the side of the cube. A creature that chooses not to be pushed suffers the consequences of a failed saving throw. On a failed save, the cube enters the creature's space, and the creature takes 10 (3d6) acid damage and is engulfed. The engulfed creature can't breathe, is restrained, and takes 21 (6d6) acid damage at the start of each of the cube's turns. When the cube moves, the engulfed creature moves with it. An engulfed creature can try to escape by taking an action to make a DC 12 Strength check. On a success, the creature escapes and enters a space of its choice within 5 feet of the cube.");
                },
                removeeval: function(prefix, lvl){
                    RemoveString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                    RemoveString(prefix + 'Cnote.Left', "\u25C6 Engulf: As an action, the cube moves up to its speed. While doing so, it can enter Large or smaller creatures' spaces. Whenever the cube enters a creature's space, the creature must make a Dexterity saving throw equal to its master's bomb save DC. On a successful save, the creature can choose to be pushed 5 feet back or to the side of the cube. A creature that chooses not to be pushed suffers the consequences of a failed saving throw. On a failed save, the cube enters the creature's space, and the creature takes 10 (3d6) acid damage and is engulfed. The engulfed creature can't breathe, is restrained, and takes 21 (6d6) acid damage at the start of each of the cube's turns. When the cube moves, the engulfed creature moves with it. An engulfed creature can try to escape by taking an action to make a DC 12 Strength check. On a success, the creature escapes and enters a space of its choice within 5 feet of the cube.");
                }
            }, {
                name: "Black Pudding",
                source: ["SRD", 337],
                size: 3,
                type: "Ooze",
                alignment: "unaligned",
                ac : 7,
                hp: 85,
                hd: [10, 10],
                speed: "20 ft, climb 20 ft",
                scores: [16,5,16,1,6,1],
                damage_resistances: "acid, cold, lightning, slashing",
                condition_immunities: "blinded, charmed, deafened, exhaustion, frightened, prone",
                senses: "blindsight 60 ft (blind beyond this radius)",
                passivePerception : 8,
                challengeRating: "4",
                proficiencyBonus: 2,
                attacksAction: 1,
                attacks: [{
                    name: "Pseudopod",
                    ability: 1,
                    damage: [1, 6, "bludgeoning"],
                    range: "Melee (5 ft)",
                    description: "Deals +4d8 acid damage, permanent -1 AC cumulatively to nonmagical metal armors",
                    modifiers : ["(oInt+oProf)-(Str+Prof)", ""],
                    abilitytodamage: true,
                    tooltip: "If the target is wearing nonmagical metal armor, its armor is partly dissolved and takes a permanent and cumulative -1 penalty to the AC it offers. The armor is destroyed if the penalty reduces its AC to 10.",
                }],
                skills: { "Stealth" : 2 },
                traits: [ {
                    name : "Corrosive Form",
                    description: "A creature that touches the pudding or hits it with a melee attack while within 5 feet of it takes 4 (1d8) acid damage. Any nonmagical weapon made of metal or wood that hits the pudding corrodes. After dealing damage, the weapon takes a permanent and cumulative -1 penalty to damage rolls. If its penalty drops to -5, the weapon is destroyed. Nonmagical ammunition made of metal or wood that hits the pudding is destroyed after dealing damage. The pudding can eat through 2-inch-thick, nonmagical wood or metal in 1 round.",
                }, ],
                actions: [{
                    name: "Split",
                    description: "When a pudding that is Medium or larger is subjected to lightning or slashing damage, it splits into two new puddings if it has at least 10 hit points. Each new pudding has hit points equal to half the original pudding's, rounded down. New puddings are one size smaller than the original jelly.", 
                }],
                features: [{
                    name : "Spider Climb",
                    description : "The pudding can climb difficult surfaces, including upside down on ceilings, without needing to make an ability check.",
                }, {
                    name : "Amorphous",
                    description: "The pudding can move through a space as narrow as 1 inch wide without squeezing.",
                }],
                eval: function(prefix, lvl){
                    AddString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                },
                removeeval: function(prefix, lvl){
                    RemoveString(prefix + 'Cnote.Left', "\u25C6 Ooze Bottle: The cube is friendly to me and my allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, it will follow me. The cube dissolves into a lifeless sludge after 1 hour.");
                }
            }]
	    }
	}
})

// * Venomsmith alchemist subclass
AddSubClass("alchemist","venomsmith",{
	regExpSearch : /\bvenomsmith\b/i,
	subname : "Venomsmith",
	source: ["VSoS", 41],
	fullname: "Venomsmith",
	features: {
		"subclassfeature2" : {
			name: "Poisoner",
			source: ["VSoS", 42],
			minlevel: 2,
			limfeaname: "Reagent Dice (d10)",
			usages: levels.map(function(n){ return n < 3 ? 2 : 0}),
			recovery: "long rest",
			limfeaAddToExisting: true,
			description: desc([
				"I gain the Poisoner discovery. I can't replace this discovery. Until 3rd level in this class, I gain 2",
				"reagent dice I can only brew poisons with. When I deal poison damage, I ignore resistance",
				"and I treat immunity as resistance."
			]),
			"venomsmith poisoner": {
				name: "Poisoner",
				source: ["VSoS", 36],
				description: "\n    I gain proficiency with the poisoner's kit. I can also brew new poisons using my reagent dice."+
								"\n    My poisons also use my bomb save DC instead of their normal save DCs.",
				toolProfs: ["Poisoner's kit"],
				toNotesPage: [{
					name: "Poisoner's Poisons Table",
					note: [
							"I can brew these poisons by expending reagent dice.",
							"Poison                                 Cost",
							"2 x Antitoxin                        1 die",
							"2 x Basic Poison                   1 die,",
							"Oil of Taggit                        2 dice",
							"Potion of Poison                  2 dice",
							"Serpent Venom                    2 dice",
							"Truth Serum                         2 dice",
					],
					popupName: "Poisoner's Poisons Table",
					amendTo: "Reagent Potions Table",
				}]
			},     
			autoSelectExtrachoices : [{
				extrachoice: "venomsmith poisoner",
			}],                 
		},
		"subclassfeature2.1" : {
			name: "Venom Bomb Formula",
			source: ["VSoS", 42],
			minlevel: 2,
			description : " I gain a new bomb formula. See notes",
			toNotesPage: [{
				name: "Venom Bomb Formula [d8 Poison - Constitution]",
				note: "\nAll affected have disadv vs next Str/Dex/Con save before end of their next turn",
				amendTo: "Known Bomb Formulae"
			}],
			weaponOptions : [{
				name : "Venom Bomb",
				source : ["VSoS", 42],
				regExpSearch : /venom bomb/i,
				baseWeapon : "bomb",
				damage : ["C", 8, "Poison"],
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (/\bvenom\b/i.test(v.WeaponTextName) && /\bbomb\b/i.test(v.WeaponTextName)) {
							fields.Description = fields.Description.replace(/dex save/i, "Con save").replace(/dmg to all/i, "dmg to all and disadv. on next Str/Dex/Con save til end of next turn");
						}
					},
					"When the word 'Venom' is added to the title one of my Bomb attacks, the attack is treated as one of my Venom Bombs."
				]
			}
		},
		"subclassfeature6" : {
			name: "Alchemical Assassin",
			source: ["VSoS", 42],
			minlevel: 6,
			description: desc([
				"Adv. on Dex (Sleight of Hand) checks to add ingested poison to food/drink, apply poison to a",
				"held weapon without being seen, or place a poison vial on a creature without them noticing."
			])
		},
		"subclassfeature10": {
			name: "Mithridatism",
			source: ["VSoS", 42],
			minlevel: 10,
			description: desc("I gain immunity to poison & the poisoned condition."),
			savetxt: {
				immune: ["poison", "poisoned condition"],
			}
		},
		"subclassfeature18": {
			name: "Toxic Recompense",
			source: ["VSoS", 42],
			minlevel: 18,
			description: desc([
				"As a reaction to a creature within 5 ft hitting me with a melee attack, the creature makes a",
				"Con save vs my bomb save DC or is poisoned for 1 min, taking 1d10 poison damage &",
				"repeating the save at the start of each of its turns."
			]), 
			action: ["reaction", ""]
		}
	}
})

// * Xenoalchemist Subclass
AddSubClass("alchemist","xenoalchemist",{
	regExpSearch : /\bxenoalchemist\b/i,
	subname : "Xenoalchemist",
	source: ["VSoS", 41],
	fullname: "Xenoalchemist",
	features: {
		"subclassfeature2" : {
			name: "Xenobiology",
			source: ["VSoS", 42],
			minlevel: 2,
			description: desc("I have advantage on all ability checks I make to identify/research monsters.")
		},
		"subclassfeature2.1" : {
			name: "Mad Scientist",
			source: ["VSoS", 42],
			minlevel: 2,
			description: desc([
				"Gain 2 monsterous grafts. Select grafts from the \"Choose Feature\" button. I don't lose hp or",
				"hit dice adding/removing grafts; I take no time for to recover after the attachment of a graft."
			]),
			extraname: "Monsterous Grafts",
			extrachoices: ["Amphibious Adaptation (Donor: has Amphibious trait)", 
							"Arcane Synapses (Donor: has Spellcasting/Innate Spellcasting)", 
							"Beast's Hide (Donor: Large or larger Beast)", 
							"Bestial Weapons (Arms) (Donor: Bst/Drgn/Mons with Claw attack)", 
							"Bestial Weapons (Head) (Donor: Bst/Drgn/Mons with Bite attack)", 
							"Charging Hooves (Donor: has Charge trait or Gore/Hooves attack)", 
							"Climbing Apparatus (Donor: Bst/Humn/Mons with climb speed)", 
							"Darkvision (Donor: has Darkvision)", 
							"Doppel-Blooded (Donor: has shapechanger tag)", 
							"Draconis Fundamentum (Donor: Drgn/Humn/Mons with a Breath Weapon)", 
							"Dragon's Hide (Donor: Large or larger Dragon)", 
							"Energetic Suture (Acid) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to acid damage)",
							"Energetic Suture (Cold) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to cold damage)",
							"Energetic Suture (Fire) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to fire damage)",
							"Energetic Suture (Lightning) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to lightning damage)",
							"Energetic Suture (Poison) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to poison damage)",
							"Energetic Suture (Thunder) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to thunder damage)",    
							"Fiend's Hide (Donor: Medium or larger Fiend)", 
							"Heart of Steel (Donor: Construct)", 
							"Horns (Donor: has Gore/Horns/Ram/Tusk attack)", 
							"Indiscernible Anatomy (Donor: Medium or larger Aberration)", 
							"Leaping Legs (Donor: has the Pounce/Standing Leap trait)", 
							"Olfactory Implants (Donor: has Keen Smell/Keen Hearing and Smell trait)", 
							"Oversized Arms (Donor: Giant)", 
							"Prehensile Tail (Donor: has a Tail attack)", 
							"Regenerating Marrow (Donor: has the Regeneration trait)", 
							"Replacement (Donor: any creature)", 
							"Stench (Donor: has the Stench trait)", 
							"Tentacles (Donor: has a Tentacles/Tendrils attack)", 
							"Venom Sac (Donor: has a natural weapon/trait that deals poison/poisoned condition)", 
							"Voice Box (Donor: has the Mimicry trait)", 
							"Webspinner Apparatus (Donor: has a Web action)"],
			extraTimes: [0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
			"amphibious adaptation (donor: has amphibious trait)" : {
				name: "Amphibious Adaptation",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I can breathe both air and water. I gain a swim speed equal to my walking speed.",
				speed : {
					swim : { spd : "walk", enc : "walk" }
				}
			},
			"arcane synapses (donor: has spellcasting/innate spellcasting)" : {
				name: "Arcane Synapses",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I learn 1 wizard cantrip of my choice. Int is my spellcasting ability for this cantrip."+
								"\n   I can harvest a second creature to learn 1 more wizard cantrip.",
				spellcastingBonus: [{
					name: "Arcane Synapses",
					firstCol: "atwill",
					times: levels.map(function(n) {return n < 2 ? 0 : 1; }),
					spellcastingAbility: 4,
					"class": ["wizard"],
					level: [0,0],
				}]
			},
			"beast's hide (donor: large or larger beast)" : {
				name: "Beast's Hide",
				source: ["VSoS", 370],
				submenu: "[External Grafts]",
				description: "\n   My AC is 13 + Dex mod, if higher than the armor I am wearing. Shields may still apply.",
				armorAdd: "Beast's Hide",
				armorOptions: [{
					name : "Beast's Hide",
					source: ["VSoS", 370],
					regExpSearch: /\bbeast's hide\b/i,
					ac: "13",
					selectNow : true
				}]
			},
			"bestial weapons (arms) (donor: bst/drgn/mons with claw attack)" : {
				name: "Bestial Weapons (Arms)",
				source: ["VSoS", 370],
				submenu: "[Arms Grafts]",
				description: desc("I gain claws I can use to make unarmed strikes: Finesse, 1d6+Str/Dex slashing damage."),
				weaponOptions: [{
					name: "Claws",
					source: ["VSoS", 370],
					regExpSearch: /\bclaws\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "slashing"],
					range: "Melee",
					description: "Finesse",
					list: "melee",
					selectNow : true
				}]
			},
			"bestial weapons (head) (donor: bst/drgn/mons with bite attack)" : {
				name: "Bestial Weapons (Head)",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I gain teeth I can use to make unarmed strikes: Finesse, 1d6+Str/Dex piercing damage.",
				weaponOptions: [{
					name: "Teest",
					source: ["VSoS", 370],
					regExpSearch: /\bteeth\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "slashing"],
					range: "Melee",
					description: "Finesse",
					list: "melee",
					selectNow : true
				}]
			},
			"charging hooves (donor: has charge trait or gore/hooves attack)" : {
				name: "Charging Hooves",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "\n   Once on each of my turns, if I move 15 ft in straight line, I can move +10 ft in that direction.",
			},
			"climbing apparatus (donor: bst/humn/mons with climb speed)" : {
				name: "Climbing Apparatus",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "\n    I gain a climb speed equal to my walking speed.",
				speed : {
					climb : { spd : "walk", enc : "walk" }
				}
			},
			"darkvision (donor: has darkvision)" : {
				name: "Darkvision",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: " I gain 60 ft darkvision.",
				vision: [["Darkvision", 60]]
			},
			"doppel-blooded (donor: has shapechanger tag)" : {
				name: "Doppel-Blooded",
				source: ["VSoS", 370],
				submenu: "[Internal Grafts]",
				additional: "1 x long rest",
				description: "\n   I can transform my appearance for 1 hr. I can change my height, weight, face, voice, "+
								"\n   hair, & race. I cannot become a different size, and my basic shape remains.",
				extraLimitedFeatures: [{
					name: "Shape Change",
					usages: 1,
					recovery: "long rest",
				}]
			},
			"draconis fundamentum (donor: drgn/humn/mons with a breath weapon)" : {
				name: "Draconis Fundamentum",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n   As an action, each creature in a 15 ft cone makes a Dex save against 8+Con+Prof."+
								"\n   Each creature takes (Prof)d6 damage or half on save, same damage type as donor's.",
				weaponOptions: [{
					name: "Draconis Fundamentum",
					source: ["VSoS", 371],
					regExpSearch: /\bdraconis fundamentum\b/i,
					type: "Natural",
					ability: 3,
					abilitytodamage: false,
					damage: [1, 6, ""],
					range: "15 ft cone",
					description: "\u00BD on Dex save",
					dc: true
				}],
				calcChanges: {
					atkAdd : [function (fields, v) {
						if (/\bdraconis fundamentum\b/i.test(v.WeaponTextName)){
							fields.Damage_Die = How("Proficiency Bonus") + "d6";
						}
					},
					"My Draconis Fundamentum attack deals 1d6 damage for each point of my proficiency bonus."
				]},
				action: ["action", "Draconis Fundamentum"],
				extraLimitedFeatures: {
					name: "Draconis Fundamentum",
					usages: 1,
					recovery: "short rest",
				}
			},
			"dragon's hide (donor: large or larger dragon)" : {
				name: "Dragon's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "\n   My AC is 17, if higher than the armor I am wearing. Shields may still apply."+
							 "\n   I gain resistance to acid/cold/fire/lightning/poison damage if the"+
							 "\n   donor was immune to it. I only gain resistance if I am proficient with"+
							 "\n   heavy armor.",
				armorOptions: [{
					name : "Dragon's Hide",
					source: ["VSoS", 31],
					regExpSearch: /\bdragon's hide\b/i,
					dex: -10,
					ac: "17",
					selectNow : true
				}]
			},
			"energetic suture (acid) (donor: clst/drgn/elem/fey/fnd with imm/res to acid damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to acid damage.",
				dmgres: ["Acid"],                    
			},
			"energetic suture (cold) (donor: clst/drgn/elem/fey/fnd with imm/res to cold damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to cold damage.",
				dmgres: ["Cold"],                    
			},
			"energetic suture (fire) (donor: clst/drgn/elem/fey/fnd with imm/res to fire damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to fire damage.",
				dmgres: ["Fire"],                    
			},
			"energetic suture (lightning) (donor: clst/drgn/elem/fey/fnd with imm/res to lightning damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to lightning damage.",
				dmgres: ["Lightning"],                    
			},
			"energetic suture (poison) (donor: clst/drgn/elem/fey/fnd with imm/res to poison damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to poison damage.",
				dmgres: ["Poison"],                    
			},
			"energetic suture (thunder) (donor: clst/drgn/elem/fey/fnd with imm/res to thunder damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to thunder damage.",
				dmgres: ["Thunder"],                    
			},
			"fiend's hide (donor: medium or larger fiend)" : {
				name: "Fiend's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "\n   My AC is 15 + Dex (max 2) if higher than the armor I am wearing. Shields may still apply.",
				armorOptions: [{
					name : "Fiend's Hide",
					source: ["VSoS", 31],
					regExpSearch: /\bfiend's hide\b/i,
					dex: 2,
					ac: "15",
					selectNow : true
				}]
			},
			"heart of steel (donor: construct)" : {
				name: "Heart of Steel",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "\n    I may ignore the effects of 1 level of exhaustion & finish a long rest in 4 hours.",
				savetxt: {
					immune: ["1st level exhaustion"]
				}
			},
			"horns (donor: has gore/horns/ram/tusk attack)" : {
				name: "Horns",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "\n   I gain horns I can use to make unarmed strikes: 1d6+Str damage of same type as donor."+
								"\n   If I move in a straight line for 10 ft immediately before making a horn attack, I can force "+
								"\n   the target into a Strength contest to knock them prone.",
				weaponOptions: [{
					name: "Horns",
					source: ["VSoS", 372],
					regExpSearch: /\bHorns\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee",
					selectNow : true
				}],             
			},
			"indiscernible anatomy (donor: medium or larger aberration)" : {
				name: "Indiscernible Anatomy",
				source: ["VSoS", 372],
				submenu: "[Internal Grafts]",
				description: "\n    Critical hits against me become normal hits.",
			},
			"leaping legs (donor: has the pounce/standing leap trait)" : {
				name: "Leaping Legs",
				source: ["VSoS", 372],
				submenu: "[Legs Grafts]",
				description: "\n    My jump distance doubles. I can jump my full distance without a running start.",
			},
			"olfactory implants (donor: has keen smell/keen hearing and smell trait)" : {
				name: "Olfactory Implants",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "\n   I gain advantage on Wisdom (Perception) checks that rely on smell.",
				vision : [["Keen Smell", 0]]
			},
			"oversized arms (donor: giant)" : {
				name: "Oversized Arms",
				source: ["VSoS", 372],
				submenu: "[Arms Grafts]",
				description: desc([
					"+5 ft Melee reach, unless the weapon used has Reach. If Small, I can use heavy weapons",
					"without penalty. I have adv. on Str checks and saves I make to maintain my grip on objects."
				]),
				savetxt: {
					adv_vs: ["keeping grip on an object"]
				},
				calcChanges: {
					atkAdd: [ 
						function (fields, v) 	{
							if(v.isMeleeWeapon && (/\d+\s?(ft|m)/i).test(fields.Range) && !/reach/i.test(fields.Description)) { // * Checks for "Melee (x ft)"
								var rNum = fields.Range.match(/\d+\s?(ft|m)/i);
								var unit = rNum[2];
								var curRange = parseInt(rNum[1], 10);
								fields.Range = fields.Range.replace(/\d+\s?(ft|m)/i, (curRange + 5) + " " + unit);
							}
							if(v.isMeleeWeapon && !(/\(\d+\s?(ft|m)\)/i).test(fields.Range) && !/reach/i.test(fields.Description)) {
								fields.Range = "Melee (10 ft)";
								fields.Description += (fields.Description ? "; " : "") + "Reach"
							}
						},
						"My melee reach increases by 5 ft, unless the weapon I am using has Reach."
					]
				}
			},
			"prehensile tail (donor: has a tail attack)" : {
				name: "Prehensile Tail",
				source: ["VSoS", 372],
				submenu: "[External Grafts]",
				description: "\n   I gain a tail I can use to make unarmed strikes: Finesse, 1d6+Str/Dex bludgeoning damage."+
								"\n   I can hold and manipulate objects with the tail, but it cannot use weapons/shields.",
				weaponOptions: [{
					name: "Tail",
					source: ["VSoS", 372],
					regExpSearch: /\btail\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee",
					description: "Finesse",
					selectNow : true
				}],    
			},
			"regenerating marrow (donor: has the regeneration trait)" : {
				name: "Regenerating Marrow",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    I can use a bonus action to regain hit points equal to 1d10 + Constitution modifier.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Regenerating Marrow",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"replacement (donor: any creature)" : {
				name: "Replacement",
				source: ["VSoS", 373],
				submenu: "[Any Grafts]",
				description: desc("A replacement limb/organ functions identically. It takes up the most relevant body slot.")
			},
			"stench (donor: has the stench trait)" : {
				name: "Stench",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    As a bonus action, each creature within 10 ft of me must Con save, DC (8+Prof+Con)"+
								"\n    or be poisoned until the end of their next turn.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Stench",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"tentacles (donor: has a tentacles/tendrils attack)" : {
				name: "Tentacles",
				source: ["VSoS", 373],
				submenu: "[Arms Grafts]",
				description: desc([
					"I gain a tentacle I can use to make unarmed strikes: Finesse, 10 ft, 1d6+Str/Dex bludgeoning.",
					"When I hit with this attack, I may use my bonus action to attempt to grapple the target."
				]),
				weaponOptions: [{
					name: "Tentacle",
					source: ["VSoS", 373],
					regExpSearch: /\btentacle\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee (10 ft)",
					description: "Finesse, Reach, on hit, may use bonus action to attempt a grapple on target",
					selectNow : true
				}],    
			},
			"venom sac (donor: has a natural weapon/trait that deals poison/poisoned condition)" : {
				name: "Venom Sac",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    As a bonus action, I can coat a weapon in basic poison. the save DC = 8+Prof+Con mod.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Venom Sac",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"voice box (donor: has the mimicry trait)" : {
				name: "Voice Box",
				source: ["VSoS", 373],
				submenu: "[Head Grafts]",
				description: "\n   I can mimic any sound I have heard, including voices. Creatures can tell they are mimicries"+
								"\n   if they succeed on an Insight check contested by my Deception check.",
			},
			"webspinner apparatus (donor: has a web action)" : {
				name: "Webspinner Apparatus",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    I can cast the web spell without using a spell slot or components: DC 8+Prof+Con mod.",
				extraLimitedFeatures: [{
					name: "Webspinner Apparatus",
					usages: 1,
					recovery: "short rest"
				}],
				spellcastingBonus : [{
					spells: ["web"],
					name: "Webspinner Apparatus",
					selection: ["web"],
					firstCol: "oncesr",
					spellcastingAbility: 3,
					allowUpCasting: false,
				}]
			}
		},
		"subclassfeature6": {
			name: "Surgical Attack",
			source: ["VSoS", 42],
			minlevel: 6,
			description: desc([
				"When I take the attack action/prime & throw a bomb, I can make an unarmed strike as part of",
				"that action, as long as I use a monsterous graft for the unarmed strike."
			])
		},
		"subclassfeature10": {
			name: "Necromantic Organs",
			source: ["VSoS", 42],
			minlevel: 10,
			description: desc("When I am reduced to 0 hit points but not killed, I can drop to 1 hit point instead."),
			usages: 1,
			recovery: "long rest"
		},
		"subclassfeature18": {
			name: "It's Alive!",
			source: ["VSoS", 42],
			minlevel: 18,
			description: "\n    I can create an alchemy golem with 8 hrs, a healer's kit, alchemist's supplies, a knife, and 3"+
							"\n    recently deceased Humanoid corpses. I can only have 1 golem at a time. See companion pg.",
			action: ["bonus action", "Command Alchemy Golem"],
			creaturesAdd: [["Alchemy Golem", true]],
			creatureOptions: [{
				name: "Alchemy Golem",
				source: ["VSoS", 43],
				size: 3,
				type: "Construct",
				alignment: "unaligned",
				ac : 13,
				hp: 76,
				hd: [9, 8],
				speed: "30 ft",
				scores: [17,9,18,6,10,5],
				damage_resistances: "bludgeoning, piercing and slashing from nonmagical attacks that aren't adamantine",
				damage_immunities: "lightning",
				condition_immunities: "charm, exhaustion, fright, paralysis, petrify, poison",
				proficiencyBonus: 3,
				languages: "same as creator (can't speak)",
				senses: "Darkvision 60 ft",
				passivePerception : 13,
				challengeRating: "5",
				proficiencyBonus: 3,
				attacksAction: 2,
				attacks: [{
					name: "Slam",
					ability: 1,
					damage: [2, 8, "Bludgeoning"],
					range: "Melee (5 ft)",
					abilitytodamage: true,
					description: "Counts as magical"
				}, {
					name: "Bestial Weapon: Claws",
					ability: 1,
					damage: [2, 6, "Slashing"],
					range: "Melee (5 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Counts as magical"
				}, {
					name: "Bestial Weapon: Teeth",
					ability: 1,
					damage: [2, 6, "Piercing"],
					range: "Melee (5 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Counts as magical"
				}, {
					name: "Draconis Fundamentum",
					ability: 3,
					damage: [6, 6, ""],
					range: "15 ft cone",
					abilitytodamage: false,
					dc: true,
					modifiers: ["", "5"],
					tooltip: "Each creature in a 15-foot cone must make a Dexterity saving throw (DC equals 8 + your Constitution modifier + your proficiency bonus). On a failed save, the creature takes 1d6 damage for each point of your proficiency bonus, or half as much damage on a successful one. The breath weapon's damage type is the same as the donor's breath weapon. Once you use this ability, you can't use it again until you finish a short or long rest.",
					description: "Dex save, save halves damage",
				}, {
					name: "Horns",
					ability: 1,
					damage: [2, 6, "Bludgeoning"],
					range: "Melee (5 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Counts as magical; if moved 10 ft in a straight line before attacking, may attempt to knock prone",
					tooltip: "Horns are a natural weapon that you can use to make unarmed strikes. If you move in a straight line for 10 feet immediately before hitting a creature with your horns, that creature must make a Strength check contested by your Strength check. If you succeed, the creature is knocked prone."
				}, {
					name: "Horns",
					ability: 1,
					damage: [2, 6, "Bludgeoning"],
					range: "Melee (5 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Counts as magical; if moved 10 ft in a straight line, may STR contest to knock prone",
				}, {
					name: "Prehensile Tail",
					ability: 1,
					damage: [2, 6, "Bludgeoning"],
					range: "Melee (5 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Counts as magical",
				},{
					name: "Tentacles",
					ability: 1,
					damage: [2, 6, "Bludgeoning"],
					range: "Melee (10 ft)",
					abilitytodamage: false,
					modifiers: ["(oInt+oProf)-(Str+Prof)", "5"],
					description: "Finesse, Reach; Counts as magical; may use bonus action to attempt grapple",
				}],
				traits: [{
					name : "Aversion to Fire",
					description: "If the golem takes fire damage, it has disadv. on ability checks and attack rolls until the end of its next turn.",
				}, {
					name: "Immutable Form",
					description: "The golem is immune to any spell or effect that would alter its form.", 
				}, {
					name: "Lightning Absorption",
					description: "Whenever the golem is subjected to lightning damage, it instead regains hitpoints equal to half the lightning damage dealt.", 
				}, {
					name : "Magic Resistance",
					description: "The golem has advantage on saves vs spells and other magical effects.",
				}, {
					name : "Multiattack",
					description : "The golem can make two melee weapon attacks"
				}],
				commoneval : function(prefix, oCrea,bAdd) {
					var aFnc = bAdd ? AddString : RemoveString;
					for(var i = 1; i <= 3; i++) {
						// * The base field name
						var baseField = prefix + "Comp.Use.Attack." + i;

						// * Range and Description as fields
						var range = baseField + ".Range";
						var description = baseField + ".Description";

						// * Range and Description as strings
						var strRange = What(range);
						var strDescription = What(description);

						if((/^\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/reach/).test(strDescription)) {
							var rNum = strRange.match(/\d+\s?(ft|m)/i);
							var unit = rNum[1];
							var curRange = parseInt(rNum[0], 10);

							Value(range, strRange.replace(/\d+\s?(ft|m)/i, (curRange + 5) + " " + unit));
							AddString(description, "Reach", "; ");
						}
						if(!(/^\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/reach/).test(strDescription)) {
							Value(range, "Melee (10 ft)");
							AddString(description, "Reach", "; ");
						}
					}
				},
				commonremoveeval : function(prefix, oCrea,bAdd) {
					for(var i = 1; i <= 3; i++){
						// * The base field name
						var baseField = prefix + "Comp.Use.Attack." + i;

						// * Range and Description as fields
						var range = baseField + ".Range";
						var description = baseField + ".Description";

						// * Range and Description as strings
						var strRange = What(range);
						var strDescription = What(description);

						if((/\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/tentacles?/i).test(What(baseField + ".Weapon Selection"))) {
							var rNum = strRange.match(/\d+\s?(ft|m)/i); 
							var unit = rNum[1];
							var curRange = parseInt(rNum[0], 10);

							Value(range, strRange.replace(/\d+\s?(ft|m)/i, Math.max(curRange - 5, 5) + " " + unit));
							Value(description, strDescription.replace(/(,|;)? ?reach/i, ''));
						}
					}
				},
				eval: function(prefix, lvl){
					AddString(prefix + 'Cnote.Left', "\u25C6 It's Alive!: The golem acts independently on its own turn, but always obeys your commands. On each of your turns, you can use a bonus action to mentally command the golem if it is within 60 feet of you. You decide what actions the golem will take and where it will move during its next turn, or you can issue a general command. If you issue no commands, the golem only defends itself against hostile creatures. Once given an order, the golem continues to follow it until its task its complete. The golem can use your Intelligence modifier + your proficiency bonus for its attack rolls. If the golem drops to 0 hit points, it dies. You can restore the golem's hit points and reanimate it over the course of a long rest.");
					AddString(prefix + 'Cnote.Left', "\n\u25C6 Monsterous Grafts: The golem may have up to three Monstrous Grafts attached to it by its creator. The golem's weapon attacks, including monsterous grafts added by its creator, are magical. Monsterous grafts have a +6 attack bonus, deal twice the normal number of damage dice, and have a +5 bonus to their damage rolls. The golem can only have 1 graft in each slot.");
					Value(prefix + "Comp.Use.Attack.2.Weapon Selection", "");
					Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "");
				},
				removeeval: function(prefix, lvl){
					RemoveString(prefix + 'Cnote.Left', "\u25C6 It's Alive!: The golem acts independently on its own turn, but always obeys your commands. On each of your turns, you can use a bonus action to mentally command the golem if it is within 60 feet of you. You decide what actions the golem will take and where it will move during its next turn, or you can issue a general command. If you issue no commands, the golem only defends itself against hostile creatures. Once given an order, the golem continues to follow it until its task its complete. The golem can use your Intelligence modifier + your proficiency bonus for its attack rolls. If the golem drops to 0 hit points, it dies. You can restore the golem's hit points and reanimate it over the course of a long rest.");
					RemoveString(prefix + 'Cnote.Left', "\n\u25C6 Monsterous Grafts: The golem may have up to three Monstrous Grafts attached to it by its creator. The golem's weapon attacks, including monsterous grafts added by its creator, are magical. Monsterous grafts have a +6 attack bonus, deal twice the normal number of damage dice, and have a +5 bonus to their damage rolls. The golem can only have 1 graft in each slot.");
				}
			}],
			extraname: "Golem's Monsterous Grafts",
			extrachoices: ["Amphibious Adaptation (Donor: has Amphibious trait)", 
			"Arcane Synapses (Donor: has Spellcasting/Innate Spellcasting)", 
			"Beast's Hide (Donor: Large or larger Beast)", 
			"Bestial Weapons (Arms) (Donor: Bst/Drgn/Mons with Claw attack)", 
			"Bestial Weapons (Head) (Donor: Bst/Drgn/Mons with Bite attack)", 
			"Charging Hooves (Donor: has Charge trait or Gore/Hooves attack)", 
			"Climbing Apparatus (Donor: Bst/Humn/Mons with climb speed)", 
			"Doppel-Blooded (Donor: has shapechanger tag)", 
			"Draconis Fundamentum (Donor: Drgn/Humn/Mons with a Breath Weapon)", 
			"Dragon's Hide (Donor: Large or larger Dragon)", 
			"Energetic Suture (Acid) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to acid damage)",
			"Energetic Suture (Cold) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to cold damage)",
			"Energetic Suture (Fire) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to fire damage)",
			"Energetic Suture (Poison) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to poison damage)",
			"Energetic Suture (Thunder) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to thunder damage)",    
			"Fiend's Hide (Donor: Medium or larger Fiend)", 
			"Heart of Steel (Donor: Construct)", 
			"Horns (Donor: has Gore/Horns/Ram/Tusk attack)", 
			"Indiscernible Anatomy (Donor: Medium or larger Aberration)", 
			"Leaping Legs (Donor: has the Pounce/Standing Leap trait)", 
			"Olfactory Implants (Donor: has Keen Smell/Keen Hearing and Smell trait)", 
			"Oversized Arms (Donor: Giant)", 
			"Prehensile Tail (Donor: has a Tail attack)", 
			"Regenerating Marrow (Donor: has the Regeneration trait)", 
			"Replacement (Donor: any creature)", 
			"Stench (Donor: has the Stench trait)", 
			"Tentacles (Donor: has a Tentacles/Tendrils attack)", 
			"Venom Sac (Donor: has a natural weapon/trait that deals poison/poisoned condition)", 
			"Voice Box (Donor: has the Mimicry trait)", 
			"Webspinner Apparatus (Donor: has a Web action)"],
			extraTimes: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3],
			"amphibious adaptation (donor: has amphibious trait)" : {
				name: "Amphibious Adaptation",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Amphibious Adaptation: The golem can breathe both air and water.");
						aFnc(prefix + "Comp.Use.Speed", ",\nswim 30 ft");
					},
					"My alchemy golem gains the Monsterous Graft: Amphibious Adaptation."]
				}
			},
			"arcane synapses (donor: has spellcasting/innate spellcasting)" : {
				name: "Arcane Synapses",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Arcane Synapses: The golem knows 1 wizard cantrip. If a second creature is harvested and grafted, it knows 2 wizard cantrips.");
					},
					"My alchemy golem gains the Monsterous Graft: Arcane Synapses."]
				},
				spellcastingBonus: [{
					name: "Arcane Synapses (Golem)",
					firstCol: "AG",
					times: 2,
					spellcastingAbility: 4,
					"class": ["wizard"],
					level: [0,0],
				}]
			},
			"beast's hide (donor: large or larger beast)" : {
				name: "Beast's Hide",
				source: ["VSoS", 370],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", "13+Dex");
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					},
					"My alchemy golem's AC is equal to 13 + its Dexterity Modifier, if its worn armor isn't higher. It may benefit from a shield."]
				},
			},
			"bestial weapons (arms) (donor: bst/drgn/mons with claw attack)" : {
				name: "Bestial Weapons (Arms)",
				source: ["VSoS", 370],
				submenu: "[Arms Grafts]",
				description: "",                  
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;              
						if (bAdd) { 
							AddWeapon("Bestial Weapon: Claws", "", prefix);
                            if(GetFeatureChoice('classes', 'alchemist', 'subclassfeature18', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd);
                            }
						 }
						else {
							for (i = 1; i < 3; ++i){
								if (/bestial weapon: claws/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My alchemy golem gains the Monsterous Graft: Bestial Weapons (Arms).",
					900],
				},
			},
			"bestial weapons (head) (donor: bst/drgn/mons with bite attack)" : {
				name: "Bestial Weapons (Head)",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;              
						if (bAdd) { 
							AddWeapon("Bestial Weapon: Teeth", "", prefix); 
                            if(GetFeatureChoice('classes', 'alchemist', 'subclassfeature18', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd);
                            }
                        }
						else {
							for (i = 1; i < 3; ++i){
								if (/bestial weapon: teeth/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My alchemy golem gains the Monsterous Graft: Bestial Weapons (Head).",
					900],
				},
			},
			"charging hooves (donor: has charge trait or gore/hooves attack)" : {
				name: "Charging Hooves",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Charging Hooves: Once on each of its turns, if the golem moves 15 ft in straight line, it can move +10 ft in that direction");
					}]
				}
			},
			"climbing apparatus (donor: bst/humn/mons with climb speed)" : {
				name: "Climbing Apparatus",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Speed", ",\nclimb 30 ft");
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Climbing Apparatus: The golem gains a climb speed equal to its walking speed.");
					}]
				}
			},
			"doppel-blooded (donor: has shapechanger tag)" : {
				name: "Doppel-Blooded",
				source: ["VSoS", 370],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Doppel-Blooded: Once per long rest, The golem can transform its appearance for 1 hr. it can change its height, weight, face, voice, hair, & race. It cannot become a different size, and its basic shape remains.");
					}]
				}
			},
			"draconis fundamentum (donor: drgn/humn/mons with a breath weapon)" : {
				name: "Draconis Fundamentum",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
				creatureCallback: [function(prefix, oCrea, bAdd) {
					if (!/\balchemy golem\b/i.test(oCrea.name)) return;              
					if (bAdd) { 
						AddWeapon("Draconis Fundamentum", "", prefix); 
                        if(GetFeatureChoice('classes', 'alchemist', 'subclassfeature18', true).indexOf("oversized arms (donor: giant)") !== -1) {
                            ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd);
                        }
					}
					else {
						for (i = 1; i < 3; ++i){
							if (/Draconis Fundamentum/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
								Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My alchemy golem gains the Monsterous Graft: Draconis Fundamentum.",
					900],
				}
			},
			"dragon's hide (donor: large or larger dragon)" : {
				name: "Dragon's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", 17);
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					}, "My alchemy golem's AC is equal to 17, if its worn armor isn't higher. It may benefit from a shield."]
				}
			},
			"energetic suture (acid) (donor: clst/drgn/elem/fey/fnd with imm/res to acid damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, acid") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", acid", ".") );
					}]
				}
			},
			"energetic suture (cold) (donor: clst/drgn/elem/fey/fnd with imm/res to cold damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, cold") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", cold", ".") );
					}]
				}
			},
			"energetic suture (fire) (donor: clst/drgn/elem/fey/fnd with imm/res to fire damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, fire") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", fire", ".") );
					}]
				}
			},
			"energetic suture (poison) (donor: clst/drgn/elem/fey/fnd with imm/res to poison damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, poison") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", poison", ".") );
					}]
				}
			},
			"energetic suture (thunder) (donor: clst/drgn/elem/fey/fnd with imm/res to thunder damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, thunder") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", thunder", ".") );
					}]
				}
			},
			"fiend's hide (donor: medium or larger fiend)" : {
				name: "Fiend's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", "15+min(Dex|2)");
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					}, "My alchemy golem's AC is equal to 15 + its Dexterity Modifier, max 2, if its worn armor isn't higher. It may benefit from a shield."]
				}
			},
			"heart of steel (donor: construct)" : {
				name: "Heart of Steel",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Heart of Steel: The golem ignores effects of 1 level of exhaustion & finishes a long rest in 4 hours.");
					}]
				}
			},
			"horns (donor: has gore/horns/ram/tusk attack)" : {
				name: "Horns",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;            
						if (bAdd) { 
							AddWeapon("Horns", "", prefix);
							if(GetFeatureChoice('classes', 'alchemist', 'subclassfeature18', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd);
                            }
						}
						else {
							for (i = 1; i < 3; ++i){
								if (/horns/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My alchemy golem gains the Monsterous Graft: Horns.",
					900],
				},        
			},
			"indiscernible anatomy (donor: medium or larger aberration)" : {
				name: "Indiscernible Anatomy",
				source: ["VSoS", 372],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Indiscernible Anatomy: Critical hits against the golem become normal hits.");
					}]
				}
			},
			"leaping legs (donor: has the pounce/standing leap trait)" : {
				name: "Leaping Legs",
				source: ["VSoS", 372],
				submenu: "[Legs Grafts]",
				description: " My jump distance doubles. I can jump my full distance without a running start.",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Leaping Legs: The golem's jump distance is doubled. It can jump its full distance without a running start.");
					}]
				}
			},
			"olfactory implants (donor: has keen smell/keen hearing and smell trait)" : {
				name: "Olfactory Implants",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Senses", "Keen Smell");
					}]
				}
			},
			"oversized arms (donor: giant)" : {
				name: "Oversized Arms",
				source: ["VSoS", 372],
				submenu: "[Arms Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						if(bAdd) {
							ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd)
						}
						if(!bAdd) {
							ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commonremoveeval(prefix, oCrea, bAdd)
						}
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits.", "\n\u25C6 Oversized Arms: The golem's reach increases by 5 ft, unless the weapon used has Reach. It has advantage on saves made to maintain grip on objects.")
					},
					"My golem's reach increases by 5 ft, unless the weapon it is using has Reach.", 1000]	
				}
			},
			"prehensile tail (donor: has a tail attack)" : {
				name: "Prehensile Tail",
				source: ["VSoS", 372],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;              
						if (bAdd) { 
							AddWeapon("Prehensile Tail", "", prefix);
							AddString(prefix + "Comp.Use.Features", "\n\u25C6 Prehensile Tail: The golem's tail can hold and manipulate objects, but cannot use weapons/shields");
                            if(GetFeatureChoice('classes', 'alchemist', 'subclassfeature18', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                ClassSubList['alchemist-xenoalchemist'].features['subclassfeature18'].creatureOptions[0].commoneval(prefix, oCrea, bAdd);
                            }
                        }
						else {
							for (i = 1; i < 3; ++i){
								if (/Prehensile Tail/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
							RemoveString(prefix + "Comp.Use.Features", "\n\u25C6 Prehensile Tail: The golem's tail can hold and manipulate objects, but cannot use weapons/shields");
						}
					},
					"My alchemy golem gains the Monsterous Graft: Prehensile Tail.",
					900], 
				}
			},
			"regenerating marrow (donor: has the regeneration trait)" : {
				name: "Regenerating Marrow",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Regenerating Marrow: Once per short rest, the golem can use a bonus action to regain hit points equal to 1d10 + Constitution modifier.");
					}]
				}
			},
			"replacement (donor: any creature)" : {
				name: "Replacement",
				source: ["VSoS", 373],
				submenu: "[Any Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Replacement: A replacement limb or organ functions the same as the missing one. It takes up the most relevant body slot.");
					}]
				}
			},
			"stench (donor: has the stench trait)" : {
				name: "Stench",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Stench: Once per short rest, as a bonus action, each creature within 10 ft of the golem must make a Con save, DC 15, or be poisoned until the end of their next turn.");
					}]
				}
			},
			"tentacles (donor: has a tentacles/tendrils attack)" : {
				name: "Tentacles",
				source: ["VSoS", 373],
				submenu: "[Arms Grafts]",
				description: "",
				calcChanges : {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;              
						if (bAdd) { AddWeapon("Tentacles", "", prefix); } // * no need to call commoneval
						else {
							for (i = 1; i < 3; ++i){
								if (/tentacles/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My alchemy golem gains the Monsterous Graft: Tentacles.",
					900],   
				}
			},
			"venom sac (donor: has a natural weapon/trait that deals poison/poisoned condition)" : {
				name: "Venom Sac",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Venom Sac: Once per short rest, as a bonus action, the golem can coat a weapon in basic poison. The save DC for this poison is 15.");
					}]
				}
			},
			"voice box (donor: has the mimicry trait)" : {
				name: "Voice Box",
				source: ["VSoS", 373],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Voice Box: The golem can mimic any sound it has heard, including voices. Creatures can tell they are mimicries if they succeed on an Insight check contested by my Deception check.");
					}]
				}
			},
			"webspinner apparatus (donor: has a web action)" : {
				name: "Webspinner Apparatus",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/\balchemy golem\b/i.test(oCrea.name)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Webspinner Apparatus: Once per short rest, the golem can cast the web spell without using a spell slot or components.");
					}]
				},
				spellcastingBonus : [{
					spells: ["web"],
					name: "Webspinner Apparatus",
					selection: ["web"],
					firstCol: "AG",
					spellcastingAbility : 3,
					allowUpCasting: false
				}]
			}          
		},
	}
})

// * Captain class
ClassList["captain"] = {
    name: "Captain",
    regExpSearch: /captain/i,
    source: ["VSoS", 46],
    primaryAbility: "Strength/Dexterity, Charisma",
    prereqs: "Strength 13 or Dexterity 13, and Charisma 13",
    die: 8,
    improvements: [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
    saves: ["Con", "Cha"],
    abilitySave: 6,
    spellcastingFactor: 1,
    spellcastingTable : levels.map(function (n) { return [0,0,0,0,0,0,0,0,0]}),
    spellcastingList: {
        class: "any",
        spells: [],
    },
    skillstxt: {
        primary: "Choose two from Animal Handling, Athletics, Deception, History, Insight, Intimidation, Perception, and Persuasion",
    },
    armorProfs: {
        primary: [true, true, false, true],
        secondary: [true, true, false, true],
    },
    weaponProfs: {
        primary: [true, true],
        secondary: [true, true]
    },
    equipment: "Captain starting equipment: " +
    	"\n \u2022 Scale mail -or- leather armor;" +
        "\n \u2022 A warhammer -or- a longsword -or- any simple weapon;" +
        "\n \u2022 A light crossbow and 20 bolts -or- a shortbow and 20 arrows -or- 5 javelins;" +
        "\n \u2022 A diplomat's pack -or- an explorer's pack;" +
        "\n \u2022 An embroidered standard and a dagger",
    subclasses: ["Banner", []],
    attacks: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    features: {
        "born leader" : {
            name: "Born Leader",
            source: ["VSoS", 46],
            minlevel: 1,
            description: "\n    I have advantage on any Charisma (Persuasion) checks to convince someone to let me take"+
                         "\n    charge of a situation or to give someone orders in a dangerous situation. I can use my"+
                         "\n    Cha mod instead of Int for any ability check I make related to planning, strategy, or tactics."
        },
        "fighting style" : {
            name: "Fighting Style",
            source: ["VSoS", 47],
            minlevel: 1,
            description: "\n    Choose a Fighting Style using the \"Choose Feature\" button above",
            choices: ["Archery", "Defense", "Dueling", "Protection"],
            "archery" : FightingStyles.archery,
            "defense" : FightingStyles.defense,
            "dueling" : FightingStyles.dueling,
            "protection" : FightingStyles.protection,
        },
        // Big thanks to MorePurpleMoreBetter for the writing CalcChanges attribute that lets the user generate cohort spell sheets.
        "cohort" : {
            name: "Cohort",
            source: ["VSoS", 47],
            minlevel: 2,
            description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                         "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                         "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                         "\n    The previous cohort loses all abilities granted by this ability.", 
            choices: ["Abbot: Generate Spells (6th level)", "Abbot: Generate Spells (14th level)", "Cultist: Generate Spells (1st level)", "Cultist: Generate Spells (6th level)", "Mage: Generate Spells (1st level)", "Mage: Generate Spells (6th level)", "Mage: Generate Spells (14th level)", "Mage: Generate Spells (18th level)"],
            "abbot: generate spells (6th level)": {
                name: "Abbot Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 6 && classes.known.captain.level < 14)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\babbot\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Abbot";
                    CurrentSpells["captain"].shortname = "Abbot";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            // Only do this for the 'captain' class, and not for prepared spells, and not if the selected ability score is "none"
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            // Find the "abbot" companion by looking at the known
                            // This means that "abbot" needs to be part of the Creature's object name
                            // (e.g. CreatureList["abbot"]), or it has to be part of the name of the creature
                            // when added through creatureOptions
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\babbot\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }
                
                            // Stop if no match was found
                            if (!prefix) return;
                
                            // Get the abbreviation for the selected ability
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            // Get the modifier for the character and the found abbot creature
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            // Return the difference between the two modifiers
                            return creaMod - charMod;
                        }, "My Abbot cohort can cast these spells. These spells use the abbot's Wisdom for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["guidance", "spare the dying", "bless", "lesser restoration", "protection from evil and good"],
                    name: "Abbot Cohort",
                    selection: ["guidance", "spare the dying", "bless", "lesser restoration", "protection from evil and good"],
                    firstCol: "atwill",
                    times: 5,
                    magicitemComponents: true,
                    spellcastingAbility: 5,
                }]
            },
            "abbot: generate spells (14th level)": {
                name: "Abbot Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 14)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\babbot\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Abbot";
                    CurrentSpells["captain"].shortname = "Abbot";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\babbot\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Abbot cohort can cast these spells. These spells use the abbot's Wisdom for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["guidance", "spare the dying", "bless", "lesser restoration", "protection from evil and good", "death ward", "revivify", "speak with animals"],
                    name: "Abbot Cohort",
                    selection: ["guidance", "spare the dying", "bless", "lesser restoration", "protection from evil and good", "death ward", "revivify", "speak with animals"],
                    firstCol: "atwill",
                    times: 8,
                    magicitemComponents: true,
                    spellcastingAbility: 5,
                }]
            },
            "cultist: generate spells (1st level)": {
                name: "Cultist Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level < 6)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bcultist\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Cultist";
                    CurrentSpells["captain"].shortname = "Cultist";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
 
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bcultist\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];            
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Cultist cohort can cast these spells. These spells use the cultist's Charisma for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["dancing lights", "mage hand", "minor illusion", "charm person", "detect magic"],
                    name: "Cultist Cohort",
                    selection: ["dancing lights", "mage hand", "minor illusion", "charm person", "detect magic"],
                    firstCol: "atwill",
                    times: 5,
                    magicitemComponents: true,
                    spellcastingAbility: 6,
                }]
            },
            "cultist: generate spells (6th level)": {
                name: "Cultist Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 6)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bcultist\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Cultist";
                    CurrentSpells["captain"].shortname = "Cultist";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bcultist\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }            
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Cultist cohort can cast these spells. These spells use the cultist's Charisma for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["dancing lights", "mage hand", "minor illusion", "charm person", "detect magic", "disguise self", "false life", "suggestion"],
                    name: "Cultist Cohort",
                    selection: ["dancing lights", "mage hand", "minor illusion", "charm person", "detect magic", "disguise self", "false life", "suggestion"],
                    firstCol: "atwill",
                    times: 8,
                    magicitemComponents: true,
                    spellcastingAbility: 6,
                }]
            },
            "mage: generate spells (1st level)": {
                name: "Mage Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level < 6)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bmage\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Mage";
                    CurrentSpells["captain"].shortname = "Mage";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bmage\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }            
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Mage cohort can cast these spells. These spells use the mage's Intelligence for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor"],
                    name: "Mage Cohort",
                    selection: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor"],
                    firstCol: "atwill",
                    times: 5,
                    magicitemComponents: true,
                    spellcastingAbility: 4,
                }]
            },
            "mage: generate spells (6th level)": {
                name: "Mage Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 6 && classes.known.captain.level < 14)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bmage\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Mage";
                    CurrentSpells["captain"].shortname = "Mage";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bmage\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }            
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Mage cohort can cast these spells. These spells use the mage's Intelligence for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor", "message", "hold person", "invisibility"],
                    name: "Mage Cohort",
                    selection: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor", "message", "hold person", "invisibility"],
                    firstCol: "atwill",
                    times: 8,
                    magicitemComponents: true,
                    spellcastingAbility: 4,
                }]
            },
            "mage: generate spells (14th level)": {
                name: "Mage Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 14 && classes.known.captain.level < 18)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bmage\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Mage";
                    CurrentSpells["captain"].shortname = "Mage";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bmage\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }            
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Mage cohort can cast these spells. These spells use the mage's Intelligence for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor", "message", "hold person", "invisibility", "dimension door", "polymorph"],
                    name: "Mage Cohort",
                    selection: ["mage hand", "prestidigitation", "floating disk", "grease", "mage armor", "message", "hold person", "invisibility", "dimension door", "polymorph"],
                    firstCol: "atwill",
                    times: 10,
                    magicitemComponents: true,
                    spellcastingAbility: 4,
                }]
            },
            "mage: generate spells (18th level)": {
                name: "Mage Cohort",
                description: "\n    I gain a cohort. Select a cohort using the \"Companion Options\" button on a Companion"+
                             "\n    page, and generate cohort spell sheets by using the \"Choose Feature\" button above.  If my"+
                             "\n    cohort is slain, I can return my cohort to life by the usual methods, or initiate a new cohort."+
                             "\n    The previous cohort loses all abilities granted by this ability.", 
                prereqeval: function(v) {
                    if (!(classes.known.captain.level >= 18)) return false;
 
                    for (var entry in CurrentCompRace) {
                        if (/\bmage\b/i.test(CurrentCompRace[entry].known)) return true;
                    }
                    return false;
                },
                eval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Mage";
                    CurrentSpells["captain"].shortname = "Mage";
                },
                removeeval: function(lvl, chc){
                    CurrentSpells["captain"].name = "Captain";
                    CurrentSpells["captain"].shortname = "Captain";
                },
                calcChanges: {
                    spellCalc: [
                        function (type, spellcasters, ability) {
                            if (spellcasters.indexOf("captain") == -1 || type == "prepare" || ability === 0) return;
                
                            var prefix = false;
                            for (var entry in CurrentCompRace) {
                                if ( /\bmage\b/i.test(CurrentCompRace[entry].known) ) {
                                    prefix = entry;
                                    break;
                                }
                            }            
                            if (!prefix) return;
                
                            var abi = AbilityScores.abbreviations[ability - 1];
                
                            var charMod = Number(What(abi + " Mod"));
                            var creaMod = Number(What(prefix + "Comp.Use.Ability." + abi + ".Mod"));
                
                            return creaMod - charMod;
                        }, "My Mage cohort can cast these spells. These spells use the mage's Intelligence for the spellcasting ability, spell attacks, and saving throw DCs."
                    ]
                },
                spellcastingBonus:[{
                    spells: ["mage hand", "prestidigitation", "tenser's floating disk", "grease", "mage armor", "message", "hold person", "invisibility", "dimension door", "polymorph", "otiluke's resilient sphere"],
                    name: "Mage Cohort",
                    selection: ["mage hand", "prestidigitation", "tenser's floating disk", "grease", "mage armor", "message", "hold person", "invisibility", "dimension door", "polymorph", "otiluke's resilient sphere"],
                    firstCol: "atwill",
                    times: 11,
                    magicitemComponents: true,
                    spellcastingAbility: 4,
                }]
            }
        },
        "subclassfeature3" : {
            name: "Banner",
            source: ["VSoS", 38],
            minlevel: 3,
            description: "\n    Choose a Banner to fly by entering it in the \"Class\" field."
        },
        "war tactics" : {
            name: "War Tactics",
            source: ["VSoS", 38],
            minlevel: 3,
            additional: levels.map(function (n) { 
				return n < 3 ? "" : n < 6 ? "d8" : n < 10 ? "d8" : n < 14 ? "d10" : n < 18 ? "d10" : "d12";
			}),
			limfeaname : "Battle Dice",
			usages : levels.map(function(n){
				return n < 3 ? 0 : n < 6 ? 2 : n < 14 ? 3 : 4;
			}),
			recovery : "SR/Init",
            description: "\n    I gain a pool of battle dice, which I can use to perform special maneuvers in combat."+
                            "\n    I regain expended battle dice finishing a short/long rest, or when rolling initiative."+
                            "\n    My battle dice change when I reach certain captain levels."+
                            "\n    If a maneuver requires a saving throw, the DC is (8 + proficiency + my Charisma mod).",
            extraname: "War Tactic Maneuver",
            action: [["bonus action", "Brace"],
                        ["bonus action", "Rally"],
                        ["bonus action", "Staggering Strike"]],
            extrachoices : ["Brace", "Rally", "Staggering Strike (Captain)"],
            choicesNotInMenu : true,
            "brace" : {
                name: "Brace",
                source: ["VSoS", 48],
                description: "\n    As a bonus action, I can expend a battle die. Each allied creature within 30 feet of me that"+
                                "\n    can see or hear me adds the battle die to all saves they make until the end of my next turn.",
            },
            "rally" : {
                name: "Rally",
                source: ["VSoS", 48],
                description: "\n    As a bonus action, I can expend a battle die to choose 1 ally other than myself within 60 ft of"+
                                "\n    me that can see or hear me. That ally regains hit points equal to the number rolled + my"+
                                "\n    Charisma modifier. I can't use this ability to heal a creature that has 0 hit points."
            },
            "staggering strike (captain)" : {
                name: "Staggering Strike",
                source: ["VSoS", 48],
                description: "\n    As a bonus action, when I make a weapon attack against a Large or smaller creature, I can"+
                                "\n    expend a battle die. On a hit, the target must make a Constitution save or be incapacitated"+
                                "\n    until the start of my next turn."
            },
            autoSelectExtrachoices : [{
                extrachoice: "brace"
            }, {
                extrachoice: "rally"
            }, {
                extrachoice: "staggering strike (captain)"
            }],
        },
        "blitz" : {
            name: "Blitz",
            source: ["VSoS", 48],
            minlevel: 5,
            description: "\n    As a bonus action, I can have a cohort or friendly creature within 60 feet of me that can see"+
                            "\n    or hear me use their reaction to move up to their speed or make a weapon attack.",
            action: ["bonus action", "Blitz"]
        },
        "advanced tactics" : {
            name: "Advanced Tactics",
            source: ["VSoS", 48],
            minlevel: 9,
            description: "My War Tactics maneuvers improve.",
            extraname: "Advanced Maneuver",
            "advanced brace" : {
                name: "Advanced Brace",
                source: ["VSoS", 49],
                description: "\n    When I use Brace, affected allies also add the battle die to their ability checks."
            },
            "advanced rally" : {
                name: "Advanced Rally",
                source: ["VSoS", 49],
                description: "\n    When I use Rally, the chosen creature also gains temp hit points equal to my captain level."
            },
            "advanced staggering strike" : {
                name: "Advanced Staggering Strike",
                source: ["VSoS", 49],
                description: "\n    When I use Staggering Strike, I also add the battle die to the damage roll."
            },
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (!v.isDC && !v.isRangedWeapon && v.isMeleeWeapon){
                            var lvl = classes.known.captain.level;
                            var die = lvl < 9 ? "" : "Staggering Strike +" + (lvl < 10 ? "1d8" : lvl < 18 ? "1d10" : "1d12");
                            fields.Description += (fields.Description ? "; " : '') +  die;
                        }
                    }, "I add the battle die roll to my Staggering Strike damage."
                ]
            },
            autoSelectExtrachoices : [{
                extrachoice: "advanced brace"
            }, {
                extrachoice: "advanced rally"
            }, {
                extrachoice: "advanced staggering strike"
            }],
        },
        "coordi nated strike" : {
            name: "Coordinated Strike",
            source: ["VSoS", 49],
            minlevel: 11,
            description: "\n    Once/each on my turns when I hit a creature with an attack, I can deal an extra 2d8 damage"+
                            "\n    if my cohort has also hit that creature with an attack since the end of my last turn.",
            calcChanges: {
                atkAdd: [ 
					function(fields, v) {
                    	if (!v.isDC) fields.Description += (fields.Description ? "; " : '') + "Coordinated strike +2d8 w/Cohort";
                	}, "Once on each of my turns, when I hit a creature with an attack, I can deal an extra 2d8 damage if my cohort has also hit that creature with an attack since the end of my last turn."
                ]
            }
        },
        "lead by example" : {
            name: "Lead By Example",
            source: ["VSoS", 49],
            minlevel: 15,
            description: "\n    When I roll a 20 on an attack roll/ability check/save, friendly creatures within 30 ft of me gain"+
                         "\n    advantage when it makes the same type of roll before the start of my next turn."
        },
        "legendary commander" : {
            name: "Legendary Commander",
            source: ["VSoS", 49],
            minlevel: 20,
            additional: "3 x long rest",
            description: "\n    I gain 3 legendary actions. At the end of another creature's turn, I can spend a legendary"+
                            "\n    action to take an action of my choice, or allow a friendly creature within 60 feet of me that"+
                            "\n    can hear/see me to take an action of their choice. If the creature takes an Attack action as"+
                            "\n    a legendary action, they can use features they have that gives them extra attacks.",
            extraLimitedFeatures: [{
                name: "Legendary Actions",
                usages: 3,
                recovery: "long rest",
            }]
        }
    }
}

// * Captain Subclasses

// * Dragon Banner Captain subclass
AddSubClass("captain", "dragon",{
	regExpSearch: /\bdragon banner\b/i,
	subname: "Dragon Banner",
	source: ["VSoS", 49],
	features: {
		"subclassfeature3" : {
			name: "Bonus Battle Die",
			source: ["VSoS", 49],
			minlevel: 3,
			description: " I gain 1 extra battle die.",
			limfeaname : "Battle Dice",
			usages : levels.map(function(n){
				return n < 3 ? 0 : 1;
			}),
			additional: levels.map(function (n) { 
				return n < 3 ? "" : n < 6 ? "d8" : n < 10 ? "d8" : n < 14 ? "d10" : n < 18 ? "d10" : "d12";
			}),
			recovery : "short rest",
			limfeaAddToExisting : true,			
		},
		"subclassfeature3.1" : {
			name: "Maneuver: Cleave",
			source: ["VSoS", 49],
			minlevel: 3,
			description: " I gain a new maneuver. See notes page.",
			extraname: "Dragon Banner Maneuver",
			"cleave": {
				name: "Cleave",
				source: ["VSoS", 49],
				description: "\n    Once on each of my turns, when I reduce a hostile creature to 0 hit points or score a crit with"+
								"\n    a melee weapon attack, I can spend a battle die to move up to 15 ft and make another melee"+
								"\n    weapon attack as part of the same action. On hit, I add the battle die to the damage roll."
			},
			autoSelectExtrachoices: [{
				extrachoice: "cleave"
			}]
		},
		"subclassfeature7": {
			name: "Maneuver: Wade Into Battle",
			source: ["VSoS", 49],
			minlevel: 7,
			description: " I gain a new maneuver. See notes.",
			extraname: "Dragon Banner Maneuver",
			action: ["bonus action", "Wade Into Battle"],
			"wade into battle": {
				name: "Wade Into Battle",
				source: ["VSoS", 49],
				description: "\n    I can expend a battle die to take the Dash or Disengage action as a bonus action.",
				action : [["bonus action", "Dash/Disengage (1 Battle Dice)"]]
			},
			autoSelectExtrachoices: [{
				extrachoice: "wade into battle"
			}]
		},
		"subclassfeature13": {
			name: "Maneuver: Fury Attack",
			source: ["VSoS", 50],
			minlevel: 13,
			description: " I gain a new maneuver. See notes page.",
			extraname: "Dragon Banner Maneuver",
			action: ["bonus action", "Fury Attack"],
			"fury attack" : {
				name: "Fury Attack",
				source: ["VSoS", 50],
				description: "\n    When I take the attack action on my turn, I may spend a battle die and a bonus action to"+
								"\n    make up to 3 melee weapon attacks instead of 1. Each attack must target a different creature."
			},
			autoSelectExtrachoices: [{
				extrachoice: "fury attack"
			}]
		},
		"subclassfeature17": {
			name: "Vicious Focus",
			source: ["VSoS", 50],
			minlevel: 17,
			description: "\n    When I reduce a hostile creature to 0 hit points or score a crit on a melee weapon attack, for"+
							"\n    the next minute, my weapon attacks score a crit on a 19 or 20. Each time I reduce a hostile"+
							"\n    creature's hit points to 0 or score another crit during this minute, my critical hit range"+
							"\n    increases by 1, to a maximum of 16-20. If I fall unconscious, this effect ends early."
		}
	}
})

// * Eagle Banner Captain subclass
AddSubClass("captain","eagle",{
	regExpSearch: /\beagle banner\b/i,
	subname: "Eagle Banner",
	source: ["VSoS", 50],
	features: {
		"subclassfeature3" : {
			name: "Manuever: Eagle Shot",
			source: ["VSoS", 50],
			minlevel: 3,
			description: " I gain a new maneuver. See notes page.",
			extraname: "Eagle Banner Maneuver",
			action: ["bonus action", "Eagle Shot"],
			"eagle shot" : {
				name: "Eagle Shot",
				source: ["VSoS", 50],
				description: "\n    When I make a ranged weapon attack roll, I can use my bonus action and expend a battle die"+
								"\n    to add it to the roll. I can use this ability before/after the attack roll, but before the GM says"+
								"\n    the attack hits or misses.",
				action : [["bonus action", "Eagle Shot (1 Battle Dice)"]]
			},
			autoSelectExtrachoices: [{
				extrachoice: "eagle shot"
			}]
		},
		"subclassfeature7" : {
			name: "Vantage Point",
			source: ["VSoS", 50],
			minlevel: 7,
			description: "\n    I gain a climbing speed equal to my walking speed, and can climb difficult surfaces at half"+
							"\n    speed without making an ability check.",
			speed: { climb: {spd: "walk", enc : "walk"} } 
		},
		"subclassfeature13" : {
			name: "Close-Quarters Shooting",
			source: ["VSoS", 50],
			minlevel: 13,
			description: "\n    I, and friendly creatures within 15 feet of me, don't gain disadvantage on ranged attack rolls"+
							"\n    from being within 5 feet of a hostile creature."
		},
		"subclassfeature17" : {
			name: "Scattershot",
			source: ["VSoS", 50],
			minlevel: 17,
			description: "\n    I can use my action to make a ranged weapon attack against each creature I choose within a"+
							"\n    15 ft cone, making a separate attack roll for each target. If I target only one creature in this"+
							"\n    cone, my attack deals one additional weapon damage die.",
			action: ["action", "Scattershot"],
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (/scattershot/i.test(v.WeaponTextName) && v.isRangedWeapon && !v.isDC) {
							fields.Range = "15 ft cone";
							fields.Description += (fields.Description ? "; " : '') + "1 atk per target; if only 1 target, +1 dmg die";
						}
					}, 'If the word \"Scattershot\" is included in a ranged weapon attack, it is treated as if it is using my Scattershot feature.'
				]
			}
		}
	}
})

// * Jolly Roger Captain subclass
AddSubClass("captain","jolly roger",{
	regExpSearch: /\bjolly roger banner\b/i,
	subname: "Jolly Roger Banner",
	source: ["VSoS", 50],
	features: {
		"subclassfeature3" : {
			name: "Maneuver: Double Thrust",
			source: ["VSoS", 50],
			minlevel: 3,
			description: " I gain a new maneuver. See notes.",
			extraname: "Jolly Roger Banner Maneuver",
			action: ["bonus action", "Double Thrust"],
			"double thrust" : {
				name: "Double Thrust",
				source: ["VSoS", 50],
				description: "\n    When I make an attack with a finesse weapon as part of the Attack Action on my turn, I can"+
								"\n    spend a battle die as a bonus action to make an additional attack with that weapon. I add the"+
								"\n    battle die, instead of my ability modifier, to the weapon's damage roll."
			},
			autoSelectExtrachoices: [{
				extrachoice: "double thrust"
			}],
			calcChanges: {
				atkCalc: [
					function(fields, v, output){
						if (/double thrust/i.test(v.WeaponTextName) && /finesse/i.test(fields.Description) && !v.isDC && v.isMeleeWeapon && classes.known.captain.level > 2) {
							var lvl = classes.known.captain.level;
							var die = lvl < 10 ? "1d8" : lvl < 18 ? "1d10" : "1d12";
							fields.Damage_Bonus = die,
							v.theWea.abilitytodamage = false;
						}
					}, "When the phrase \"Double Thrust\" is added to an attack, I add a battle die, instead of my ability modifier, to the damage roll."
				]
			},
		},
		"subclassfeature7" : {
			name: "Tricky Footwork",
			source: ["VSoS", 50],
			minlevel: 7,
			description: "\n    When I hit a creature of my size or smaller with a melee attack on my turn, I can switch places"+
							"\n    with the target. This movement doesn't provoke opportunity attacks.",
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (v.isMeleeWeapon) {
							fields.Description += (fields.Description ? "; " : '') + "On hit vs crea my size or smaller, can switch w/ target";
						}
					}
				]
			}
		},
		"subclassfeature13" : {
			name: "Unfair Play",
			source: ["VSoS", 50],
			minlevel: 13,
			description: "\n    My cohort and I can use a bonus action to take the Hide, Use an Object action, or attempt to"+
							"\n    shove a creature. I have advantage on Strength (Athletics) checks to push another creature"+
							"\n    out of a waterborne vessel.",
			action: ["bonus action", "Unfair Play"],
			calcChanges: {
				companionCallback: [function(prefix, oCrea, bAdd, sCompType) {
					if (sCompType !== "cohort") return;
					var str = "\u25C6 Unfair Play: (bonus action) The cohort can take the Hide, Use an Object action, or attempt to shove a creature.";
					var aFnc = bAdd ? AddString : RemoveString;
					aFnc(prefix + "Comp.Use.Traits", str, true);
				}] 
			}               
		},
		"subclassfeature17" : {
			name: "All Hands On Deck",
			source: ["VSoS", 50],
			minlevel: 17,
			description: "\n    I can use my action on my turn to direct each friendly creature within 60 feet of me that can"+
							"\n    see me or hear me to use their reaction to take an action of my choice. This action cannot be"+
							"\n    the Attack, Cast a Spell, Dodge, or Use a Magic Item action.",
			action: ["action", "All Hands On Deck"]
		}
	}
})

// * Craftsman - Masterwork Weapon Properties Options
var WeaponSlots = ["A", "B", "C", "D", "E"];
var MasterworkWeaponPropertyOptions = [
	"Apprentice: Aerodynamic",
	"Apprentice: Automatic",
	"Apprentice: Balanced",
	"Apprentice: Concealable",
	"Apprentice: Elegant",
	"Apprentice: Exotic",
	"Apprentice: Extended Magazine",
	"Apprentice: Finesse",
	"Apprentice: Firearm",
	"Apprentice: Fist",
	"Apprentice: Foregrip",
	"Apprentice: Heavy",
	"Apprentice: Light",
	"Apprentice: Loading",
	"Apprentice: Martial",
	"Apprentice: Parrying",
	"Apprentice: Reach",
	"Apprentice: Reload",
	"Apprentice: Returning",
	"Apprentice: Scatter",
	"Apprentice: Sighted",
	"Apprentice: Superheavy",
	"Apprentice: Switch",
	"Apprentice: Thrown",
	"Apprentice: Trip",
	"Apprentice: Two-handed",
	"Apprentice: Versatile",
	"Journeyman: Counterweighted",
	"Journeyman: Double",
	"Journeyman: Explosive",
	"Journeyman: Heat",
	"Journeyman: Magical",
	"Journeyman: Massive",
	"Journeyman: Mounted",
	"Journeyman: Precision",
	"Journeyman: Rocket",
	"Journeyman: Sniper",
	"Journeyman: Tension",
	"Journeyman: Twinshot",
	"Master: Adamantine",
	"Master: Blessed",
	"Master: Earthshatter",
	"Master: Elemental (Acid)",
	"Master: Elemental (Cold)",
	"Master: Elemental (Fire)",
	"Master: Elemental (Lightning)",
	"Master: Elemental (Thunder)",
	"Master: Keen",
	"Master: Magical",
	"Master: Mithral",
	"Master: Serrated",
	"Master: Slaying (Aberrations)",
	"Master: Slaying (Beasts)",
	"Master: Slaying (Celestials)",
	"Master: Slaying (Constructs)",
	"Master: Slaying (Dragons)",
	"Master: Slaying (Elementals)",
	"Master: Slaying (Fey)",
	"Master: Slaying (Fiends)",
	"Master: Slaying (Giants)",
	"Master: Slaying (Monstrosities)",
	"Master: Slaying (Oozes)",
	"Master: Slaying (Plants)",
	"Master: Slaying (Undead)",
	"Master: Vampiric",
	"Master: Venom",
	"Legendary: Crushing",
	"Legendary: Deadly",
	"Legendary: Magical",
	"Legendary: Penetrating",
	"Legendary: Seeking",
	"Legendary: Threatening",
	"Legendary: Vorpal",
	"Legendary: Whirlwind"
];
 
var MasterworkWeaponChoices = GenerateMasterworkWeaponOptions();
 
function GenerateMasterworkWeaponOptions() {
    var options = [];
    for (var i = 0; i < WeaponSlots.length; ++i){
        for (var o = 0; o < MasterworkWeaponPropertyOptions.length; ++o){
            options.push(MasterworkWeaponPropertyOptions[o] + " " + WeaponSlots[i]);
        }
    }
    return options;
}

var MasterworkWeaponProperties = {
    // Weapon Slot A
    aerodynamicA: {
        name: "Apprentice: Aerodynamic A",
        source: ["VSoS", 78],
        submenu: "Weapon Slot A",
        additional: "Prereq: Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function (fields, v){
                    ClassList["craftsman"].AddAerodynamic(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
                101
            ]
        }
    },
    automaticA: {
        name: "Apprentice: Automatic A",
        source: ["VSoS", 78],
        submenu: "Weapon Slot A",
        additional: "Prereq: Ranged, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAutomatic(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
                104
            ]
        }
    },
    balancedA: {
        name: "Apprentice: Balanced A",
        source: ["VSoS", 78],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBalanced(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
                103
            ]
        }
    },
    concealableA: {
        name: "Apprentice: Concealable A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddConcealable(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
                102
            ]
        }
    },
    elegantA: {
        name: "Apprentice: Elegant A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElegant(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
                103
            ]
        }
    },
    exoticA: {
        name: "Apprentice: Exotic A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExotic(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
                101,
            ]
        }
    },
    extendedmagA: {
        name: "Apprentice: Extended Magazine A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExtendedMag(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
                104
            ]
        }
    },
    finesseA: {
        name: "Apprentice: Finesse A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFinesse(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
                101
            ]
        }
    },
    firearmA: {
        name: "Apprentice: Firearm A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Ranged, Loading/Reload, no Tension",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFirearm(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
                105
            ],
            atkCalc: [
                function (fields, v, output){
                    ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "A");              
                }
            ]
        }
    },
    fistA: {
        name: "Apprentice: Fist A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Melee, Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFist(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
                102
            ]
        }
    },
    foregripA: {
        name: "Apprentice: Foregrip A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq Ranged, Ammunition, no Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddForegrip(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
                101
            ]
        }
    },
    heavyA: {
        name: "Apprentice: Heavy A",
        source: ["VSoS", 79],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Two-handed, no Double",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeavy(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
                102
            ]
        }
    },
    lightA: {
        name: "Apprentice: Light A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq: no Two-handed/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLight(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
                101
            ]
        }
    },
    loadingA: {
        name: "Apprentice: Loading A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq Ranged, Ammunition, no Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLoading(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
                104
            ]
        }
    },
    martialA: {
        name: "Apprentice: Martial A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq: Simple",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMartial(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
                100
            ]
        }
    },
    parryingA: {
        name: "Apprentice: Parrying A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic, Melee, Finesse/Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddParrying(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
                102
            ],
        },
        extraAC: [{
            mod: 1,
            name: "Parrying Weapon",
            text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
            stopeval: function (v) {
                return v.usingShield;
            }
        }]
    },
    reachA: {
        name: "Apprentice: Reach A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddReach(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
                102
            ]
        }
    },
    reloadA: {
        name: "Apprentice: Reload A",
        source: ["VSoS", 80],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddReload(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReload\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
                103
            ]
        }
    },
    returningA: {
        name: "Apprentice: Returning A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Light, Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v) {
                    ClassList["craftsman"].AddReturning(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
                102
            ]
        }
    },
    scatterA: {
        name: "Apprentice: Scatter A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddScatter(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
                103
            ]
        }
    },
    sightedA: {
        name: "Apprentice: Sighted A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSighted(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
                103
            ]
        }
    },
    superheavyA: {
        name: "Apprentice: Superheavy A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic, Melee, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSuperheavy(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                103
            ]
        }
    },
    switchA: {
        name: "Apprentice: Switch A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: 2 Exotic weapons",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSwitch(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                102
            ]
        }
    },
    thrownA: {
        name: "Apprentice: Thrown A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Melee, no Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThrown(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
                100
            ]
        }
    },
    tripA: {
        name: "Apprentice: Trip A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Martial/Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTrip(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
                102
            ]
        }
    },
    twohandedA: {
        name: "Apprentice: Two-handed A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwohanded(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
                100
            ]
        }
    },
    versatileA: {
        name: "Apprentice: Versatile A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Melee, no Light/Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVersatile(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
                100
            ]
        }
    },
    counterweightedA: {
        name: "Journeyman: Counterweighted A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic, Two-handed",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Counterweighted A/.exec(What('Extra.Notes'))); },
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCounterweighted(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
                102
            ]
        }
    },
    doubleA: {
        name: "Journeyman: Double A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        additional: "Prereq: Exotic, Melee, no Heavy",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Double A/.exec(What('Extra.Notes'))); },
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddDouble(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
                103
            ]
        }
    },
    explosiveA: {
        name: "Journeyman: Explosive A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Explosive A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExplosive(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
                102
            ]
        }
    },
    heatA: {
        name: "Journeyman: Heat A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Heat A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeat(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
                106
            ]
        }
    },
    journeymanmagicalA: {
        name: "Journeyman: Magical A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Journeyman: Magical A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                103
            ], 
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");             
                }, "",
                103
            ]
        }
    },
    massiveA: {
        name: "Journeyman: Massive A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Massive A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Superheavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMassive(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
                104
            ]
        }
    },
    mountedA: {
        name: "Journeyman: Mounted A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Mounted A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMounted(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
                103
            ]
        }
    },
    precisionA: {
        name: "Journeyman: Precision A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Precision A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPrecision(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
                103
            ]
        }
    },
    rocketA: {
        name: "Journeyman: Rocket A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Rocket A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddRocket(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
                103
            ]
        }
    },
    sniperA: {
        name: "Journeyman: Sniper A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Sniper A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSniper(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
                103
            ]
        }
    },
    tensionA: {
        name: "Journeyman: Tension A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Tension A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTension(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
                106
            ]
        }
    },
    twinshotA: {
        name: "Journeyman: Twinshot A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Twinshot A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwinshot(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
                102
            ]
        }
    },
    adamantineA: {
        name: "Master: Adamantine A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Adamantine A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Heavy/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAdamantine(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
                103
            ]
        }
    },
    blessedA: {
        name: "Master: Blessed A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Blessed A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBlessed(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
                102
            ]
        }
    },
    earthshatterA: {
        name: "Master: Earthshatter A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Earthshatter A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Massive",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddEarthshatter(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
                105
            ]
        }
    },
    elementalacidA: {
        name: "Master: Elemental (Acid) A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Elemental \(Acid\) A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "A", "Acid");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
                102
            ]
        }
    },
    elementalcoldA: {
        name: "Master: Elemental (Cold) A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Cold\) A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "A", "Cold");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
                102
            ]
        }
    },
    elementalfireA: {
        name: "Master: Elemental (Fire) A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Fire\) A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "A", "Fire");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
                102
            ]
        }
    },
    elementallightningA: {
        name: "Master: Elemental (Lightning) A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Lightning\) A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "A", "Lightning");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
                102
            ]
        }
    },
    elementalthunderA: {
        name: "Master: Elemental (Thunder) A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Thunder\) A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "A", "Thunder");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
                102
            ]
        }
    },
    keenA: {
        name: "Master: Keen A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Keen A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddKeen(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
                103
            ]
        }
    },
    mastermagicalA: {
        name: "Master: Magical A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Master: Magical A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");     
                }, "",
                102
            ]
        }
    },
    mithralA: {
        name: "Master: Mithral A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Mithral A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMithral(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
                102
            ]
        }
    },
    serratedA: {
        name: "Master: Serrated A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Serrated A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals Slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSerrated(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
            ]
        }
    },
    slayingSpecialA: {
        name: "Master: Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "of a chosen type");
                }, "Choose a creature type when you add this property. If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
                102
            ]
        }
    },
    slayingAberrationA: {
        name: "Master: Aberration Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Aberration Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "aberrations");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
                102
            ]
        }
    },
    slayingBeastA: {
        name: "Master: Beast Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Beast Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "beasts");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
                102
            ]
        }
    },
    slayingCelestialA: {
        name: "Master: Celestial Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Celestial Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "celestials");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
                102
            ]
        }
    },
    slayingConstructA: {
        name: "Master: Construct Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Construct Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "constructs");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
                102
            ]
        }
    },
    slayingDragonA: {
        name: "Master: Dragon Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Dragon Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "dragons");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
                102
            ]
        }
    },
    slayingElementalA: {
        name: "Master: Elemental Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Elemental Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "elementals");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
                102
            ]
        }
    },
    slayingFeyA: {
        name: "Master: Fey Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Fey Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "fey");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
                102
            ]
        }
    },
    slayingFiendA: {
        name: "Master: Fiend Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Fiend Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "fiends");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
                102
            ]
        }
    },
    slayingGiantA: {
        name: "Master: Giant Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Giant Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "giants");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
                102
            ]
        }
    },
    slayingMonstrosityA: {
        name: "Master: Monstrosity Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Monstrosity Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "monstrosities");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
                102
            ]
        }
    },
    slayingOozeA: {
        name: "Master: Ooze Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Ooze Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "oozes");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
                102
            ]
        }
    },
    slayingPlantA: {
        name: "Master: Plant Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Plant Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "plants");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
                102
            ]
        }
    },
    slayingUndeadA: {
        name: "Master: Undead Slaying A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Undead Slaying A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "A", "undead");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
                102
            ]
        }
    },
    vampiricA: {
        name: "Master: Vampiric A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Vampiric A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVampiric(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
                102
            ]
        }
    },
    venomA: {
        name: "Master: Venom A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Venom A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVenom(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
                102
            ]
        }
    },
    crushingA: {
        name: "Legendary: Crushing A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Crushing A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals bludgeoning",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCrushing(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
                102
            ]
        }
    },
    deadlyA: {
        name: "Legendary: Deadly A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Deadly A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "A");               
                }, "If the letter \"A\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
                106
            ]
        }
    },
    legendarymagicalA: {
        name: "Legendary: Magical A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Legendary: Magical A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");             
                }, "",
                102
            ]
        }
    },
    penetratingA: {
        name: "Legendary: Penetrating A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Penetrating A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPenetrating(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
                102
            ]
        }
    },
    seekingA: {
        name: "Legendary: Seeking A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Seeking A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSeeking(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
                102
            ]
        }
    },
    threateningA: {
        name: "Legendary: Threatening A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Threatening A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThreatening(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
                102
            ]
        }
    },
    vorpalA: {
        name: "Legendary: Vorpal A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Vorpal A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVorpal(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
                102
            ]
        }
    },
    whirlwindA: {
        name: "Legendary: Whirlwind A",
        source: ["VSoS", 81],
        submenu: "Weapon Slot A",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Whirlwind A/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
        description: "",
        action: ["bonus action", "Whirlwind (Weapon A)"],
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddWhirlwind(fields, v, "A");
                }, "If the letter \"A\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
                104
            ]
        }
    },
 
    // Weapon Slot B
    aerodynamicB: {
        name: "Apprentice: Aerodynamic B",
        source: ["VSoS", 78],
        submenu: "Weapon Slot B",
        additional: "Prereq: Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function (fields, v){
                    ClassList["craftsman"].AddAerodynamic(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
                101
            ]
        }
    },
    automaticB: {
        name: "Apprentice: Automatic B",
        source: ["VSoS", 78],
        submenu: "Weapon Slot B",
        additional: "Prereq: Ranged, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAutomatic(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
                104
            ]
        }
    },
    balancedB: {
        name: "Apprentice: Balanced B",
        source: ["VSoS", 78],
        submenu: "Weapon Slot B",
        additional: "Prereq: Exotic, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBalanced(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
                103
            ]
        }
    },
    concealableB: {
        name: "Apprentice: Concealable B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddConcealable(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
                102
            ]
        }
    },
    elegantB: {
        name: "Apprentice: Elegant B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElegant(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
                103
            ]
        }
    },
    exoticB: {
        name: "Apprentice: Exotic B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExotic(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
                101,
            ]
        }
    },
    extendedmagB: {
        name: "Apprentice: Extended Magazine B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExtendedMag(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
                104
            ]
        }
    },
    finesseB: {
        name: "Apprentice: Finesse B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFinesse(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
                101
            ]
        }
    },
    firearmB: {
        name: "Apprentice: Firearm B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Ranged, Loading/Reload, no Tension",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFirearm(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
                105
            ],
            atkCalc: [
                function (fields, v, output){
                    ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "B");              
                }
            ]
        }
    },
    fistB: {
        name: "Apprentice: Fist B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Melee, Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFist(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
                102
            ]
        }
    },
    foregripB: {
        name: "Apprentice: Foregrip B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq Ranged, Ammunition, no Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddForegrip(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
                101
            ]
        }
    },
    heavyB: {
        name: "Apprentice: Heavy B",
        source: ["VSoS", 79],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Two-handed, no Double",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeavy(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
                102
            ]
        }
    },
    lightB: {
        name: "Apprentice: Light B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq: no Two-handed/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLight(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
                101
            ]
        }
    },
    loadingB: {
        name: "Apprentice: Loading B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq Ranged, Ammunition, no Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLoading(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
                104
            ]
        }
    },
    martialB: {
        name: "Apprentice: Martial B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq: Simple",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMartial(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
                100
            ]
        }
    },
    parryingB: {
        name: "Apprentice: Parrying B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq: Exotic, Melee, Finesse/Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddParrying(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
                102
            ]
        },
        extraAC: [{
            mod: 1,
            name: "Parrying Weapon",
            text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
            stopeval: function (v) {
                return v.usingShield;
            }
        }]
    },
    reachB: {
        name: "Apprentice: Reach B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddReach(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
                102
            ]
        }
    },
    reloadB: {
        name: "Apprentice: Reload B",
        source: ["VSoS", 80],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddReload(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
                103
            ]
        }
    },
    returningB: {
        name: "Apprentice: Returning B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Light, Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v) {
                    ClassList["craftsman"].AddReturning(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
                102
            ]
        }
    },
    scatterB: {
        name: "Apprentice: Scatter B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddScatter(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
                103
            ]
        }
    },
    sightedB: {
        name: "Apprentice: Sighted B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSighted(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
                103
            ]
        }
    },
    superheavyB: {
        name: "Apprentice: Superheavy B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Exotic, Melee, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSuperheavy(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                103
            ]
        }
    },
    switchB: {
        name: "Apprentice: Switch B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: 2 Exotic weapons",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSwitch(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                102
            ]
        }
    },
    thrownB: {
        name: "Apprentice: Thrown B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Melee, no Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThrown(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
                100
            ]
        }
    },
    tripB: {
        name: "Apprentice: Trip B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Martial/Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTrip(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
                102
            ]
        }
    },
    twohandedB: {
        name: "Apprentice: Two-handed B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwohanded(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
                100
            ]
        }
    },
    versatileB: {
        name: "Apprentice: Versatile B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        additional: "Prereq: Melee, no Light/Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVersatile(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
                100
            ]
        }
    },
    counterweightedB: {
        name: "Journeyman: Counterweighted B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Counterweighted B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCounterweighted(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
                102
            ]
        }
    },
    doubleB: {
        name: "Journeyman: Double B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Double B/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Exotic, Melee, no Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddDouble(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
                103
            ]
        }
    },
    explosiveB: {
        name: "Journeyman: Explosive B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Explosive B/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExplosive(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
                102
            ]
        }
    },
    heatB: {
        name: "Journeyman: Heat B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Heat B/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeat(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
                106
            ]
        }
    },
    journeymanmagicalB: {
        name: "Journeyman: Magical B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Journeyman: Magical B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");         
                }, "",
                102
            ]
        }
    },
    massiveB: {
        name: "Journeyman: Massive B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Massive B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Superheavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMassive(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
                104
            ]
        }
    },
    mountedB: {
        name: "Journeyman: Mounted B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Mounted B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMounted(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
                103
            ]
        }
    },
    precisionB: {
        name: "Journeyman: Precision B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Precision B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPrecision(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
                103
            ]
        }
    },
    rocketB: {
        name: "Journeyman: Rocket B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Rocket B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddRocket(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
                103
            ]
        }
    },
    sniperB: {
        name: "Journeyman: Sniper B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Sniper B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSniper(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
                103
            ]
        }
    },
    tensionB: {
        name: "Journeyman: Tension B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Tension B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTension(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
                106
            ]
        }
    },
    twinshotB: {
        name: "Journeyman: Twinshot B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Twinshot B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwinshot(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
                102
            ]
        }
    },
    adamantineB: {
        name: "Master: Adamantine B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Adamantine B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Heavy/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAdamantine(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
                103
            ]
        }
    },
    blessedB: {
        name: "Master: Blessed B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Blessed B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBlessed(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
                102
            ]
        }
    },
    earthshatterB: {
        name: "Master: Earthshatter B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Earthshatter B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Massive",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddEarthshatter(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
                105
            ]
        }
    },
    elementalacidB: {
        name: "Master: Elemental (Acid) B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Elemental \(Acid\) B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "B", "Acid");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
                102
            ]
        }
    },
    elementalcoldB: {
        name: "Master: Elemental (Cold) B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Cold\) B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "B", "Cold");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
                102
            ]
        }
    },
    elementalfireB: {
        name: "Master: Elemental (Fire) B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Fire\) B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "B", "Fire");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
                102
            ]
        }
    },
    elementallightningB: {
        name: "Master: Elemental (Lightning) B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Lightning\) B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "B", "Lightning");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
                102
            ]
        }
    },
    elementalthunderB: {
        name: "Master: Elemental (Thunder) B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Thunder\) B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "B", "Thunder");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
                102
            ]
        }
    },
    keenB: {
        name: "Master: Keen B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Keen B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddKeen(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
                103
            ]
        }
    },
    mastermagicalB: {
        name: "Master: Magical B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Master: Magical B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {   
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");         
                }, "",
                102
            ]
        }
    },
    mithralB: {
        name: "Master: Mithral B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Mithral B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMithral(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
                102
            ]
        }
    },
    serratedB: {
        name: "Master: Serrated B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Serrated B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals Slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSerrated(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
            ]
        }
    },
    slayingSpecialB: {
        name: "Master: Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "of a chosen type");
                }, "Choose a creature type when you add this property. If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
                102
            ]
        }
    },
    slayingAberrationB: {
        name: "Master: Aberration Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Aberration Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "aberrations");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
                102
            ]
        }
    },
    slayingBeastB: {
        name: "Master: Beast Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Beast Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "beasts");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
                102
            ]
        }
    },
    slayingCelestialB: {
        name: "Master: Celestial Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Celestial Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "celestials");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
                102
            ]
        }
    },
    slayingConstructB: {
        name: "Master: Construct Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Construct Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "constructs");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
                102
            ]
        }
    },
    slayingDragonB: {
        name: "Master: Dragon Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Dragon Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "dragons");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
                102
            ]
        }
    },
    slayingElementalB: {
        name: "Master: Elemental Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Elemental Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "elementals");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
                102
            ]
        }
    },
    slayingFeyB: {
        name: "Master: Fey Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Fey Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "fey");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
                102
            ]
        }
    },
    slayingFiendB: {
        name: "Master: Fiend Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Fiend Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "fiends");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
                102
            ]
        }
    },
    slayingGiantB: {
        name: "Master: Giant Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Giant Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "giants");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
                102
            ]
        }
    },
    slayingMonstrosityB: {
        name: "Master: Monstrosity Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Monstrosity Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "monstrosities");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
                102
            ]
        }
    },
    slayingOozeB: {
        name: "Master: Ooze Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Ooze Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "oozes");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
                102
            ]
        }
    },
    slayingPlantB: {
        name: "Master: Plant Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Plant Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "plants");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
                102
            ]
        }
    },
    slayingUndeadB: {
        name: "Master: Undead Slaying B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Undead Slaying B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "B", "undead");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
                102
            ]
        }
    },
    vampiricB: {
        name: "Master: Vampiric B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Vampiric B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVampiric(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
                102
            ]
        }
    },
    venomB: {
        name: "Master: Venom B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Venom B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVenom(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
                102
            ]
        }
    },
    crushingB: {
        name: "Legendary: Crushing B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Crushing B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals bludgeoning",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCrushing(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
                102
            ]
        }
    },
    deadlyB: {
        name: "Legendary: Deadly B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Deadly B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "B");               
                }, "If the letter \"B\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
                106
            ]
        }
    },
    legendarymagicalB: {
        name: "Legendary: Magical B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Legendary: Magical B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ],
            atkCalc: [
                function (fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");
                }, "",
                102
            ]
        }
    },
    penetratingB: {
        name: "Legendary: Penetrating B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Penetrating B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPenetrating(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
                102
            ]
        }
    },
    seekingB: {
        name: "Legendary: Seeking B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Seeking B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSeeking(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
                102
            ]
        }
    },
    threateningB: {
        name: "Legendary: Threatening B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Threatening B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThreatening(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
                102
            ]
        }
    },
    vorpalB: {
        name: "Legendary: Vorpal B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Vorpal B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVorpal(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
                102
            ]
        }
    },
    whirlwindB: {
        name: "Legendary: Whirlwind B",
        source: ["VSoS", 81],
        submenu: "Weapon Slot B",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Whirlwind B/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
        description: "",
        action: ["bonus action", "Whirlwind (Weapon B)"],
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddWhirlwind(fields, v, "B");
                }, "If the letter \"B\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
                104
            ]
        }
    },
 
    // Weapon Slot C
    aerodynamicC: {
        name: "Apprentice: Aerodynamic C",
        source: ["VSoS", 78],
        submenu: "Weapon Slot C",
        additional: "Prereq: Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function (fields, v){
                    ClassList["craftsman"].AddAerodynamic(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
                101
            ]
        }
    },
    automaticC: {
        name: "Apprentice: Automatic C",
        source: ["VSoS", 78],
        submenu: "Weapon Slot C",
        additional: "Prereq: Ranged, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAutomatic(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
                104
            ]
        }
    },
    balancedC: {
        name: "Apprentice: Balanced C",
        source: ["VSoS", 78],
        submenu: "Weapon Slot C",
        additional: "Prereq: Exotic, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBalanced(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
                103
            ]
        }
    },
    concealableC: {
        name: "Apprentice: Concealable C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddConcealable(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
                102
            ]
        }
    },
    elegantC: {
        name: "Apprentice: Elegant C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElegant(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
                103
            ]
        }
    },
    exoticC: {
        name: "Apprentice: Exotic C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExotic(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
                101,
            ]
        }
    },
    extendedmagC: {
        name: "Apprentice: Extended Magazine C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExtendedMag(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
                104
            ]
        }
    },
    finesseC: {
        name: "Apprentice: Finesse C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFinesse(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
                101
            ]
        }
    },
    firearmC: {
        name: "Apprentice: Firearm C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Ranged, Loading/Reload, no Tension",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFirearm(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
                105
            ],
            atkCalc: [
                function (fields, v, output){
                    ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "C");              
                }
            ]
        }
    },
    fistC: {
        name: "Apprentice: Fist C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Melee, Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFist(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
                102
            ]
        }
    },
    foregripC: {
        name: "Apprentice: Foregrip C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq Ranged, Ammunition, no Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddForegrip(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
                101
            ]
        }
    },
    heavyC: {
        name: "Apprentice: Heavy C",
        source: ["VSoS", 79],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Two-handed, no Double",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeavy(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
                102
            ]
        }
    },
    lightC: {
        name: "Apprentice: Light C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq: no Two-handed/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLight(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
                101
            ]
        }
    },
    loadingC: {
        name: "Apprentice: Loading C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq Ranged, Ammunition, no Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLoading(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
                104
            ]
        }
    },
    martialC: {
        name: "Apprentice: Martial C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq: Simple",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMartial(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
                100
            ]
        }
    },
    parryingC: {
        name: "Apprentice: Parrying C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq: Exotic, Melee, Finesse/Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddParrying(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
                102
            ]
        },
        extraAC: [{
            mod: 1,
            name: "Parrying Weapon",
            text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
            stopeval: function (v) {
                return v.usingShield;
            }
        }]
    },
    reachC: {
        name: "Apprentice: Reach C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddReach(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
                102
            ]
        }
    },
    reloadC: {
        name: "Apprentice: Reload C",
        source: ["VSoS", 80],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddReload(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
                103
            ]
        }
    },
    returningC: {
        name: "Apprentice: Returning C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Light, Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v) {
                    ClassList["craftsman"].AddReturning(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
                102
            ]
        }
    },
    scatterC: {
        name: "Apprentice: Scatter C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddScatter(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
                103
            ]
        }
    },
    sightedC: {
        name: "Apprentice: Sighted C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSighted(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
                103
            ]
        }
    },
    superheavyC: {
        name: "Apprentice: Superheavy C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Exotic, Melee, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSuperheavy(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                103
            ]
        }
    },
    switchC: {
        name: "Apprentice: Switch C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: 2 Exotic weapons",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSwitch(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                102
            ]
        }
    },
    thrownC: {
        name: "Apprentice: Thrown C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Melee, no Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThrown(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
                100
            ]
        }
    },
    tripC: {
        name: "Apprentice: Trip C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Martial/Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddTrip(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
                102
            ]
        }
    },
    twohandedC: {
        name: "Apprentice: Two-handed C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwohanded(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
                100
            ]
        }
    },
    versatileC: {
        name: "Apprentice: Versatile C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        additional: "Prereq: Melee, no Light/Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVersatile(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
                100
            ]
        }
    },
    counterweightedC: {
        name: "Journeyman: Counterweighted C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Counterweighted C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCounterweighted(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
                102
            ]
        }
    },
    doubleC: {
        name: "Journeyman: Double C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Double C/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Exotic, Melee, no Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddDouble(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
                103
            ]
        }
    },
    explosiveC: {
        name: "Journeyman: Explosive C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Explosive C/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExplosive(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
                102
            ]
        }
    },
    heatC: {
        name: "Journeyman: Heat C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Heat C/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeat(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
                106
            ]
        }
    },
    journeymanmagicalC: {
        name: "Journeyman: Magical C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Journeyman: Magical C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");             
                }, "",
                102
            ]
        }
    },
    massiveC: {
        name: "Journeyman: Massive C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Massive C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Superheavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMassive(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
                104
            ]
        }
    },
    mountedC: {
        name: "Journeyman: Mounted C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Mounted C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMounted(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
                103
            ]
        }
    },
    precisionC: {
        name: "Journeyman: Precision C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Precision C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPrecision(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
                103
            ]
        }
    },
    rocketC: {
        name: "Journeyman: Rocket C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Rocket C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddRocket(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
                103
            ]
        }
    },
    sniperC: {
        name: "Journeyman: Sniper C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Sniper C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSniper(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
                103
            ]
        }
    },
    tensionC: {
        name: "Journeyman: Tension C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Tension C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTension(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
                106
            ]
        }
    },
    twinshotC: {
        name: "Journeyman: Twinshot C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Twinshot C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwinshot(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
                102
            ]
        }
    },
    adamantineC: {
        name: "Master: Adamantine C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Adamantine C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Heavy/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAdamantine(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
                103
            ]
        }
    },
    blessedC: {
        name: "Master: Blessed C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Blessed C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBlessed(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
                102
            ]
        }
    },
    earthshatterC: {
        name: "Master: Earthshatter C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Earthshatter C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Massive",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddEarthshatter(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
                105
            ]
        }
    },
    elementalacidC: {
        name: "Master: Elemental (Acid) C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Elemental \(Acid\) C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "C", "Acid");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
                102
            ]
        }
    },
    elementalcoldC: {
        name: "Master: Elemental (Cold) C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Cold\) C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "C", "Cold");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
                102
            ]
        }
    },
    elementalfireC: {
        name: "Master: Elemental (Fire) C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Fire\) C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "C", "Fire");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
                102
            ]
        }
    },
    elementallightningC: {
        name: "Master: Elemental (Lightning) C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Lightning\) C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "C", "Lightning");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
                102
            ]
        }
    },
    elementalthunderC: {
        name: "Master: Elemental (Thunder) C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Thunder\) C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "C", "Thunder");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
                102
            ]
        }
    },
    keenC: {
        name: "Master: Keen C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Keen C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddKeen(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
                103
            ]
        }
    },
    mastermagicalC: {
        name: "Master: Magical C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Master: Magical C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ],
            atkCalc: [
                function (fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");
                }, "",
                102
            ]
        }
    },
    mithralC: {
        name: "Master: Mithral C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Mithral C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMithral(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
                102
            ]
        }
    },
    serratedC: {
        name: "Master: Serrated C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Serrated C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals Slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSerrated(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
            ]
        }
    },
    slayingSpecialC: {
        name: "Master: Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "of a chosen type");
                }, "Choose a creature type when you add this property. If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
                102
            ]
        }
    },
    slayingAberrationC: {
        name: "Master: Aberration Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Aberration Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "aberrations");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
                102
            ]
        }
    },
    slayingBeastC: {
        name: "Master: Beast Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Beast Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "beasts");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
                102
            ]
        }
    },
    slayingCelestialC: {
        name: "Master: Celestial Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Celestial Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "celestials");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
                102
            ]
        }
    },
    slayingDragonC: {
        name: "Master: Dragon Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Dragon Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "dragons");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
                102
            ]
        }
    },
    slayingConstructC: {
        name: "Master: Construct Slaying CA",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Construct Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "constructs");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
                102
            ]
        }
    },
    slayingElementalC: {
        name: "Master: Elemental Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Elemental Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "elementals");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
                102
            ]
        }
    },
    slayingFeyC: {
        name: "Master: Fey Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Fey Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "fey");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
                102
            ]
        }
    },
    slayingFiendC: {
        name: "Master: Fiend Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Fiend Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "fiends");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
                102
            ]
        }
    },
    slayingGiantC: {
        name: "Master: Giant Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Giant Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "giants");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
                102
            ]
        }
    },
    slayingMonstrosityC: {
        name: "Master: Monstrosity Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Monstrosity Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "monstrosities");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
                102
            ]
        }
    },
    slayingOozeC: {
        name: "Master: Ooze Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Ooze Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "oozes");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
                102
            ]
        }
    },
    slayingPlantC: {
        name: "Master: Plant Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Plant Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "plants");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
                102
            ]
        }
    },
    slayingUndeadC: {
        name: "Master: Undead Slaying C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Undead Slaying C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "C", "undead");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
                102
            ]
        }
    },
    vampiricC: {
        name: "Master: Vampiric C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Vampiric C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVampiric(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
                102
            ]
        }
    },
    venomC: {
        name: "Master: Venom C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Venom C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVenom(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
                102
            ]
        }
    },
    crushingC: {
        name: "Legendary: Crushing C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Crushing C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals bludgeoning",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCrushing(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
                102
            ]
        }
    },
    deadlyC: {
        name: "Legendary: Deadly C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Deadly C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "C");               
                }, "If the letter \"C\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
                106
            ]
        }
    },
    legendarymagicalC: {
        name: "Legendary: Magical C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Legendary: Magical C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {   
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");             
                }, "",
                102
            ]
        }
    },
    penetratingC: {
        name: "Legendary: Penetrating C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Penetrating C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPenetrating(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
                102
            ]
        }
    },
    seekingC: {
        name: "Legendary: Seeking C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Seeking C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSeeking(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
                102
            ]
        }
    },
    threateningC: {
        name: "Legendary: Threatening C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Threatening C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThreatening(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
                102
            ]
        }
    },
    vorpalC: {
        name: "Legendary: Vorpal C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Vorpal C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVorpal(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
                102
            ]
        }
    },
    whirlwindC: {
        name: "Legendary: Whirlwind C",
        source: ["VSoS", 81],
        submenu: "Weapon Slot C",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Whirlwind C/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
        description: "",
        action: ["bonus action", "Whirlwind (Weapon C)"],
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddWhirlwind(fields, v, "C");
                }, "If the letter \"C\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
                104
            ]
        }
    },
 
    // Weapon Slot D
    aerodynamicD: {
        name: "Apprentice: Aerodynamic D",
        source: ["VSoS", 78],
        submenu: "Weapon Slot D",
        additional: "Prereq: Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function (fields, v){
                    ClassList["craftsman"].AddAerodynamic(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
                101
            ]
        }
    },
    automaticD: {
        name: "Apprentice: Automatic D",
        source: ["VSoS", 78],
        submenu: "Weapon Slot D",
        additional: "Prereq: Ranged, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAutomatic(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
                104
            ]
        }
    },
    balancedD: {
        name: "Apprentice: Balanced D",
        source: ["VSoS", 78],
        submenu: "Weapon Slot D",
        additional: "Prereq: Exotic, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBalanced(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
                103
            ]
        }
    },
    concealableD: {
        name: "Apprentice: Concealable D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddConcealable(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
                102
            ]
        }
    },
    elegantD: {
        name: "Apprentice: Elegant D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElegant(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
                103
            ]
        }
    },
    exoticD: {
        name: "Apprentice: Exotic D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExotic(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
                101,
            ]
        }
    },
    extendedmagD: {
        name: "Apprentice: Extended Magazine D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExtendedMag(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
                104
            ]
        }
    },
    finesseD: {
        name: "Apprentice: Finesse D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFinesse(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
                101
            ]
        }
    },
    firearmD: {
        name: "Apprentice: Firearm D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Ranged, Loading/Reload, no Tension",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFirearm(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
                105
            ],
            atkCalc: [
                function (fields, v, output){
                    ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "D");              
                }
            ]
        }
    },
    fistD: {
        name: "Apprentice: Fist D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Melee, Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFist(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
                102
            ]
        }
    },
    foregripD: {
        name: "Apprentice: Foregrip D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq Ranged, Ammunition, no Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddForegrip(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
                101
            ]
        }
    },
    heavyD: {
        name: "Apprentice: Heavy D",
        source: ["VSoS", 79],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Two-handed, no Double",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeavy(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
                102
            ]
        }
    },
    lightD: {
        name: "Apprentice: Light D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq: no Two-handed/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLight(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
                101
            ]
        }
    },
    loadingD: {
        name: "Apprentice: Loading D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq Ranged, Ammunition, no Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLoading(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
                104
            ]
        }
    },
    martialD: {
        name: "Apprentice: Martial D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq: Simple",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMartial(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
                100
            ]
        }
    },
    parryingD: {
        name: "Apprentice: Parrying D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq: Exotic, Melee, Finesse/Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddParrying(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
                102
            ]
        },
        extraAC: [{
            mod: 1,
            name: "Parrying Weapon",
            text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
            stopeval: function (v) {
                return v.usingShield;
            }
        }]
    },
    reachD: {
        name: "Apprentice: Reach D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddReach(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
                102
            ]
        }
    },
    reloadD: {
        name: "Apprentice: Reload D",
        source: ["VSoS", 80],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddReload(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
                103
            ]
        }
    },
    returningD: {
        name: "Apprentice: Returning D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Light, Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v) {
                    ClassList["craftsman"].AddReturning(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
                102
            ]
        }
    },
    scatterD: {
        name: "Apprentice: Scatter D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddScatter(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
                103
            ]
        }
    },
    sightedD: {
        name: "Apprentice: Sighted D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSighted(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
                103
            ]
        }
    },
    superheavyD: {
        name: "Apprentice: Superheavy D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Exotic, Melee, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSuperheavy(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                103
            ]
        }
    },
    switchD: {
        name: "Apprentice: Switch D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: 2 Exotic weapons",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSwitch(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                102
            ]
        }
    },
    thrownD: {
        name: "Apprentice: Thrown D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Melee, no Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThrown(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
                100
            ]
        }
    },
    tripD: {
        name: "Apprentice: Trip D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Martial/Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTrip(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
                102
            ]
        }
    },
    twohandedD: {
        name: "Apprentice: Two-handed D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwohanded(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
                100
            ]
        }
    },
    versatileD: {
        name: "Apprentice: Versatile D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        additional: "Prereq: Melee, no Light/Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVersatile(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
                100
            ]
        }
    },
    counterweightedD: {
        name: "Journeyman: Counterweighted D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Counterweighted D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCounterweighted(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
                102
            ]
        }
    },
    doubleD: {
        name: "Journeyman: Double D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Double D/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Exotic, Melee, no Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddDouble(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
                103
            ]
        }
    },
    explosiveD: {
        name: "Journeyman: Explosive D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Explosive D/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExplosive(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
                102
            ]
        }
    },
    heatD: {
        name: "Journeyman: Heat D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Heat D/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeat(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
                106
            ]
        }
    },
    journeymanmagicalD: {
        name: "Journeyman: Magical D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Journeyman: Magical D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {   
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");             
                }, "",
                102
            ]
        }
    },
    massiveD: {
        name: "Journeyman: Massive D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Massive D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Superheavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMassive(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
                104
            ]
        }
    },
    mountedD: {
        name: "Journeyman: Mounted D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Mounted D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMounted(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
                103
            ]
        }
    },
    precisionD: {
        name: "Journeyman: Precision D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Precision D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPrecision(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
                103
            ]
        }
    },
    rocketD: {
        name: "Journeyman: Rocket D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Rocket D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddRocket(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
                103
            ]
        }
    },
    sniperD: {
        name: "Journeyman: Sniper D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Sniper D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSniper(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
                103
            ]
        }
    },
    tensionD: {
        name: "Journeyman: Tension D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Tension D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTension(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
                106
            ]
        }
    },
    twinshotD: {
        name: "Journeyman: Twinshot D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Twinshot D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwinshot(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
                102
            ]
        }
    },
    adamantineD: {
        name: "Master: Adamantine D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Adamantine D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Heavy/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAdamantine(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
                103
            ]
        }
    },
    blessedD: {
        name: "Master: Blessed D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Blessed D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBlessed(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
                102
            ]
        }
    },
    earthshatterD: {
        name: "Master: Earthshatter D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Earthshatter D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Massive",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddEarthshatter(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
                105
            ]
        }
    },
    elementalacidD: {
        name: "Master: Elemental (Acid) D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Elemental \(Acid\) D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "D", "Acid");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
                102
            ]
        }
    },
    elementalcoldD: {
        name: "Master: Elemental (Cold) D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Cold\) D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "D", "Cold");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
                102
            ]
        }
    },
    elementalfireD: {
        name: "Master: Elemental (Fire) D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Fire\) D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "D", "Fire");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
                102
            ]
        }
    },
    elementallightningD: {
        name: "Master: Elemental (Lightning) D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Lightning\) D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "D", "Lightning");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
                102
            ]
        }
    },
    elementalthunderD: {
        name: "Master: Elemental (Thunder) D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Thunder\) D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "D", "Thunder");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
                102
            ]
        }
    },
    keenD: {
        name: "Master: Keen D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Keen D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddKeen(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
                103
            ]
        }
    },
    mastermagicalD: {
        name: "Master: Magical D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Master: Magical D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {   
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");             
                }, "",
                102
            ]
        }
    },
    mithralD: {
        name: "Master: Mithral D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Mithral D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMithral(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
                102
            ]
        }
    },
    serratedD: {
        name: "Master: Serrated D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Serrated D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals Slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSerrated(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
            ]
        }
    },
    slayingSpecialD: {
        name: "Master: Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "of a chosen type");
                }, "Choose a creature type when you add this property. If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
                102
            ]
        }
    },
    slayingAberrationD: {
        name: "Master: Aberration Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Aberration Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "aberrations");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
                102
            ]
        }
    },
    slayingBeastD: {
        name: "Master: Beast Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Beast Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "beasts");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
                102
            ]
        }
    },
    slayingCelestialD: {
        name: "Master: Celestial Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Celestial Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "celestials");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
                102
            ]
        }
    },
    slayingConstructD: {
        name: "Master: Construct Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Construct Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "constructs");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
                102
            ]
        }
    },
    slayingDragonD: {
        name: "Master: Dragon Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Dragon Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "dragons");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
                102
            ]
        }
    },
    slayingElementalD: {
        name: "Master: Elemental Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Elemental Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "elementals");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
                102
            ]
        }
    },
    slayingFeyD: {
        name: "Master: Fey Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Fey Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "fey");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
                102
            ]
        }
    },
    slayingFiendD: {
        name: "Master: Fiend Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Fiend Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "fiends");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
                102
            ]
        }
    },
    slayingGiantD: {
        name: "Master: Giant Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Giant Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "giants");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
                102
            ]
        }
    },
    slayingMonstrosityD: {
        name: "Master: Monstrosity Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Monstrosity Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "monstrosities");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
                102
            ]
        }
    },
    slayingOozeD: {
        name: "Master: Ooze Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Ooze Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "oozes");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
                102
            ]
        }
    },
    slayingPlantD: {
        name: "Master: Plant Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Plant Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "plants");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
                102
            ]
        }
    },
    slayingUndeadD: {
        name: "Master: Undead Slaying D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Undead Slaying D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "D", "undead");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
                102
            ]
        }
    },
    vampiricD: {
        name: "Master: Vampiric D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Vampiric D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVampiric(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
                102
            ]
        }
    },
    venomD: {
        name: "Master: Venom D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Venom D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVenom(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
                102
            ]
        }
    },
    crushingD: {
        name: "Legendary: Crushing D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Crushing D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals bludgeoning",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCrushing(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
                102
            ]
        }
    },
    deadlyD: {
        name: "Legendary: Deadly D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Deadly D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "D");               
                }, "If the letter \"D\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
                106
            ]
        }
    },
    legendarymagicalD: {
        name: "Legendary: Magical D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Legendary: Magical D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ],
            atkCalc: [
                function (fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");
                }, "",
                102
            ]
        }
    },
    penetratingD: {
        name: "Legendary: Penetrating D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Penetrating D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPenetrating(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
                102
            ], 
        }
    },
    seekingD: {
        name: "Legendary: Seeking D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Seeking D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSeeking(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
                102
            ]
        }
    },
    threateningD: {
        name: "Legendary: Threatening D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Threatening D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThreatening(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
                102
            ]
        }
    },
    vorpalD: {
        name: "Legendary: Vorpal D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Vorpal D/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVorpal(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
                102
            ]
        }
    },
    whirlwindD: {
        name: "Legendary: Whirlwind D",
        source: ["VSoS", 81],
        submenu: "Weapon Slot D",
        prereqeval: function (v) { return classes.known.craftsman.level >= 1 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Whirlwind D/.exec(What('Extra.Notes'))); 7; },
        additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
        description: "",
        action: ["bonus action", "Whirlwind (Weapon D)"],
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddWhirlwind(fields, v, "D");
                }, "If the letter \"D\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
                104
            ]
        }
    },
 
    // Weapon Slot E
    aerodynamicE: {
        name: "Apprentice: Aerodynamic E",
        source: ["VSoS", 78],
        submenu: "Weapon Slot E",
        additional: "Prereq: Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function (fields, v){
                    ClassList["craftsman"].AddAerodynamic(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
                101
            ]
        }
    },
    automaticE: {
        name: "Apprentice: Automatic E",
        source: ["VSoS", 78],
        submenu: "Weapon Slot E",
        additional: "Prereq: Ranged, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAutomatic(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
                104
            ]
        }
    },
    balancedE: {
        name: "Apprentice: Balanced E",
        source: ["VSoS", 78],
        submenu: "Weapon Slot E",
        additional: "Prereq: Exotic, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBalanced(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
                103
            ]
        }
    },
    concealableE: {
        name: "Apprentice: Concealable E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddConcealable(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
                102
            ]
        }
    },
    elegantE: {
        name: "Apprentice: Elegant E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElegant(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
                103
            ]
        }
    },
    exoticE: {
        name: "Apprentice: Exotic E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExotic(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
                101,
            ]
        }
    },
    extendedmagE: {
        name: "Apprentice: Extended Magazine E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExtendedMag(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
                104
            ]
        }
    },
    finesseE: {
        name: "Apprentice: Finesse E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFinesse(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
                101
            ]
        }
    },
    firearmE: {
        name: "Apprentice: Firearm E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Ranged, Loading/Reload, no Tension",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFirearm(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
                105
            ],
            atkCalc: [
                function (fields, v, output){
                    ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "E");              
                }
            ]
        }
    },
    fistE: {
        name: "Apprentice: Fist E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Melee, Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddFist(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
                102
            ]
        }
    },
    foregripE: {
        name: "Apprentice: Foregrip E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq Ranged, Ammunition, no Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddForegrip(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
                101
            ]
        }
    },
    heavyE: {
        name: "Apprentice: Heavy E",
        source: ["VSoS", 79],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Two-handed, no Double",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeavy(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
                102
            ]
        }
    },
    lightE: {
        name: "Apprentice: Light E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq: no Two-handed/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLight(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
                101
            ]
        }
    },
    loadingE: {
        name: "Apprentice: Loading E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq Ranged, Ammunition, no Reload",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddLoading(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
                104
            ]
        }
    },
    martialE: {
        name: "Apprentice: Martial E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq: Simple",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMartial(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
                100
            ]
        }
    },
    parryingE: {
        name: "Apprentice: Parrying E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq: Exotic, Melee, Finesse/Light",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddParrying(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
                102
            ]
        },
        extraAC: [{
            mod: 1,
            name: "Parrying Weapon",
            text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
            stopeval: function (v) {
                return v.usingShield;
            }
        }]
    },
    reachE: {
        name: "Apprentice: Reach E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddReach(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
                102
            ]
        }
    },
    reloadE: {
        name: "Apprentice: Reload E",
        source: ["VSoS", 80],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){                    
                    ClassList["craftsman"].AddReload(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
                103
            ]
        }
    },
    returningE: {
        name: "Apprentice: Returning E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Light, Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v) {
                    ClassList["craftsman"].AddReturning(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
                102
            ]
        }
    },
    scatterE: {
        name: "Apprentice: Scatter E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddScatter(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
                103
            ]
        }
    },
    sightedE: {
        name: "Apprentice: Sighted E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSighted(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
                103
            ]
        }
    },
    superheavyE: {
        name: "Apprentice: Superheavy E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Exotic, Melee, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSuperheavy(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                103
            ]
        }
    },
    switchE: {
        name: "Apprentice: Switch E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: 2 Exotic weapons",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSwitch(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
                102
            ]
        }
    },
    thrownE: {
        name: "Apprentice: Thrown E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Melee, no Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThrown(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
                100
            ]
        }
    },
    tripE: {
        name: "Apprentice: Trip E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Martial/Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTrip(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
                102
            ]
        }
    },
    twohandedE: {
        name: "Apprentice: Two-handed E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwohanded(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
                100
            ]
        }
    },
    versatileE: {
        name: "Apprentice: Versatile E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        additional: "Prereq: Melee, no Light/Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVersatile(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
                100
            ]
        }
    },
    counterweightedE: {
        name: "Journeyman: Counterweighted E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Counterweighted E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Two-handed",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCounterweighted(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
                102
            ]
        }
    },
    doubleE: {
        name: "Journeyman: Double E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Double E/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Exotic, Melee, no Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddDouble(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
                103
            ]
        }
    },
    explosiveE: {
        name: "Journeyman: Explosive E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Explosive E/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddExplosive(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
                102
            ]
        }
    },
    heatE: {
        name: "Journeyman: Heat E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Heat E/.exec(What('Extra.Notes')));; },
        additional: "Prereq: Martial/Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddHeat(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
                106
            ]
        }
    },
    journeymanmagicalE: {
        name: "Journeyman: Magical E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Journeyman: Magical E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ],
            atkCalc: [
                function (fields, v, output) {
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");
                }, "",
                102
            ]
        }
    },
    massiveE: {
        name: "Journeyman: Massive E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Massive E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Superheavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMassive(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
                104
            ]
        }
    },
    mountedE: {
        name: "Journeyman: Mounted E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Mounted E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Martial/Exotic, Ranged, Heavy",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMounted(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
                103
            ]
        }
    },
    precisionE: {
        name: "Journeyman: Precision E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Precision E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPrecision(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
                103
            ]
        }
    },
    rocketE: {
        name: "Journeyman: Rocket E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Rocket E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddRocket(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
                103
            ]
        }
    },
    sniperE: {
        name: "Journeyman: Sniper E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Sniper E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSniper(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
                103
            ]
        }
    },
    tensionE: {
        name: "Journeyman: Tension E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Tension E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTension(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
                106
            ]
        }
    },
    twinshotE: {
        name: "Journeyman: Twinshot E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Twinshot E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddTwinshot(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
                102
            ]
        }
    },
    adamantineE: {
        name: "Master: Adamantine E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Adamantine E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Heavy/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddAdamantine(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
                103
            ]
        }
    },
    blessedE: {
        name: "Master: Blessed E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Blessed E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddBlessed(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
                102
            ]
        }
    },
    earthshatterE: {
        name: "Master: Earthshatter E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Earthshatter E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Massive",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddEarthshatter(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
                105
            ]
        }
    },
    elementalacidE: {
        name: "Master: Elemental (Acid) E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Elemental \(Acid\) E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "E", "Acid");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
                102
            ]
        }
    },
    elementalcoldE: {
        name: "Master: Elemental (Cold) E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Cold\) E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "E", "Cold");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
                102
            ]
        }
    },
    elementalfireE: {
        name: "Master: Elemental (Fire) E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Fire\) E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "E", "Fire");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
                102
            ]
        }
    },
    elementallightningE: {
        name: "Master: Elemental (Lightning) E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Lightning\) E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "E", "Lightning");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
                102
            ]
        }
    },
    elementalthunderE: {
        name: "Master: Elemental (Thunder) E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Thunder\) E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddElemental(fields, v, "E", "Thunder");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
                102
            ]
        }
    },
    keenE: {
        name: "Master: Keen E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Keen E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse/Versatile",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddKeen(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
                103
            ]
        }
    },
    mastermagicalE: {
        name: "Master: Magical E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Master: Magical E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {   
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");             
                }, "",
                102
            ]
        }
    },
    mithralE: {
        name: "Master: Mithral E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Mithral E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMithral(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
                102
            ]
        }
    },
    serratedE: {
        name: "Master: Serrated E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Serrated E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals Slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSerrated(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
            ]
        }
    },
    slayingSpecialE: {
        name: "Master: Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "of a chosen type");
                }, "Choose a creature type when you add this property. If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
                102
            ]
        }
    },
    slayingAberrationE: {
        name: "Master: Aberration Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Aberration Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "aberrations");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
                102
            ]
        }
    },
    slayingBeastE: {
        name: "Master: Beast Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Beast Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "beasts");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
                102
            ]
        }
    },
    slayingCelestialE: {
        name: "Master: Celestial Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Celestial Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "celestials");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
                102
            ]
        }
    },
    slayingConstructE: {
        name: "Master: Construct Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Construct Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "constructs");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
                102
            ]
        }
    },
    slayingDragonE: {
        name: "Master: Dragon Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Dragon Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "dragons");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
                102
            ]
        }
    },
    slayingElementalE: {
        name: "Master: Elemental Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Elemental Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "elementals");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
                102
            ]
        }
    },
    slayingFeyE: {
        name: "Master: Fey Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Fey Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "fey");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
                102
            ]
        }
    },
    slayingFiendE: {
        name: "Master: Fiend Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Fiend Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "fiends");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
                102
            ]
        }
    },
    slayingGiantE: {
        name: "Master: Giant Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Giant Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "giants");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
                102
            ]
        }
    },
    slayingMonstrosityE: {
        name: "Master: Monstrosity Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Monstrosity Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "monstrosities");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
                102
            ]
        }
    },
    slayingOozeE: {
        name: "Master: Ooze Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Ooze Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "oozes");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
                102
            ]
        }
    },
    slayingPlantE: {
        name: "Master: Plant Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Plant Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "plants");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
                102
            ]
        }
    },
    slayingUndeadE: {
        name: "Master: Undead Slaying E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Undead Slaying E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSlaying(fields, v, "E", "undead");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
                102
            ]
        }
    },
    vampiricE: {
        name: "Master: Vampiric E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Vampiric E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVampiric(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
                102
            ]
        }
    },
    venomE: {
        name: "Master: Venom E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Venom E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVenom(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
                102
            ]
        }
    },
    crushingE: {
        name: "Legendary: Crushing E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Crushing E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals bludgeoning",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddCrushing(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
                102
            ]
        }
    },
    deadlyE: {
        name: "Legendary: Deadly E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Deadly E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged, Firearm",
        description: "",
        calcChanges: {
            atkCalc: [
                function(fields, v, output) {
                    ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "E");               
                }, "If the letter \"E\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
                106
            ]
        }
    },
    legendarymagicalE: {
        name: "Legendary: Magical E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Legendary: Magical E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddMagical(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
                102
            ], 
            atkCalc: [
                function(fields, v, output) {           
                    ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");             
                }, "",
                102
            ]
        }
    },
    penetratingE: {
        name: "Legendary: Penetrating E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Penetrating E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddPenetrating(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
                102
            ]
        }
    },
    seekingE: {
        name: "Legendary: Seeking E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Seeking E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Ranged",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddSeeking(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
                102
            ]
        }
    },
    threateningE: {
        name: "Legendary: Threatening E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Threatening E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddThreatening(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
                102
            ]
        }
    },
    vorpalE: {
        name: "Legendary: Vorpal E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Vorpal E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, deals slashing",
        description: "",
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddVorpal(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
                102
            ]
        }
    },
    whirlwindE: {
        name: "Legendary: Whirlwind E",
        source: ["VSoS", 81],
        submenu: "Weapon Slot E",
        prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Whirlwind E/.exec(What('Extra.Notes'))); },
        additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
        description: "",
        action: ["bonus action", "Whirlwind (Weapon E)"],
        calcChanges: {
            atkAdd: [
                function(fields, v){
                    ClassList["craftsman"].AddWhirlwind(fields, v, "E");
                }, "If the letter \"E\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
                104
            ]
        }
    }
}

var MasterworkWeaponProperties = {
	// Weapon Slot A
	aerodynamicA: {
		name: "Apprentice: Aerodynamic A",
		source: ["VSoS", 78],
		submenu: "Weapon Slot A",
		additional: "Prereq: Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function (fields, v){
					ClassList["craftsman"].AddAerodynamic(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
				101
			]
		}
	},
	automaticA: {
		name: "Apprentice: Automatic A",
		source: ["VSoS", 78],
		submenu: "Weapon Slot A",
		additional: "Prereq: Ranged, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAutomatic(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
				104
			]
		}
	},
	balancedA: {
		name: "Apprentice: Balanced A",
		source: ["VSoS", 78],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBalanced(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
				103
			]
		}
	},
	concealableA: {
		name: "Apprentice: Concealable A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddConcealable(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
				102
			]
		}
	},
	elegantA: {
		name: "Apprentice: Elegant A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElegant(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
				103
			]
		}
	},
	exoticA: {
		name: "Apprentice: Exotic A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExotic(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
				101,
			]
		}
	},
	extendedmagA: {
		name: "Apprentice: Extended Magazine A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExtendedMag(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
				104
			]
		}
	},
	finesseA: {
		name: "Apprentice: Finesse A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFinesse(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
				101
			]
		}
	},
	firearmA: {
		name: "Apprentice: Firearm A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Ranged, Loading/Reload, no Tension",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFirearm(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
				105
			],
			atkCalc: [
				function (fields, v, output){
					ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "A");              
				}
			]
		}
	},
	fistA: {
		name: "Apprentice: Fist A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Melee, Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFist(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
				102
			]
		}
	},
	foregripA: {
		name: "Apprentice: Foregrip A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq Ranged, Ammunition, no Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddForegrip(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
				101
			]
		}
	},
	heavyA: {
		name: "Apprentice: Heavy A",
		source: ["VSoS", 79],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Two-handed, no Double",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeavy(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
				102
			]
		}
	},
	lightA: {
		name: "Apprentice: Light A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq: no Two-handed/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLight(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
				101
			]
		}
	},
	loadingA: {
		name: "Apprentice: Loading A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq Ranged, Ammunition, no Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLoading(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
				104
			]
		}
	},
	martialA: {
		name: "Apprentice: Martial A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq: Simple",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMartial(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
				100
			]
		}
	},
	parryingA: {
		name: "Apprentice: Parrying A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic, Melee, Finesse/Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddParrying(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
				102
			],
		},
		extraAC: [{
			mod: 1,
			name: "Parrying Weapon",
			text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
			stopeval: function (v) {
				return v.usingShield;
			}
		}]
	},
	reachA: {
		name: "Apprentice: Reach A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddReach(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
				102
			]
		}
	},
	reloadA: {
		name: "Apprentice: Reload A",
		source: ["VSoS", 80],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddReload(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReload\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
				103
			]
		}
	},
	returningA: {
		name: "Apprentice: Returning A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Light, Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v) {
					ClassList["craftsman"].AddReturning(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
				102
			]
		}
	},
	scatterA: {
		name: "Apprentice: Scatter A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddScatter(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
				103
			]
		}
	},
	sightedA: {
		name: "Apprentice: Sighted A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSighted(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
				103
			]
		}
	},
	superheavyA: {
		name: "Apprentice: Superheavy A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic, Melee, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSuperheavy(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				103
			]
		}
	},
	switchA: {
		name: "Apprentice: Switch A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: 2 Exotic weapons",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSwitch(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				102
			]
		}
	},
	thrownA: {
		name: "Apprentice: Thrown A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Melee, no Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThrown(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
				100
			]
		}
	},
	tripA: {
		name: "Apprentice: Trip A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Martial/Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTrip(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
				102
			]
		}
	},
	twohandedA: {
		name: "Apprentice: Two-handed A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwohanded(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
				100
			]
		}
	},
	versatileA: {
		name: "Apprentice: Versatile A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Melee, no Light/Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVersatile(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
				100
			]
		}
	},
	counterweightedA: {
		name: "Journeyman: Counterweighted A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic, Two-handed",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Counterweighted A/.exec(What('Extra.Notes'))); },
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCounterweighted(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
				102
			]
		}
	},
	doubleA: {
		name: "Journeyman: Double A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		additional: "Prereq: Exotic, Melee, no Heavy",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Double A/.exec(What('Extra.Notes'))); },
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddDouble(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
				103
			]
		}
	},
	explosiveA: {
		name: "Journeyman: Explosive A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Explosive A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExplosive(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
				102
			]
		}
	},
	heatA: {
		name: "Journeyman: Heat A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Heat A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeat(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
				106
			]
		}
	},
	journeymanmagicalA: {
		name: "Journeyman: Magical A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Journeyman: Magical A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				103
			], 
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");             
				}, "",
				103
			]
		}
	},
	massiveA: {
		name: "Journeyman: Massive A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Massive A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Superheavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMassive(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
				104
			]
		}
	},
	mountedA: {
		name: "Journeyman: Mounted A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Mounted A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMounted(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
				103
			]
		}
	},
	precisionA: {
		name: "Journeyman: Precision A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Precision A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPrecision(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
				103
			]
		}
	},
	rocketA: {
		name: "Journeyman: Rocket A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Rocket A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddRocket(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
				103
			]
		}
	},
	sniperA: {
		name: "Journeyman: Sniper A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Sniper A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSniper(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
				103
			]
		}
	},
	tensionA: {
		name: "Journeyman: Tension A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Tension A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTension(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
				106
			]
		}
	},
	twinshotA: {
		name: "Journeyman: Twinshot A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ A/.exec(What('Extra.Notes')) || /Twinshot A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwinshot(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
				102
			]
		}
	},
	adamantineA: {
		name: "Master: Adamantine A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Adamantine A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Heavy/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAdamantine(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
				103
			]
		}
	},
	blessedA: {
		name: "Master: Blessed A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Blessed A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBlessed(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
				102
			]
		}
	},
	earthshatterA: {
		name: "Master: Earthshatter A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Earthshatter A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Massive",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddEarthshatter(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
				105
			]
		}
	},
	elementalacidA: {
		name: "Master: Elemental (Acid) A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Elemental \(Acid\) A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "A", "Acid");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
				102
			]
		}
	},
	elementalcoldA: {
		name: "Master: Elemental (Cold) A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Cold\) A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "A", "Cold");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
				102
			]
		}
	},
	elementalfireA: {
		name: "Master: Elemental (Fire) A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Fire\) A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "A", "Fire");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
				102
			]
		}
	},
	elementallightningA: {
		name: "Master: Elemental (Lightning) A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Lightning\) A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "A", "Lightning");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
				102
			]
		}
	},
	elementalthunderA: {
		name: "Master: Elemental (Thunder) A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /\(Thunder\) A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "A", "Thunder");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
				102
			]
		}
	},
	keenA: {
		name: "Master: Keen A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Keen A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddKeen(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
				103
			]
		}
	},
	mastermagicalA: {
		name: "Master: Magical A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Master: Magical A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");     
				}, "",
				102
			]
		}
	},
	mithralA: {
		name: "Master: Mithral A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Mithral A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMithral(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
				102
			]
		}
	},
	serratedA: {
		name: "Master: Serrated A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Serrated A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals Slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSerrated(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
			]
		}
	},
	slayingSpecialA: {
		name: "Master: Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "of a chosen type");
				}, "Choose a creature type when you add this property. If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
				102
			]
		}
	},
	slayingAberrationA: {
		name: "Master: Aberration Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Aberration Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "aberrations");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
				102
			]
		}
	},
	slayingBeastA: {
		name: "Master: Beast Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Beast Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "beasts");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
				102
			]
		}
	},
	slayingCelestialA: {
		name: "Master: Celestial Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Celestial Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "celestials");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
				102
			]
		}
	},
	slayingConstructA: {
		name: "Master: Construct Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Construct Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "constructs");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
				102
			]
		}
	},
	slayingDragonA: {
		name: "Master: Dragon Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Dragon Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "dragons");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
				102
			]
		}
	},
	slayingElementalA: {
		name: "Master: Elemental Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Elemental Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "elementals");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
				102
			]
		}
	},
	slayingFeyA: {
		name: "Master: Fey Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Fey Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "fey");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
				102
			]
		}
	},
	slayingFiendA: {
		name: "Master: Fiend Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Fiend Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "fiends");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
				102
			]
		}
	},
	slayingGiantA: {
		name: "Master: Giant Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Giant Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "giants");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
				102
			]
		}
	},
	slayingMonstrosityA: {
		name: "Master: Monstrosity Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Monstrosity Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "monstrosities");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
				102
			]
		}
	},
	slayingOozeA: {
		name: "Master: Ooze Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Ooze Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "oozes");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
				102
			]
		}
	},
	slayingPlantA: {
		name: "Master: Plant Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Plant Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "plants");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
				102
			]
		}
	},
	slayingUndeadA: {
		name: "Master: Undead Slaying A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Undead Slaying A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "A", "undead");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
				102
			]
		}
	},
	vampiricA: {
		name: "Master: Vampiric A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Vampiric A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVampiric(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
				102
			]
		}
	},
	venomA: {
		name: "Master: Venom A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ A/.exec(What('Extra.Notes')) || /Venom A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVenom(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
				102
			]
		}
	},
	crushingA: {
		name: "Legendary: Crushing A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Crushing A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals bludgeoning",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCrushing(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
				102
			]
		}
	},
	deadlyA: {
		name: "Legendary: Deadly A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Deadly A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "A");               
				}, "If the letter \"A\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
				106
			]
		}
	},
	legendarymagicalA: {
		name: "Legendary: Magical A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Legendary: Magical A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "A");             
				}, "",
				102
			]
		}
	},
	penetratingA: {
		name: "Legendary: Penetrating A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Penetrating A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPenetrating(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
				102
			]
		}
	},
	seekingA: {
		name: "Legendary: Seeking A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Seeking A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSeeking(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
				102
			]
		}
	},
	threateningA: {
		name: "Legendary: Threatening A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Threatening A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThreatening(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
				102
			]
		}
	},
	vorpalA: {
		name: "Legendary: Vorpal A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Vorpal A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVorpal(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
				102
			]
		}
	},
	whirlwindA: {
		name: "Legendary: Whirlwind A",
		source: ["VSoS", 81],
		submenu: "Weapon Slot A",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ A/.exec(What('Extra.Notes')) || /Whirlwind A/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
		description: "",
		action: ["bonus action", "Whirlwind (Weapon A)"],
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddWhirlwind(fields, v, "A");
				}, "If the letter \"A\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
				104
			]
		}
	},
	
	// Weapon Slot B
	aerodynamicB: {
		name: "Apprentice: Aerodynamic B",
		source: ["VSoS", 78],
		submenu: "Weapon Slot B",
		additional: "Prereq: Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function (fields, v){
					ClassList["craftsman"].AddAerodynamic(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
				101
			]
		}
	},
	automaticB: {
		name: "Apprentice: Automatic B",
		source: ["VSoS", 78],
		submenu: "Weapon Slot B",
		additional: "Prereq: Ranged, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAutomatic(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
				104
			]
		}
	},
	balancedB: {
		name: "Apprentice: Balanced B",
		source: ["VSoS", 78],
		submenu: "Weapon Slot B",
		additional: "Prereq: Exotic, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBalanced(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
				103
			]
		}
	},
	concealableB: {
		name: "Apprentice: Concealable B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddConcealable(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
				102
			]
		}
	},
	elegantB: {
		name: "Apprentice: Elegant B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElegant(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
				103
			]
		}
	},
	exoticB: {
		name: "Apprentice: Exotic B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExotic(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
				101,
			]
		}
	},
	extendedmagB: {
		name: "Apprentice: Extended Magazine B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExtendedMag(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
				104
			]
		}
	},
	finesseB: {
		name: "Apprentice: Finesse B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFinesse(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
				101
			]
		}
	},
	firearmB: {
		name: "Apprentice: Firearm B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Ranged, Loading/Reload, no Tension",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFirearm(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
				105
			],
			atkCalc: [
				function (fields, v, output){
					ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "B");              
				}
			]
		}
	},
	fistB: {
		name: "Apprentice: Fist B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Melee, Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFist(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
				102
			]
		}
	},
	foregripB: {
		name: "Apprentice: Foregrip B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq Ranged, Ammunition, no Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddForegrip(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
				101
			]
		}
	},
	heavyB: {
		name: "Apprentice: Heavy B",
		source: ["VSoS", 79],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Two-handed, no Double",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeavy(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
				102
			]
		}
	},
	lightB: {
		name: "Apprentice: Light B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq: no Two-handed/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLight(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
				101
			]
		}
	},
	loadingB: {
		name: "Apprentice: Loading B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq Ranged, Ammunition, no Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLoading(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
				104
			]
		}
	},
	martialB: {
		name: "Apprentice: Martial B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq: Simple",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMartial(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
				100
			]
		}
	},
	parryingB: {
		name: "Apprentice: Parrying B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq: Exotic, Melee, Finesse/Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddParrying(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
				102
			]
		},
		extraAC: [{
			mod: 1,
			name: "Parrying Weapon",
			text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
			stopeval: function (v) {
				return v.usingShield;
			}
		}]
	},
	reachB: {
		name: "Apprentice: Reach B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddReach(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
				102
			]
		}
	},
	reloadB: {
		name: "Apprentice: Reload B",
		source: ["VSoS", 80],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddReload(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
				103
			]
		}
	},
	returningB: {
		name: "Apprentice: Returning B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Light, Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v) {
					ClassList["craftsman"].AddReturning(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
				102
			]
		}
	},
	scatterB: {
		name: "Apprentice: Scatter B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddScatter(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
				103
			]
		}
	},
	sightedB: {
		name: "Apprentice: Sighted B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSighted(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
				103
			]
		}
	},
	superheavyB: {
		name: "Apprentice: Superheavy B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Exotic, Melee, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSuperheavy(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				103
			]
		}
	},
	switchB: {
		name: "Apprentice: Switch B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: 2 Exotic weapons",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSwitch(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				102
			]
		}
	},
	thrownB: {
		name: "Apprentice: Thrown B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Melee, no Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThrown(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
				100
			]
		}
	},
	tripB: {
		name: "Apprentice: Trip B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Martial/Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTrip(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
				102
			]
		}
	},
	twohandedB: {
		name: "Apprentice: Two-handed B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwohanded(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
				100
			]
		}
	},
	versatileB: {
		name: "Apprentice: Versatile B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		additional: "Prereq: Melee, no Light/Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVersatile(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
				100
			]
		}
	},
	counterweightedB: {
		name: "Journeyman: Counterweighted B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Counterweighted B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCounterweighted(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
				102
			]
		}
	},
	doubleB: {
		name: "Journeyman: Double B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Double B/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Exotic, Melee, no Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddDouble(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
				103
			]
		}
	},
	explosiveB: {
		name: "Journeyman: Explosive B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Explosive B/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExplosive(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
				102
			]
		}
	},
	heatB: {
		name: "Journeyman: Heat B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Heat B/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeat(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
				106
			]
		}
	},
	journeymanmagicalB: {
		name: "Journeyman: Magical B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Journeyman: Magical B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");         
				}, "",
				102
			]
		}
	},
	massiveB: {
		name: "Journeyman: Massive B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Massive B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Superheavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMassive(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
				104
			]
		}
	},
	mountedB: {
		name: "Journeyman: Mounted B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Mounted B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMounted(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
				103
			]
		}
	},
	precisionB: {
		name: "Journeyman: Precision B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Precision B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPrecision(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
				103
			]
		}
	},
	rocketB: {
		name: "Journeyman: Rocket B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Rocket B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddRocket(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
				103
			]
		}
	},
	sniperB: {
		name: "Journeyman: Sniper B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Sniper B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSniper(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
				103
			]
		}
	},
	tensionB: {
		name: "Journeyman: Tension B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Tension B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTension(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
				106
			]
		}
	},
	twinshotB: {
		name: "Journeyman: Twinshot B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ B/.exec(What('Extra.Notes')) || /Twinshot B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwinshot(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
				102
			]
		}
	},
	adamantineB: {
		name: "Master: Adamantine B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Adamantine B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Heavy/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAdamantine(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
				103
			]
		}
	},
	blessedB: {
		name: "Master: Blessed B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Blessed B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBlessed(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
				102
			]
		}
	},
	earthshatterB: {
		name: "Master: Earthshatter B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Earthshatter B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Massive",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddEarthshatter(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
				105
			]
		}
	},
	elementalacidB: {
		name: "Master: Elemental (Acid) B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Elemental \(Acid\) B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "B", "Acid");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
				102
			]
		}
	},
	elementalcoldB: {
		name: "Master: Elemental (Cold) B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Cold\) B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "B", "Cold");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
				102
			]
		}
	},
	elementalfireB: {
		name: "Master: Elemental (Fire) B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Fire\) B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "B", "Fire");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
				102
			]
		}
	},
	elementallightningB: {
		name: "Master: Elemental (Lightning) B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Lightning\) B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "B", "Lightning");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
				102
			]
		}
	},
	elementalthunderB: {
		name: "Master: Elemental (Thunder) B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /\(Thunder\) B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "B", "Thunder");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
				102
			]
		}
	},
	keenB: {
		name: "Master: Keen B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Keen B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddKeen(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
				103
			]
		}
	},
	mastermagicalB: {
		name: "Master: Magical B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Master: Magical B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {   
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");         
				}, "",
				102
			]
		}
	},
	mithralB: {
		name: "Master: Mithral B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Mithral B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMithral(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
				102
			]
		}
	},
	serratedB: {
		name: "Master: Serrated B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Serrated B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals Slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSerrated(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
			]
		}
	},
	slayingSpecialB: {
		name: "Master: Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "of a chosen type");
				}, "Choose a creature type when you add this property. If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
				102
			]
		}
	},
	slayingAberrationB: {
		name: "Master: Aberration Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Aberration Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "aberrations");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
				102
			]
		}
	},
	slayingBeastB: {
		name: "Master: Beast Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Beast Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "beasts");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
				102
			]
		}
	},
	slayingCelestialB: {
		name: "Master: Celestial Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Celestial Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "celestials");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
				102
			]
		}
	},
	slayingConstructB: {
		name: "Master: Construct Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Construct Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "constructs");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
				102
			]
		}
	},
	slayingDragonB: {
		name: "Master: Dragon Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Dragon Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "dragons");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
				102
			]
		}
	},
	slayingElementalB: {
		name: "Master: Elemental Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Elemental Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "elementals");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
				102
			]
		}
	},
	slayingFeyB: {
		name: "Master: Fey Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Fey Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "fey");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
				102
			]
		}
	},
	slayingFiendB: {
		name: "Master: Fiend Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Fiend Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "fiends");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
				102
			]
		}
	},
	slayingGiantB: {
		name: "Master: Giant Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Giant Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "giants");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
				102
			]
		}
	},
	slayingMonstrosityB: {
		name: "Master: Monstrosity Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Monstrosity Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "monstrosities");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
				102
			]
		}
	},
	slayingOozeB: {
		name: "Master: Ooze Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Ooze Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "oozes");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
				102
			]
		}
	},
	slayingPlantB: {
		name: "Master: Plant Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Plant Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "plants");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
				102
			]
		}
	},
	slayingUndeadB: {
		name: "Master: Undead Slaying B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Undead Slaying B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "B", "undead");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
				102
			]
		}
	},
	vampiricB: {
		name: "Master: Vampiric B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Vampiric B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVampiric(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
				102
			]
		}
	},
	venomB: {
		name: "Master: Venom B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ B/.exec(What('Extra.Notes')) || /Venom B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVenom(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
				102
			]
		}
	},
	crushingB: {
		name: "Legendary: Crushing B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Crushing B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals bludgeoning",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCrushing(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
				102
			]
		}
	},
	deadlyB: {
		name: "Legendary: Deadly B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Deadly B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "B");               
				}, "If the letter \"B\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
				106
			]
		}
	},
	legendarymagicalB: {
		name: "Legendary: Magical B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Legendary: Magical B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			],
			atkCalc: [
				function (fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "B");
				}, "",
				102
			]
		}
	},
	penetratingB: {
		name: "Legendary: Penetrating B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Penetrating B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPenetrating(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
				102
			]
		}
	},
	seekingB: {
		name: "Legendary: Seeking B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Seeking B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSeeking(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
				102
			]
		}
	},
	threateningB: {
		name: "Legendary: Threatening B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Threatening B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThreatening(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
				102
			]
		}
	},
	vorpalB: {
		name: "Legendary: Vorpal B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Vorpal B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVorpal(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
				102
			]
		}
	},
	whirlwindB: {
		name: "Legendary: Whirlwind B",
		source: ["VSoS", 81],
		submenu: "Weapon Slot B",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ B/.exec(What('Extra.Notes')) || /Whirlwind B/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
		description: "",
		action: ["bonus action", "Whirlwind (Weapon B)"],
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddWhirlwind(fields, v, "B");
				}, "If the letter \"B\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
				104
			]
		}
	},
	
	// Weapon Slot C
	aerodynamicC: {
		name: "Apprentice: Aerodynamic C",
		source: ["VSoS", 78],
		submenu: "Weapon Slot C",
		additional: "Prereq: Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function (fields, v){
					ClassList["craftsman"].AddAerodynamic(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
				101
			]
		}
	},
	automaticC: {
		name: "Apprentice: Automatic C",
		source: ["VSoS", 78],
		submenu: "Weapon Slot C",
		additional: "Prereq: Ranged, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAutomatic(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
				104
			]
		}
	},
	balancedC: {
		name: "Apprentice: Balanced C",
		source: ["VSoS", 78],
		submenu: "Weapon Slot C",
		additional: "Prereq: Exotic, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBalanced(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
				103
			]
		}
	},
	concealableC: {
		name: "Apprentice: Concealable C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddConcealable(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
				102
			]
		}
	},
	elegantC: {
		name: "Apprentice: Elegant C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElegant(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
				103
			]
		}
	},
	exoticC: {
		name: "Apprentice: Exotic C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExotic(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
				101,
			]
		}
	},
	extendedmagC: {
		name: "Apprentice: Extended Magazine C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExtendedMag(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
				104
			]
		}
	},
	finesseC: {
		name: "Apprentice: Finesse C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFinesse(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
				101
			]
		}
	},
	firearmC: {
		name: "Apprentice: Firearm C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Ranged, Loading/Reload, no Tension",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFirearm(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
				105
			],
			atkCalc: [
				function (fields, v, output){
					ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "C");              
				}
			]
		}
	},
	fistC: {
		name: "Apprentice: Fist C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Melee, Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFist(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
				102
			]
		}
	},
	foregripC: {
		name: "Apprentice: Foregrip C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq Ranged, Ammunition, no Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddForegrip(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
				101
			]
		}
	},
	heavyC: {
		name: "Apprentice: Heavy C",
		source: ["VSoS", 79],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Two-handed, no Double",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeavy(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
				102
			]
		}
	},
	lightC: {
		name: "Apprentice: Light C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq: no Two-handed/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLight(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
				101
			]
		}
	},
	loadingC: {
		name: "Apprentice: Loading C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq Ranged, Ammunition, no Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLoading(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
				104
			]
		}
	},
	martialC: {
		name: "Apprentice: Martial C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq: Simple",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMartial(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
				100
			]
		}
	},
	parryingC: {
		name: "Apprentice: Parrying C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq: Exotic, Melee, Finesse/Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddParrying(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
				102
			]
		},
		extraAC: [{
			mod: 1,
			name: "Parrying Weapon",
			text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
			stopeval: function (v) {
				return v.usingShield;
			}
		}]
	},
	reachC: {
		name: "Apprentice: Reach C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddReach(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
				102
			]
		}
	},
	reloadC: {
		name: "Apprentice: Reload C",
		source: ["VSoS", 80],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddReload(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
				103
			]
		}
	},
	returningC: {
		name: "Apprentice: Returning C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Light, Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v) {
					ClassList["craftsman"].AddReturning(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
				102
			]
		}
	},
	scatterC: {
		name: "Apprentice: Scatter C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddScatter(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
				103
			]
		}
	},
	sightedC: {
		name: "Apprentice: Sighted C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSighted(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
				103
			]
		}
	},
	superheavyC: {
		name: "Apprentice: Superheavy C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Exotic, Melee, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSuperheavy(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				103
			]
		}
	},
	switchC: {
		name: "Apprentice: Switch C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: 2 Exotic weapons",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSwitch(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				102
			]
		}
	},
	thrownC: {
		name: "Apprentice: Thrown C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Melee, no Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThrown(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
				100
			]
		}
	},
	tripC: {
		name: "Apprentice: Trip C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Martial/Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddTrip(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
				102
			]
		}
	},
	twohandedC: {
		name: "Apprentice: Two-handed C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwohanded(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
				100
			]
		}
	},
	versatileC: {
		name: "Apprentice: Versatile C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		additional: "Prereq: Melee, no Light/Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVersatile(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
				100
			]
		}
	},
	counterweightedC: {
		name: "Journeyman: Counterweighted C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Counterweighted C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCounterweighted(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
				102
			]
		}
	},
	doubleC: {
		name: "Journeyman: Double C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Double C/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Exotic, Melee, no Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddDouble(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
				103
			]
		}
	},
	explosiveC: {
		name: "Journeyman: Explosive C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Explosive C/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExplosive(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
				102
			]
		}
	},
	heatC: {
		name: "Journeyman: Heat C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Heat C/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeat(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
				106
			]
		}
	},
	journeymanmagicalC: {
		name: "Journeyman: Magical C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Journeyman: Magical C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");             
				}, "",
				102
			]
		}
	},
	massiveC: {
		name: "Journeyman: Massive C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Massive C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Superheavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMassive(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
				104
			]
		}
	},
	mountedC: {
		name: "Journeyman: Mounted C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Mounted C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMounted(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
				103
			]
		}
	},
	precisionC: {
		name: "Journeyman: Precision C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Precision C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPrecision(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
				103
			]
		}
	},
	rocketC: {
		name: "Journeyman: Rocket C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Rocket C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddRocket(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
				103
			]
		}
	},
	sniperC: {
		name: "Journeyman: Sniper C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Sniper C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSniper(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
				103
			]
		}
	},
	tensionC: {
		name: "Journeyman: Tension C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Tension C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTension(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
				106
			]
		}
	},
	twinshotC: {
		name: "Journeyman: Twinshot C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ C/.exec(What('Extra.Notes')) || /Twinshot C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwinshot(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
				102
			]
		}
	},
	adamantineC: {
		name: "Master: Adamantine C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Adamantine C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Heavy/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAdamantine(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
				103
			]
		}
	},
	blessedC: {
		name: "Master: Blessed C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Blessed C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBlessed(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
				102
			]
		}
	},
	earthshatterC: {
		name: "Master: Earthshatter C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Earthshatter C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Massive",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddEarthshatter(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
				105
			]
		}
	},
	elementalacidC: {
		name: "Master: Elemental (Acid) C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Elemental \(Acid\) C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "C", "Acid");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
				102
			]
		}
	},
	elementalcoldC: {
		name: "Master: Elemental (Cold) C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Cold\) C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "C", "Cold");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
				102
			]
		}
	},
	elementalfireC: {
		name: "Master: Elemental (Fire) C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Fire\) C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "C", "Fire");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
				102
			]
		}
	},
	elementallightningC: {
		name: "Master: Elemental (Lightning) C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Lightning\) C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "C", "Lightning");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
				102
			]
		}
	},
	elementalthunderC: {
		name: "Master: Elemental (Thunder) C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /\(Thunder\) C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "C", "Thunder");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
				102
			]
		}
	},
	keenC: {
		name: "Master: Keen C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Keen C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddKeen(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
				103
			]
		}
	},
	mastermagicalC: {
		name: "Master: Magical C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Master: Magical C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			],
			atkCalc: [
				function (fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");
				}, "",
				102
			]
		}
	},
	mithralC: {
		name: "Master: Mithral C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Mithral C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMithral(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
				102
			]
		}
	},
	serratedC: {
		name: "Master: Serrated C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Serrated C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals Slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSerrated(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
			]
		}
	},
	slayingSpecialC: {
		name: "Master: Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "of a chosen type");
				}, "Choose a creature type when you add this property. If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
				102
			]
		}
	},
	slayingAberrationC: {
		name: "Master: Aberration Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Aberration Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "aberrations");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
				102
			]
		}
	},
	slayingBeastC: {
		name: "Master: Beast Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Beast Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "beasts");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
				102
			]
		}
	},
	slayingCelestialC: {
		name: "Master: Celestial Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Celestial Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "celestials");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
				102
			]
		}
	},
	slayingDragonC: {
		name: "Master: Dragon Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Dragon Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "dragons");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
				102
			]
		}
	},
	slayingConstructC: {
		name: "Master: Construct Slaying CA",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Construct Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "constructs");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
				102
			]
		}
	},
	slayingElementalC: {
		name: "Master: Elemental Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Elemental Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "elementals");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
				102
			]
		}
	},
	slayingFeyC: {
		name: "Master: Fey Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Fey Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "fey");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
				102
			]
		}
	},
	slayingFiendC: {
		name: "Master: Fiend Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Fiend Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "fiends");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
				102
			]
		}
	},
	slayingGiantC: {
		name: "Master: Giant Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Giant Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "giants");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
				102
			]
		}
	},
	slayingMonstrosityC: {
		name: "Master: Monstrosity Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Monstrosity Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "monstrosities");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
				102
			]
		}
	},
	slayingOozeC: {
		name: "Master: Ooze Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Ooze Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "oozes");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
				102
			]
		}
	},
	slayingPlantC: {
		name: "Master: Plant Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Plant Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "plants");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
				102
			]
		}
	},
	slayingUndeadC: {
		name: "Master: Undead Slaying C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Undead Slaying C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "C", "undead");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
				102
			]
		}
	},
	vampiricC: {
		name: "Master: Vampiric C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Vampiric C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVampiric(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
				102
			]
		}
	},
	venomC: {
		name: "Master: Venom C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ C/.exec(What('Extra.Notes')) || /Venom C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVenom(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
				102
			]
		}
	},
	crushingC: {
		name: "Legendary: Crushing C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Crushing C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals bludgeoning",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCrushing(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
				102
			]
		}
	},
	deadlyC: {
		name: "Legendary: Deadly C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Deadly C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "C");               
				}, "If the letter \"C\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
				106
			]
		}
	},
	legendarymagicalC: {
		name: "Legendary: Magical C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Legendary: Magical C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {   
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "C");             
				}, "",
				102
			]
		}
	},
	penetratingC: {
		name: "Legendary: Penetrating C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Penetrating C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPenetrating(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
				102
			]
		}
	},
	seekingC: {
		name: "Legendary: Seeking C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Seeking C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSeeking(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
				102
			]
		}
	},
	threateningC: {
		name: "Legendary: Threatening C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Threatening C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThreatening(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
				102
			]
		}
	},
	vorpalC: {
		name: "Legendary: Vorpal C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Vorpal C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVorpal(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
				102
			]
		}
	},
	whirlwindC: {
		name: "Legendary: Whirlwind C",
		source: ["VSoS", 81],
		submenu: "Weapon Slot C",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ C/.exec(What('Extra.Notes')) || /Whirlwind C/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
		description: "",
		action: ["bonus action", "Whirlwind (Weapon C)"],
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddWhirlwind(fields, v, "C");
				}, "If the letter \"C\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
				104
			]
		}
	},
	
	// Weapon Slot D
	aerodynamicD: {
		name: "Apprentice: Aerodynamic D",
		source: ["VSoS", 78],
		submenu: "Weapon Slot D",
		additional: "Prereq: Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function (fields, v){
					ClassList["craftsman"].AddAerodynamic(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
				101
			]
		}
	},
	automaticD: {
		name: "Apprentice: Automatic D",
		source: ["VSoS", 78],
		submenu: "Weapon Slot D",
		additional: "Prereq: Ranged, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAutomatic(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
				104
			]
		}
	},
	balancedD: {
		name: "Apprentice: Balanced D",
		source: ["VSoS", 78],
		submenu: "Weapon Slot D",
		additional: "Prereq: Exotic, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBalanced(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
				103
			]
		}
	},
	concealableD: {
		name: "Apprentice: Concealable D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddConcealable(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
				102
			]
		}
	},
	elegantD: {
		name: "Apprentice: Elegant D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElegant(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
				103
			]
		}
	},
	exoticD: {
		name: "Apprentice: Exotic D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExotic(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
				101,
			]
		}
	},
	extendedmagD: {
		name: "Apprentice: Extended Magazine D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExtendedMag(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
				104
			]
		}
	},
	finesseD: {
		name: "Apprentice: Finesse D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFinesse(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
				101
			]
		}
	},
	firearmD: {
		name: "Apprentice: Firearm D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Ranged, Loading/Reload, no Tension",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFirearm(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
				105
			],
			atkCalc: [
				function (fields, v, output){
					ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "D");              
				}
			]
		}
	},
	fistD: {
		name: "Apprentice: Fist D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Melee, Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFist(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
				102
			]
		}
	},
	foregripD: {
		name: "Apprentice: Foregrip D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq Ranged, Ammunition, no Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddForegrip(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
				101
			]
		}
	},
	heavyD: {
		name: "Apprentice: Heavy D",
		source: ["VSoS", 79],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Two-handed, no Double",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeavy(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
				102
			]
		}
	},
	lightD: {
		name: "Apprentice: Light D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq: no Two-handed/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLight(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
				101
			]
		}
	},
	loadingD: {
		name: "Apprentice: Loading D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq Ranged, Ammunition, no Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLoading(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
				104
			]
		}
	},
	martialD: {
		name: "Apprentice: Martial D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq: Simple",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMartial(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
				100
			]
		}
	},
	parryingD: {
		name: "Apprentice: Parrying D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq: Exotic, Melee, Finesse/Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddParrying(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
				102
			]
		},
		extraAC: [{
			mod: 1,
			name: "Parrying Weapon",
			text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
			stopeval: function (v) {
				return v.usingShield;
			}
		}]
	},
	reachD: {
		name: "Apprentice: Reach D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddReach(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
				102
			]
		}
	},
	reloadD: {
		name: "Apprentice: Reload D",
		source: ["VSoS", 80],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddReload(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
				103
			]
		}
	},
	returningD: {
		name: "Apprentice: Returning D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Light, Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v) {
					ClassList["craftsman"].AddReturning(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
				102
			]
		}
	},
	scatterD: {
		name: "Apprentice: Scatter D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddScatter(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
				103
			]
		}
	},
	sightedD: {
		name: "Apprentice: Sighted D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSighted(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
				103
			]
		}
	},
	superheavyD: {
		name: "Apprentice: Superheavy D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Exotic, Melee, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSuperheavy(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				103
			]
		}
	},
	switchD: {
		name: "Apprentice: Switch D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: 2 Exotic weapons",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSwitch(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				102
			]
		}
	},
	thrownD: {
		name: "Apprentice: Thrown D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Melee, no Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThrown(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
				100
			]
		}
	},
	tripD: {
		name: "Apprentice: Trip D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Martial/Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTrip(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
				102
			]
		}
	},
	twohandedD: {
		name: "Apprentice: Two-handed D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwohanded(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
				100
			]
		}
	},
	versatileD: {
		name: "Apprentice: Versatile D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		additional: "Prereq: Melee, no Light/Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVersatile(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
				100
			]
		}
	},
	counterweightedD: {
		name: "Journeyman: Counterweighted D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Counterweighted D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCounterweighted(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
				102
			]
		}
	},
	doubleD: {
		name: "Journeyman: Double D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Double D/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Exotic, Melee, no Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddDouble(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
				103
			]
		}
	},
	explosiveD: {
		name: "Journeyman: Explosive D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Explosive D/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExplosive(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
				102
			]
		}
	},
	heatD: {
		name: "Journeyman: Heat D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Heat D/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeat(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
				106
			]
		}
	},
	journeymanmagicalD: {
		name: "Journeyman: Magical D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Journeyman: Magical D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {   
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");             
				}, "",
				102
			]
		}
	},
	massiveD: {
		name: "Journeyman: Massive D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Massive D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Superheavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMassive(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
				104
			]
		}
	},
	mountedD: {
		name: "Journeyman: Mounted D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Mounted D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMounted(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
				103
			]
		}
	},
	precisionD: {
		name: "Journeyman: Precision D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Precision D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPrecision(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
				103
			]
		}
	},
	rocketD: {
		name: "Journeyman: Rocket D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Rocket D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddRocket(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
				103
			]
		}
	},
	sniperD: {
		name: "Journeyman: Sniper D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Sniper D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSniper(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
				103
			]
		}
	},
	tensionD: {
		name: "Journeyman: Tension D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Tension D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTension(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
				106
			]
		}
	},
	twinshotD: {
		name: "Journeyman: Twinshot D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ D/.exec(What('Extra.Notes')) || /Twinshot D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwinshot(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
				102
			]
		}
	},
	adamantineD: {
		name: "Master: Adamantine D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Adamantine D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Heavy/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAdamantine(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
				103
			]
		}
	},
	blessedD: {
		name: "Master: Blessed D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Blessed D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBlessed(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
				102
			]
		}
	},
	earthshatterD: {
		name: "Master: Earthshatter D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Earthshatter D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Massive",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddEarthshatter(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
				105
			]
		}
	},
	elementalacidD: {
		name: "Master: Elemental (Acid) D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Elemental \(Acid\) D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "D", "Acid");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
				102
			]
		}
	},
	elementalcoldD: {
		name: "Master: Elemental (Cold) D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Cold\) D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "D", "Cold");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
				102
			]
		}
	},
	elementalfireD: {
		name: "Master: Elemental (Fire) D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Fire\) D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "D", "Fire");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
				102
			]
		}
	},
	elementallightningD: {
		name: "Master: Elemental (Lightning) D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Lightning\) D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "D", "Lightning");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
				102
			]
		}
	},
	elementalthunderD: {
		name: "Master: Elemental (Thunder) D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /\(Thunder\) D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "D", "Thunder");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
				102
			]
		}
	},
	keenD: {
		name: "Master: Keen D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Keen D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddKeen(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
				103
			]
		}
	},
	mastermagicalD: {
		name: "Master: Magical D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Master: Magical D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {   
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");             
				}, "",
				102
			]
		}
	},
	mithralD: {
		name: "Master: Mithral D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Mithral D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMithral(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
				102
			]
		}
	},
	serratedD: {
		name: "Master: Serrated D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Serrated D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals Slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSerrated(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
			]
		}
	},
	slayingSpecialD: {
		name: "Master: Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "of a chosen type");
				}, "Choose a creature type when you add this property. If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
				102
			]
		}
	},
	slayingAberrationD: {
		name: "Master: Aberration Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Aberration Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "aberrations");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
				102
			]
		}
	},
	slayingBeastD: {
		name: "Master: Beast Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Beast Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "beasts");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
				102
			]
		}
	},
	slayingCelestialD: {
		name: "Master: Celestial Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Celestial Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "celestials");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
				102
			]
		}
	},
	slayingConstructD: {
		name: "Master: Construct Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Construct Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "constructs");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
				102
			]
		}
	},
	slayingDragonD: {
		name: "Master: Dragon Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Dragon Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "dragons");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
				102
			]
		}
	},
	slayingElementalD: {
		name: "Master: Elemental Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Elemental Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "elementals");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
				102
			]
		}
	},
	slayingFeyD: {
		name: "Master: Fey Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Fey Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "fey");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
				102
			]
		}
	},
	slayingFiendD: {
		name: "Master: Fiend Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Fiend Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "fiends");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
				102
			]
		}
	},
	slayingGiantD: {
		name: "Master: Giant Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Giant Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "giants");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
				102
			]
		}
	},
	slayingMonstrosityD: {
		name: "Master: Monstrosity Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Monstrosity Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "monstrosities");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
				102
			]
		}
	},
	slayingOozeD: {
		name: "Master: Ooze Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Ooze Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "oozes");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
				102
			]
		}
	},
	slayingPlantD: {
		name: "Master: Plant Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Plant Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "plants");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
				102
			]
		}
	},
	slayingUndeadD: {
		name: "Master: Undead Slaying D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Undead Slaying D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "D", "undead");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
				102
			]
		}
	},
	vampiricD: {
		name: "Master: Vampiric D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Vampiric D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVampiric(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
				102
			]
		}
	},
	venomD: {
		name: "Master: Venom D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ D/.exec(What('Extra.Notes')) || /Venom D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVenom(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
				102
			]
		}
	},
	crushingD: {
		name: "Legendary: Crushing D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Crushing D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals bludgeoning",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCrushing(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
				102
			]
		}
	},
	deadlyD: {
		name: "Legendary: Deadly D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Deadly D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "D");               
				}, "If the letter \"D\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
				106
			]
		}
	},
	legendarymagicalD: {
		name: "Legendary: Magical D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Legendary: Magical D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			],
			atkCalc: [
				function (fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "D");
				}, "",
				102
			]
		}
	},
	penetratingD: {
		name: "Legendary: Penetrating D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Penetrating D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPenetrating(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
				102
			], 
		}
	},
	seekingD: {
		name: "Legendary: Seeking D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Seeking D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSeeking(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
				102
			]
		}
	},
	threateningD: {
		name: "Legendary: Threatening D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Threatening D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThreatening(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
				102
			]
		}
	},
	vorpalD: {
		name: "Legendary: Vorpal D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Vorpal D/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVorpal(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
				102
			]
		}
	},
	whirlwindD: {
		name: "Legendary: Whirlwind D",
		source: ["VSoS", 81],
		submenu: "Weapon Slot D",
		prereqeval: function (v) { return classes.known.craftsman.level >= 1 && (!/Legendary: .+ D/.exec(What('Extra.Notes')) || /Whirlwind D/.exec(What('Extra.Notes'))); 7; },
		additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
		description: "",
		action: ["bonus action", "Whirlwind (Weapon D)"],
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddWhirlwind(fields, v, "D");
				}, "If the letter \"D\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
				104
			]
		}
	},
	
	// Weapon Slot E
	aerodynamicE: {
		name: "Apprentice: Aerodynamic E",
		source: ["VSoS", 78],
		submenu: "Weapon Slot E",
		additional: "Prereq: Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function (fields, v){
					ClassList["craftsman"].AddAerodynamic(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork thrown weapon attack, it gains a +40 ft bonus to its thrown range.",
				101
			]
		}
	},
	automaticE: {
		name: "Apprentice: Automatic E",
		source: ["VSoS", 78],
		submenu: "Weapon Slot E",
		additional: "Prereq: Ranged, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAutomatic(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack, it gains the Automatic property, its damage dice decrease one step, and its range is reduced by 20 feet.",
				104
			]
		}
	},
	balancedE: {
		name: "Apprentice: Balanced E",
		source: ["VSoS", 78],
		submenu: "Weapon Slot E",
		additional: "Prereq: Exotic, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBalanced(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork heavy exotic weapon attack, it loses the Heavy property.",
				103
			]
		}
	},
	concealableE: {
		name: "Apprentice: Concealable E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddConcealable(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork light exotic weapon attack, it gains the Concealable property.",
				102
			]
		}
	},
	elegantE: {
		name: "Apprentice: Elegant E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Exotic Light Melee OR Exotic Light Thrown Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElegant(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork light exotic weapon attack OR masterwork exotic light thrown ranged weapon attack, it gains the Elegant property, and its damage dice increase 1 step.",
				103
			]
		}
	},
	exoticE: {
		name: "Apprentice: Exotic E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExotic(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial weapon attack, it becomes an Exotic weapon & its damage dice increase 1 step.",
				101,
			]
		}
	},
	extendedmagE: {
		name: "Apprentice: Extended Magazine E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExtendedMag(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic weapon attack with reload, its reload capacity doubles.",
				104
			]
		}
	},
	finesseE: {
		name: "Apprentice: Finesse E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Melee with no Two-handed OR Ranged Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFinesse(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without two-handed OR a masterwork ranged weapon with thrown, he gains the finesse property.",
				101
			]
		}
	},
	firearmE: {
		name: "Apprentice: Firearm E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Ranged, Loading/Reload, no Tension",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFirearm(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with loading/reload and without Tension, it becomes a firearm, its damage dice increase 4 steps, and its dice amount increase to 2 if possible.",
				105
			],
			atkCalc: [
				function (fields, v, output){
					ClassList["craftsman"].AddFirearmRemoveAbilityModToDamage(fields, v, output, "E");              
				}
			]
		}
	},
	fistE: {
		name: "Apprentice: Fist E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Melee, Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddFist(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork light melee weapon attack, it gains the Fist property.",
				102
			]
		}
	},
	foregripE: {
		name: "Apprentice: Foregrip E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq Ranged, Ammunition, no Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddForegrip(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition and without Two-handed, it gains the Fist property.",
				101
			]
		}
	},
	heavyE: {
		name: "Apprentice: Heavy E",
		source: ["VSoS", 79],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Two-handed, no Double",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeavy(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic two-handed weapon attack without Double, it gains the Heavy property. If the weapon is a melee weapon, its damage dice incease 1 step.",
				102
			]
		}
	},
	lightE: {
		name: "Apprentice: Light E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq: no Two-handed/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLight(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork weapon attack without Two-handed or Versatile, it gains the Light property; its damage dice decrease 1 step.",
				101
			]
		}
	},
	loadingE: {
		name: "Apprentice: Loading E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq Ranged, Ammunition, no Reload",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddLoading(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition and not Reload, it gains the Loading property & its damage dice increase 1 step.",
				104
			]
		}
	},
	martialE: {
		name: "Apprentice: Martial E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq: Simple",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMartial(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork simple weapon attack, it becomes a martial weapon & its damage dice increase 1 step.",
				100
			]
		}
	},
	parryingE: {
		name: "Apprentice: Parrying E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq: Exotic, Melee, Finesse/Light",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddParrying(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the Parrying property & its damage dice decrease 1 step.",
				102
			]
		},
		extraAC: [{
			mod: 1,
			name: "Parrying Weapon",
			text: "While wielding a masterwork weapon with the Parrying property and no shield, I gain a +1 bonus to my AC.",
			stopeval: function (v) {
				return v.usingShield;
			}
		}]
	},
	reachE: {
		name: "Apprentice: Reach E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Melee, Finesse/Two-Handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddReach(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic melee weapon attack with Finesse/Two-handed, it gains the Reach property & its damage dice decrease 1 step.",
				102
			]
		}
	},
	reloadE: {
		name: "Apprentice: Reload E",
		source: ["VSoS", 80],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Loading",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){                    
					ClassList["craftsman"].AddReload(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition and not Loading, it gains the Reload(5) property. If the word \"LongReach\" is also included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition, Mounted, and not Loading, it gains the Reload(1; 2 actions) property, and its damage dice increase 5 steps.",
				103
			]
		}
	},
	returningE: {
		name: "Apprentice: Returning E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Light, Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v) {
					ClassList["craftsman"].AddReturning(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic weapon attack with Light & Thrown, it gains the returning property.",
				102
			]
		}
	},
	scatterE: {
		name: "Apprentice: Scatter E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Ranged, Ammunition, Two-Handed, no Sighted",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddScatter(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork ranged weapon attack with Ammunition, Two-handed and not Sighted, it gains the Scatter property; its damage dice decrease by 1 step, its scatter damage increases by 2 steps, its normal range is reduced by 70 feet, and its long range is 3 times its normal range.",
				103
			]
		}
	},
	sightedE: {
		name: "Apprentice: Sighted E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSighted(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack with Ammunition & not Scatter, it gains the sighted property, and its normal range increases by 50 feet.",
				103
			]
		}
	},
	superheavyE: {
		name: "Apprentice: Superheavy E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Exotic, Melee, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSuperheavy(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				103
			]
		}
	},
	switchE: {
		name: "Apprentice: Switch E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: 2 Exotic weapons",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSwitch(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, it gains the superheavy property and its damage dice increase by 1 step.",
				102
			]
		}
	},
	thrownE: {
		name: "Apprentice: Thrown E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Melee, no Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThrown(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without Two-handed, it gains the thrown(20/60) property.",
				100
			]
		}
	},
	tripE: {
		name: "Apprentice: Trip E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Martial/Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTrip(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork melee/exotic weapon attack, it gains the Trip property.",
				102
			]
		}
	},
	twohandedE: {
		name: "Apprentice: Two-handed E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: no Finesse/Foregrip/Light/Thrown/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwohanded(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork weapon attack without Finesse, Foregrip, Light, Thrown, or Versatile, it gains the two-handed property and its damage dice increase 1 step. If the weapon is ranged, its normal range increases by 50 feet.",
				100
			]
		}
	},
	versatileE: {
		name: "Apprentice: Versatile E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		additional: "Prereq: Melee, no Light/Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVersatile(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork melee weapon attack without Light or Two-handed, it gains the versatile property. While being held in two hands, this weapon's damage dice increase 1 step.",
				100
			]
		}
	},
	counterweightedE: {
		name: "Journeyman: Counterweighted E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Counterweighted E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Two-handed",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCounterweighted(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic two-handed weapon attack, this weapon can be wielded in one hand, as long as you don't have a weapon in your other hand.",
				102
			]
		}
	},
	doubleE: {
		name: "Journeyman: Double E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Double E/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Exotic, Melee, no Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddDouble(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack that is not Heavy, this weapon gains the Double property and its damage die decreases by one step.",
				103
			]
		}
	},
	explosiveE: {
		name: "Journeyman: Explosive E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Explosive E/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddExplosive(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack, this weapon gains the Explosive property and its damage die decreases by one step. If this weapon deals bludgeoning, piercing, or slashing damage, it deals fire damage instead.",
				102
			]
		}
	},
	heatE: {
		name: "Journeyman: Heat E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Heat E/.exec(What('Extra.Notes')));; },
		additional: "Prereq: Martial/Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddHeat(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged firearm attack, this weapon gains the Heat property and its damage die increases by one step.",
				106
			]
		}
	},
	journeymanmagicalE: {
		name: "Journeyman: Magical E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Journeyman: Magical E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			],
			atkCalc: [
				function (fields, v, output) {
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");
				}, "",
				102
			]
		}
	},
	massiveE: {
		name: "Journeyman: Massive E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Massive E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Superheavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMassive(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack that is Superheavy, this weapon gains the Massive property, and its damage dice increase by 2 steps.",
				104
			]
		}
	},
	mountedE: {
		name: "Journeyman: Mounted E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Mounted E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Martial/Exotic, Ranged, Heavy",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMounted(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork martial/exotic ranged weapon attack that is Heavy, this weapon gains the Mounted property, and its damage dice increase by 2 steps.",
				103
			]
		}
	},
	precisionE: {
		name: "Journeyman: Precision E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Precision E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPrecision(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Finesse, this weapon gains the Precision property.",
				103
			]
		}
	},
	rocketE: {
		name: "Journeyman: Rocket E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Rocket E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddRocket(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon gains the Rocket property.",
				103
			]
		}
	},
	sniperE: {
		name: "Journeyman: Sniper E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Sniper E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Ammunition, no Scatter",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSniper(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack with Ammunition and not Scatter, this weapon's long range becomes 8 times its normal range.",
				103
			]
		}
	},
	tensionE: {
		name: "Journeyman: Tension E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Tension E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, no Firearm/Thrown",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTension(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack without Firearm or Thrown, this weapon gains the Tension property.",
				106
			]
		}
	},
	twinshotE: {
		name: "Journeyman: Twinshot E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (!/Journeyman: .+ E/.exec(What('Extra.Notes')) || /Twinshot E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddTwinshot(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Twinshot property.",
				102
			]
		}
	},
	adamantineE: {
		name: "Master: Adamantine E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Adamantine E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Heavy/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddAdamantine(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Heavy or Versatile, this weapon's damage dice increase 2 steps, and it deals double damage to objects and structures.",
				103
			]
		}
	},
	blessedE: {
		name: "Master: Blessed E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Blessed E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddBlessed(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d4 radiant damage on hit. This extra damage increases to 1d10 if the target is a Fiend or Undead",
				102
			]
		}
	},
	earthshatterE: {
		name: "Master: Earthshatter E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Earthshatter E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Massive",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddEarthshatter(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack with the Massive property, its damage dice increase 2 steps, and on a hit, the target must make a Strength saving throw, knocking the target prone or pushing them 10 feet away from you on a fail.",
				105
			]
		}
	},
	elementalacidE: {
		name: "Master: Elemental (Acid) E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Elemental \(Acid\) E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "E", "Acid");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 acid damage on a hit.",
				102
			]
		}
	},
	elementalcoldE: {
		name: "Master: Elemental (Cold) E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Cold\) E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "E", "Cold");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 cold damage on a hit.",
				102
			]
		}
	},
	elementalfireE: {
		name: "Master: Elemental (Fire) E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Fire\) E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "E", "Fire");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 fire damage on a hit.",
				102
			]
		}
	},
	elementallightningE: {
		name: "Master: Elemental (Lightning) E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Lightning\) E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "E", "Lightning");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 lightning damage on a hit.",
				102
			]
		}
	},
	elementalthunderE: {
		name: "Master: Elemental (Thunder) E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /\(Thunder\) E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddElemental(fields, v, "E", "Thunder");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d6 thunder damage on a hit.",
				102
			]
		}
	},
	keenE: {
		name: "Master: Keen E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Keen E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse/Versatile",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddKeen(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack with Finesse or Versatile, this weapon scores a critical hit on a roll of 19 or 20.",
				103
			]
		}
	},
	mastermagicalE: {
		name: "Master: Magical E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Master: Magical E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {   
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");             
				}, "",
				102
			]
		}
	},
	mithralE: {
		name: "Master: Mithral E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Mithral E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMithral(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee finesse weapon attack, this weapon's damage dice increase 2 steps, and its weight is halved.",
				102
			]
		}
	},
	serratedE: {
		name: "Master: Serrated E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Serrated E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals Slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSerrated(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, it is treated as a Serrated weapon. When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.",
			]
		}
	},
	slayingSpecialE: {
		name: "Master: Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "of a chosen type");
				}, "Choose a creature type when you add this property. If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to creatures of the chosen type.",
				102
			]
		}
	},
	slayingAberrationE: {
		name: "Master: Aberration Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Aberration Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "aberrations");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Aberrations.",
				102
			]
		}
	},
	slayingBeastE: {
		name: "Master: Beast Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Beast Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "beasts");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Beasts.",
				102
			]
		}
	},
	slayingCelestialE: {
		name: "Master: Celestial Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Celestial Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "celestials");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Celestials.",
				102
			]
		}
	},
	slayingConstructE: {
		name: "Master: Construct Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Construct Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "constructs");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Constructs.",
				102
			]
		}
	},
	slayingDragonE: {
		name: "Master: Dragon Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Dragon Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "dragons");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Dragons.",
				102
			]
		}
	},
	slayingElementalE: {
		name: "Master: Elemental Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Elemental Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "elementals");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Elementals.",
				102
			]
		}
	},
	slayingFeyE: {
		name: "Master: Fey Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Fey Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "fey");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fey.",
				102
			]
		}
	},
	slayingFiendE: {
		name: "Master: Fiend Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Fiend Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "fiends");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Fiends.",
				102
			]
		}
	},
	slayingGiantE: {
		name: "Master: Giant Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Giant Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "giants");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Giants.",
				102
			]
		}
	},
	slayingMonstrosityE: {
		name: "Master: Monstrosity Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Monstrosity Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "monstrosities");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Monstrosities.",
				102
			]
		}
	},
	slayingOozeE: {
		name: "Master: Ooze Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Ooze Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "oozes");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Oozes.",
				102
			]
		}
	},
	slayingPlantE: {
		name: "Master: Plant Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Plant Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "plants");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Plants.",
				102
			]
		}
	},
	slayingUndeadE: {
		name: "Master: Undead Slaying E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Undead Slaying E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSlaying(fields, v, "E", "undead");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, it deals an extra 1d12 damage to Undead.",
				102
			]
		}
	},
	vampiricE: {
		name: "Master: Vampiric E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Vampiric E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVampiric(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals 1d4 necrotic damage on it, and you regain hit points equal to the necrotic damage dealt by this property.",
				102
			]
		}
	},
	venomE: {
		name: "Master: Venom E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (!/Master: .+ E/.exec(What('Extra.Notes')) || /Venom E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVenom(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon deals +1d8 poison damage on hit.",
				102
			]
		}
	},
	crushingE: {
		name: "Legendary: Crushing E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Crushing E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals bludgeoning",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddCrushing(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals Bludgeoning damage, it gains the Crushing property.",
				102
			]
		}
	},
	deadlyE: {
		name: "Legendary: Deadly E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Deadly E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged, Firearm",
		description: "",
		calcChanges: {
			atkCalc: [
				function(fields, v, output) {
					ClassList["craftsman"].AddDeadlyCalc(fields, v, output, "E");               
				}, "If the letter \"E\" is included in the description of a masterwork exotic ranged firearm attack, you can add your ability modifier to its attack and damage rolls, instead of just to its attack rolls.",
				106
			]
		}
	},
	legendarymagicalE: {
		name: "Legendary: Magical E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Legendary: Magical E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddMagical(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack, this weapon becomes magical and gains a +1 bonus to its attack and damage rolls.",
				102
			], 
			atkCalc: [
				function(fields, v, output) {           
					ClassList["craftsman"].AddMagicalBonus(fields, v, output, "E");             
				}, "",
				102
			]
		}
	},
	penetratingE: {
		name: "Legendary: Penetrating E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Penetrating E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ammunition/Thrown, deals piercing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddPenetrating(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack with Ammunition/Thrown that deals piercing damage, this weapon gains the Penetrating property.",
				102
			]
		}
	},
	seekingE: {
		name: "Legendary: Seeking E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Seeking E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Ranged",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddSeeking(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic ranged weapon attack, this weapon gains the Seeking property.",
				102
			]
		}
	},
	threateningE: {
		name: "Legendary: Threatening E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Threatening E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddThreatening(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic melee weapon attack, this weapon gains the Threatening property.",
				102
			]
		}
	},
	vorpalE: {
		name: "Legendary: Vorpal E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Vorpal E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, deals slashing",
		description: "",
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddVorpal(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic weapon attack that deals slashing damage, this weapon gains the Vorpal property.",
				102
			]
		}
	},
	whirlwindE: {
		name: "Legendary: Whirlwind E",
		source: ["VSoS", 81],
		submenu: "Weapon Slot E",
		prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (!/Legendary: .+ E/.exec(What('Extra.Notes')) || /Whirlwind E/.exec(What('Extra.Notes'))); },
		additional: "Prereq: Exotic, Melee, Finesse, Double/Light",
		description: "",
		action: ["bonus action", "Whirlwind (Weapon E)"],
		calcChanges: {
			atkAdd: [
				function(fields, v){
					ClassList["craftsman"].AddWhirlwind(fields, v, "E");
				}, "If the letter \"E\" is included in the description of a masterwork exotic meleeweapon attack with Finesse and Double or Light, this weapon gains the Whirlwind property.",
				104
			]
		}
	}
}

// * Craftsman Class
ClassList["craftsman"] = {
	// given damage dice and direction to step, return the new dice step.
	// a direction of true means we are stepping upwards.
	CalcDieStep : function(diceStep, direction, times) {
 
		var dieAmt = diceStep.split('d');
 
		// if the split didn't work, back out
		if (dieAmt.length < 2) return diceStep;
 
		var newDice = diceStep;
		var timer = 0;
 
		while (timer < times) {
			timer++;
 
			// if we're meant to increase
			if (direction){
 
				// if we find we are at the end of the track, increase the bonus
				if (/1d12\/2d6\+\d+/.test(newDice) || /2d12\+\d+/.test(newDice)){
					var bonus = newDice.match(/\+\d+/);
					var increase = parseInt(bonus[0]) + 1;
					newDice = newDice.replace(/\+\d+/, "") + "+" + increase;
					continue;
				}
 
				switch (newDice){
 
					// do the 1 die track
					case "1d4":
						newDice = "1d6";
						break;
					case "1d6":
						newDice = "1d8";
						break;
					case "1d8":
						newDice = "1d10";
						break;
					case "1d10":
						newDice = "1d12/2d6";
						break;
					case "1d12/2d6":
						newDice = "1d12/2d6+1";
						break;
 
					// do the 2 die track
					case "2d4":
						newDice = "2d4+1";
						break;
					case "2d4+1":
						newDice = "2d6";
						break;
					case "2d6":
						newDice = "2d6+1";
						break;
					case "2d6+1":
						newDice = "2d8";
						break;
					case "2d8":
						newDice = "2d8+1";
						break;
					case "2d8+1":
						newDice = "2d10";
						break;
					case "2d10":
						newDice = "2d10+1";
						break;
					case "2d10+1":
						newDice = "2d12";
						break;
					case "2d12":
						newDice = "2d12+1";
						break;
				}
			}
 
			// if we're meant to decrease
			else{
				// if we find we are at the end of the track, decrease the bonus
				if (/1d12\/2d6\+\d+/.test(newDice) || /2d12\+\d+/.test(newDice)){
					var bonus = newDice.match(/\+\d+/);
					var decrease = parseInt(bonus[0]) - 1;
					newDice = newDice.replace(/\+\d+/, "");
					if (decrease != 0) newDice += "+" + decrease;
					continue;
				}
 
				switch (newDice){
					case "1d12/2d6":
					case "1d12":
						newDice = "1d10";
						break;
					case "1d10":
						newDice = "1d8";
						break;
					case "1d8":
						newDice = "1d6";
						break;
					case "1d6":
						newDice = "1d4";
						break;
					case "2d12":
						newDice = "2d10+1";
						break;
					case "2d10+1":
						newDice = "2d10";
						break;
					case "2d10":
						newDice = "2d8+1";
						break;
					case "2d8+1":
						newDice = "2d8";
						break;
					case "2d8":
						newDice = "2d6+1";
						break;
					case "2d6+1":
						newDice = "2d6";
						break;
					case "2d6":
						newDice = "2d4+1";
						break;
					case "2d4+1":
						newDice = "2d4";
						break;
				}
			}
		}
		
		return newDice;
	},
	// given a range and an integer to increase/decrease it, calculate the new normal + long ranges.
	// based on the book, weapon's long ranges should change according to a multiplier, which is determined by looking at the base ranges.
	CalcNewRange : function(rangeFld, change){
 
		var oldRange = rangeFld.match(/\d+(\/\d+)*/i);
 
		var oldRanges = oldRange[0].split("/");
 
		// if we can't split the range, assume the range has no long range
		if (oldRanges.length < 2)
			return parseInt(oldRange[0]) + change;
 
		// hey everybody its me, multiplier
		var multiplier = parseInt(oldRanges[1]) / parseInt(oldRanges[0]);
 
		var newN = parseInt(oldRanges[0]) + change;
		var newL = newN * multiplier;
 
		return newN + "/" + newL;
	},
 
	// returns false if blowgun, bolas, bomb, and net weapons are detected. these weapons cannot be masterwork
	CheckViable : function (v){
		return !(/blowgun/i.test(v.WeaponTextName) || /bolas/i.test(v.WeaponTextName) || /\bbomb\b/i.test(v.WeaponTextName) || /^[a-e ]*net *[a-e]$/i.test(v.WeaponTextName))
	},
 
	// functions for masterwork weapon property calculations
	AddAerodynamic : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b" + letter + "\\b", "i").test(v.WeaponTextName) && /thrown/i.test(fields.Description) && !/\baerodynamic\b/i.test(fields.Description))
		{
			// get the range, increase the normal by 40
			var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, 40);
			fields.Range = fields.Range.replace(/\d+(\/\d+)*/i, newRange);
		}
	},
	AddBalanced : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// remove the heavy property description
			fields.Description = fields.Description.replace(/heavy[,; ]*/i, "");
		}
	},
	AddAutomatic : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && /reload/i.test(fields.Description) && !/\bautomatic\b/i.test(fields.Description)){    
			
			// get the range, decrease by 20
			var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, -20);
			fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);
 
			// step the dice down
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);
			fields.Damage_Die = newDice;
 
			// add automatic property description & tooltip
			fields.Description += (fields.Description == "" ? "" : "; ") + "Automatic";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "\n" : "") + 
											"Automatic: When you make an attack with this weapon on your turn, you can choose to make two attacks instead. These attacks are always made with disadvantage, regardless of circumstance. These attacks use twice the normal amount of ammunition.";
		}
	},
	AddConcealable : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /light/i.test(fields.Description) && !/\bconcealable\b/i.test(fields.Description)){
 
			// add to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Concealable";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
											"Concealable: While stowed, you have advantage on Dexterity (Stealth) checks made to conceal this weapon.";
		}
	},
	AddElegant : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /light/i.test(fields.Description) && (v.isMeleeWeapon || (v.isRangedWeapon && /thrown/i.test(fields.Description))) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/\belegant\b/i.test(fields.Description)){
 
			// step up damage dice
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
 
			// add to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Elegant";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
											"Elegant: This weapon requires exceptional skill to use. You must have a Dexterity score of 16 or higher to wield an elegant weapon.";
		}
	},
	AddExotic : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && !/exotic/i.test(v.theWea.type) && !/exotic/i.test(fields.Description)){
 
			// step up damage dice
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
 
			// add exotic to the description and possibly remove martial
			fields.Description = fields.Description.replace(/[; ]*Martial/, "");
			fields.Description += (fields.Description ? "; " : "") + "Exotic";
		}
	},
	AddExtendedMag : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /reload/i.test(fields.Description) && (/martial/i.test(v.theWea.type) || /martial/i.test(fields.Description) || /exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// seek reload property to change capacity
			var reloadNum = fields.Description.match(/reload \(\d+/i);
			reloadNum = reloadNum.replace(/reload \(/i, "");
			var newReload = parseInt(reloadNum) * 2;
			fields.Description = fields.Description.replace(/reload \(\d+/i, "Reload (" + newReload);
		}
	},
	AddFinesse : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && ((v.isMeleeWeapon && !/two-handed/i.test(fields.Description)) || (v.isRangedWeapon) && /thrown/i.test(fields.Description)) && !/finesse/i.test(fields.Description)){
 
			// add finesse property
			if (!/finesse/i.test(fields.Description))
				fields.Description += (fields.Description ? "; " : "") + "Finesse";
 
			fields.Mod = What('Str Mod') < What('Dex Mod') ? 2 : 1;
		}
	},
	AddFirearm : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/loading/i.test(fields.Description) || /reload/i.test(fields.Description)) && v.isRangedWeapon && !/tension/i.test(fields.Description) && (!/firearm/i.test(v.theWea.list))){
 
			// up the dice number to 2, then step 4 times
			var die = fields.Damage_Die.match(/\d+d\d+/i)
			var dieSplit = die[0].split("d");
			if (dieSplit[0] == 1) dieSplit[0] = "2";
			var newDice = ClassList["craftsman"].CalcDieStep(dieSplit[0] + "d" + dieSplit[1], true, 4);
			fields.Damage_Die = newDice;
 
			// add firearm to the description & tooltip
			fields.Description += (fields.Description == "" ? "" : "; ") + "Firearm";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") +
										   "Firearm: You don't add your ability modifier to this weapon's damage rolls. Firearm ammunition can't be recovered once used.";        
		}
	},
	AddFirearmRemoveAbilityModToDamage : function(fields, v, output, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/loading/i.test(fields.Description) || /reload/i.test(fields.Description)) && v.isRangedWeapon && !/tension/i.test(fields.Description) && (!/firearm/i.test(v.theWea.list))){
			output.modToDmg = false;
		}
	},
	AddFist : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /light/i.test(fields.Description) && v.isMeleeWeapon && !/fist/i.test(fields.Description)){
 
			// add fist to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Fist";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") +
										"Fist: Attacks made with this weapon are treated as unarmed strikes."
		}
	},
	AddForegrip : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /ammunition/i.test(fields.Description) && !/two-handed/i.test(fields.Description) && v.isRangedWeapon && !/foregrip/i.test(fields.Description)){
 
			// let the last atkAdd know that this weapon needs its foregrip range calculated.
			// add foregrip to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Foregrip";
			fields.Description_Tooltip += (fields.Description == "" ? "" : "\n") +
										"Foregrip. This weapon can be used with one or two hands. If used in two hands, its normal range increases by 50 feet and its long range increases accordingly."
		}
	},
	AddHeavy : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /two-handed/i.test(fields.Description) && !/double/i.test(fields.Description) && (/martial/i.test(v.theWea.type) || /martial/i.test(fields.Description) || /exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/\bheavy\b/i.test(fields.Description)){
 
			// add heavy to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Heavy";
			
			// increase damage if melee
			if (v.isMeleeWeapon) {
				var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
				fields.Damage_Die = newDice;
			}
 
			// if this is ranged, increase the range by 20
			if (v.isRangedWeapon) {
				var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, 20);
				fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);
			}
		}
	},
	AddLight : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && !/two-handed/i.test(fields.Description) && !/versatile/i.test(fields.Description) && !/light/i.test(fields.Description)){
 
			// add light to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Light";
			
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
		}
	},
	AddLoading : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /ammunition/i.test(fields.Description) && !/reload/i.test(fields.Description) && v.isRangedWeapon && !/loading/i.test(fields.Description)){
 
			// add loading to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Loading";
			
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
		}
	},
	AddMartial : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && /simple/i.test(v.theWea.type)){
 
			// add martial to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Martial";
			
			// step up damage dice
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
		}
	},
	AddParrying : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && (/finesse/i.test(fields.Description) || /light/i.test(fields.Description)) && !/parrying/i.test(fields.Description)){
 
			// todo: add parrying AC bonus?
			// add parrying to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Parrying";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") +
										"Parrying: While wielding this weapon and not wielding a shield, you gain a +1 bonus to your AC."
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
		}
	},
	AddReach : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && (/finesse/i.test(fields.Description) || /two-handed/i.test(fields.Description)) && !/reach/i.test(fields.Description)){
 
			// add reach to description
			fields.Description += (fields.Description ? "; " : "") + "Reach";
			
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
		}
	},
	AddReload : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && (/ammunition/i.test(fields.Description) || !/loading/i.test(fields.Description)) && !/reload/i.test(fields.Description)){
			
			// handle the longer reload if we find "long reload" in the title
			if (/\blong reload\b/i.test(v.WeaponTextName) && /mounted/i.test(fields.Description)){
 
				// add reload to description 
				fields.Description += (fields.Description ? "; " : "") + "Reload (1; 2 actions)";
				fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
											"Reload: This weapon can be used to make a number of attacks before it must be reloaded. If you are proficient with the weapon, reloading it takes a bonus action; otherwise, reloading it takes an action. Some weapons require an action or longer to reload, even if you have proficiency, which is specified in the Reload property. If reloading a weapon requires longer than one action, the weapon can't be used to make attacks until reloading is finished.";
				// increase damage by 3
				var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 3);                       
				fields.Damage_Die = newDice;
			}
			// otherwise handle the regular reload
			else {
				// add reload to description 
				fields.Description += (fields.Description ? "; " : "") + "Reload (5)";
				fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
											"Reload: This weapon can be used to make a number of attacks before it must be reloaded. If you are proficient with the weapon, reloading it takes a bonus action; otherwise, reloading it takes an action. Some weapons require an action or longer to reload, even if you have proficiency, which is specified in the Reload property. If reloading a weapon requires longer than one action, the weapon can't be used to make attacks until reloading is finished.";
 
			}
		}
	},
	AddReturning : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && (/light/i.test(fields.Description) || /thrown/i.test(fields.Description)) && !/returning/i.test(fields.Description)){
 
			// add returning to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Returning";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
										"Returning: After being thrown, this weapon returns to your hand at the end of your turn.";                 
		}
	},
	AddScatter : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/ammunition/i.test(fields.Description) || /two-handed/i.test(fields.Description)) && !/sighted/i.test(fields.Description) && !/scatter/i.test(fields.Description)){
 
			// descrease damage 1 step
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
 
			// add description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Scatter";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
										"Scatter: If you make an attack against a target that is within half this weapon's normal range, you deal the damage value listed in parentheses instead of the weapon's normal damage dice.";
										
			// calculate new range
			var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, -70);
			fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);
		}
	},
	AddSighted : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && /ammunition/i.test(fields.Description) && !/scatter/i.test(fields.Description) && !/sighted/i.test(fields.Description)){
 
			// add to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Sighted";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
										"Sighted: This weapon has disadvantage on attack rolls made against targets within 20 feet of you.";
			
			// calculate new range
			var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, 50);
			fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);           
		}
	},
	AddSuperheavy : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /\bheavy\b/i.test(fields.Description) && !/superheavy/i.test(fields.Description)){
 
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
 
			// add to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Superheavy";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
										"Superheavy: This weapon is unusually large for its type. You must have a Strength score of 16 or higher to wield a superheavy weapon.";                    
		}
	},
	AddSwitch : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/switch/i.test(fields.Description)){
 
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
 
			// add to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Switch";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") + 
										"Switch: This weapon has two forms. You can swap between which weapon is being used at any time, even between attacks.";                    
		}
	},
	AddThrown : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (!/two-handed/i.test(fields.Description)) && !/thrown/i.test(fields.Description)){
 
			// add thrown to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Thrown";
			
			// add ranges
			fields.Range += ", 20/60 ft";
		}
	},
	AddTrip : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && !/trip/i.test(fields.Description)){
 
			// add trip to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Trip";
			fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "") +
										"Trip: You can make a shove attempt against any creature within this weapon's reach. Furthermore, you have advantage on ability checks you make to shove a creature using this weapon.";
		}
	},
	AddTwohanded : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && !/finesse/i.test(fields.Description) && !/foregrip/i.test(fields.Description) && !/light/i.test(fields.Description) && !/thrown/i.test(fields.Description) && !/versatile/i.test(fields.Description) && !/two-handed/i.test(fields.Description)){
 
			// add twohanded to description
			fields.Description += (fields.Description ? "; " : "") + "Two-handed";
 
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
 
			// if this weapon is ranged, increase that range
			if (v.isRangedWeapon){
				var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, 50);
				fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);
			}
		}
	},
	AddVersatile : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && !/light/i.test(fields.Description) && !/two-handed/i.test(fields.Description) && !/versatile/i.test(fields.Description)){
 
			// calculate two-handed damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
 
			// add versatile to description
			if (!/versatile/i.test(fields.Description))
				fields.Description += (fields.Description ? "; " : "") + "Versatile (" + newDice + ")";
		}
	},
	AddCounterweighted : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /two-handed/i.test(fields.Description)){
 
			// add counterweighted to description & tooltip
			if (!/counterweighted/i.test(fields.Description))
				fields.Description += (fields.Description ? "; " : "") + "Counterweighted";
 
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Counterweighted: You can wield this weapon in one hand, as long as you don't have a weapon in your other hand.";
		}
	},
	AddDouble : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/heavy/i.test(fields.Description) && !/double/i.test(fields.Description)){
 
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
 
			// add double to description & tooltip
			if (!/double/i.test(fields.Description))
				fields.Description += (fields.Description ? "; " : "") + "Double";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Double: This weapon has two damage-dealing ends. When you take the Attack action and make an attack with this weapon, you can use your bonus action to make an additional attack with it; you don't add your ability modifier to the damage roll of this additional attack.";
		}
	},
	AddExplosive : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/martial/i.test(v.theWea.type) || /martial/i.test(fields.Description) || /exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/explosive/i.test(fields.Description)){
 
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
 
			// change damage type
			if (/bludgeoning/i.test(fields.Damage_Type) || /piercing/i.test(fields.Damage_Type) || /slashing/i.test(fields.Damage_Type))
				fields.Damage_Type = "Fire";
 
			// add double to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Explosive";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Explosive: When this weapon's projectile hits a target, it explodes in a 15-foot diameter sphere. The projectile can target an unoccupied space within its range. Each creature other than the target within the blast radius (for a Medium or smaller target, each creature within 5 feet of it) must make a Dexterity saving throw, taking half the damage rolled on a failed save or no damage on a successful one.";
		}
	},
	AddHeat : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && (/firearm/i.test(v.theWea.list) || /firearm/i.test(fields.Description)) && !/\bheat\b/i.test(fields.Description)){
 
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
			fields.Damage_Die = newDice;
 
			// add heat to description & tooltip
			if (!/heat/i.test(fields.Description))
				fields.Description += (fields.Description ? "; " : "") + "Heat";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Heat: This weapon gains 1 heat point whenever an attack is made with it, and it loses 1 heat point at the start of each of your turns. If the weapon has 3 heat points, it overheats and loses all heat points. An overheated weapon can't be used to make an attack again until the end of your next turn.";
		}
	},
	AddMagical : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// remove 'counts as', because it is
			fields.Description = fields.Description.replace(/counts as /i, "");
		}
	},
	AddMagicalBonus : function(fields, v, output, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
			// add +1s
			output.extraHit += 1;
			output.extraDmg += 1;
		}
	},
	AddMassive : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && v.isMeleeWeapon && /superheavy/i.test(fields.Description) && !/massive/i.test(fields.Description)){
 
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);                       
			fields.Damage_Die = newDice;
 
			// add massive to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Massive";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Massive: You can only make an attack with this weapon when you take the Attack action, and only as the first attack you make on your turn. Once you make an attack with this weapon, you can't make any attacks until the start of your next turn. If you would be able to attack more than once when you take the Attack action on your turn, you deal an extra two dice of damage for each attack you forgo when using this weapon.";
		}
	},
	AddMounted : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description) || /martial/i.test(v.theWea.type) || /martial/i.test(fields.Description)) && v.isRangedWeapon && /heavy/i.test(fields.Description) && !/mounted/i.test(fields.Description)){
 
			// increase damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);                       
			fields.Damage_Die = newDice;
 
			// add mounted to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Mounted";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Mounted: This weapon is normally used while attached to a tripod, vehicle, or other bracing mount. You can mount or unmount this weapon as an action. While it is mounted, it can't be moved. It can only be used to make an attack while unmounted if held by a Medium or larger creature with a Strength score of at least 15.";
		}
	},
	AddPrecision : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && v.isMeleeWeapon && /finesse/i.test(fields.Description) && !/precision/i.test(fields.Description)){
 
			// add precision to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Precision +1d6";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Precision. Once per turn, when you hit a creature with this weapon and have advantage on the attack roll, the target takes an extra 1d6 damage.";
		}
	},
	AddRocket : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/rocket/i.test(fields.Description)){
 
			// decrease damage
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
			fields.Damage_Die = newDice;
 
			// add rocket to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Rocket +1d4";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Rocket: This weapon has a small propulsive engine attached to it or its projectiles. Once per turn, when you hit a creature with this weapon, you can deal an extra 1d4 damage to the target.";
		}
	},
	AddSniper : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /ammunition/i.test(fields.Description) && !/scatter/i.test(fields.Description) && !/sniper/i.test(fields.Description)){
 
			// increase the long range by 8
			var rangeFld = fields.Range.match(/\d+(\/\d+)*/i);
			var ranges = rangeFld[0].split("/");
			var newRange = ranges[0] + "/" + (parseInt(ranges[0]) * 8);
			fields.Range = fields.Range.replace(/\d+(\/\d+)*/, newRange);   
		}
	},
	AddTension : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && (!/firearm/i.test(fields.Description) && !/firearm/i.test(v.theWea.list)) && !/thrown/i.test(fields.Description) && !/tension/i.test(fields.Description)){
 
			// change this weapon's ability to STR if its higher
			if (What("Dex Mod") < What("Str Mod")){
				fields.Mod = 1;
			}
			
			// add tension to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Tension";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Tension: When making a ranged weapon attack with a tension weapon, you use your choice of your Strength or Dexterity modifier for the attack and damage rolls. You must use the same modifier for both rolls.";
		}
	},
	AddTwinshot : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isRangedWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/twinshot/i.test(fields.Description)){
			
			// add twinshot to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Twinshot";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Twinshot: Once on each of your turns when you make an attack with this weapon, you can make another attack with it against a different creature that is within 5 feet of the original target and within this weapon's range.";
		}
	},
	AddAdamantine : function(fields, v, letter){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && (/heavy/i.test(fields.Description) || /versatile/i.test(fields.Description)) && !/adamantine/i.test(fields.Description)){
			
			// increase damage 2 steps
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);                       
			fields.Damage_Die = newDice;
 
			// add adamantine to description & tooltip
			fields.Description += (fields.Description ? "; " : "") + "Adamantine";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Adamantine: This weapon deals double damage to objects and structures.";
		}
	},
	AddBlessed : function(fields, v, letter){
		if (new RegExp("\\b" + letter + "\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && !/\+1d4 radiant \(1d10 vs Fiends\/Undead\)/i.test(fields.Description)){
			
			// add blessed to description
			fields.Description += (fields.Description ? "; " : "") + "+1d4 radiant (1d10 vs Fiends/Undead)";
		}
	},
	AddEarthshatter : function(fields, v, letter){
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /massive/i.test(fields.Description) && !/earthshatter/i.test(fields.Description)){
			
			// increase damage 2 steps
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);                       
			fields.Damage_Die = newDice;
 
			// add earthshatter to description
			fields.Description += (fields.Description == "" ? "" : "; ") + "Earthshatter";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Earthshatter: On a hit with this weapon, the target must make a Strength saving throw. On a failed save, the target is knocked prone or pushed 10 feet away from you (your choice). ";
		}
	},
	AddElemental : function(fields, v, letter, damageType){
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// add elemental to description
			fields.Description += (fields.Description ? "; " : "") + "+1d6 " + damageType;
		}
	},
	AddKeen : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && (/finesse/i.test(fields.Description) || /versatile/i.test(fields.Description))){
 
			// add keen to description
			if (!/crit on/i.test(fields.Description)) fields.Description += (fields.Description ? "; " : "") + "Crit on 19-20";
		}
	},
	AddMithral : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /finesse/i.test(fields.Description)){
 
			// increase damage 2 steps
			var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);                       
			fields.Damage_Die = newDice;
 
			// halve weight
			fields.weight = fields.weight / 2;
		}
	},
	AddSerrated : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /slashing/i.test(fields.Damage_Type) && !/serrated/i.test(fields.Description)){
 
			// add serrated to description
			fields.Description += (fields.Description ? "; " : "") + "Serrated +1d8";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Serrated: When a creature takes damage from serrated weapons twice or more in a single turn, it takes an extra 1d8 slashing damage.";
		}
	},
	AddSlaying : function(fields, v, letter, creaType) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// add slaying to description
			fields.Description += (fields.Description ? "; " : "") + "+1d12 vs " + creaType;
		}
	},
	AddVampiric : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))){
 
			// add vampiric to description
			fields.Description += (fields.Description ? "; " : "") + "+1d4 necrotic, heal result";
		}
	},
	AddVenom: function (fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b" + letter + "\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description))) {
			// add venom to description
			fields.Description += (fields.Description == "" ? "" : "; ") + "+1d8 poison";
		}
	},
	AddCrushing : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /bludgeoning/i.test(fields.Damage_Type) && !/\-1 to target's AC/i.test(fields.Description_Tooltip)){
 
			// add crushing to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "-1 to target's AC";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Crushing: When you hit a creature that has natural armor or is wearing armor, the target takes a cumulative −1 penalty to the AC its armor offers. Armor reduced to an AC of 10 in this way is destroyed. A creature can repair its armor or heal the damage dealt to its natural armor over the course of a long rest.";
		}
	},
	AddDeadlyCalc : function(fields, v, output, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && v.isRangedWeapon && (/firearm/i.test(fields.Description) || /firearm/i.test(v.theWea.list))){
			output.modToDmg = true;
		}
	},
	AddPenetrating : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && (/ammunition/i.test(fields.Description) || /thrown/i.test(fields.Description)) && /piercing/i.test(fields.Damage_Type) && !/penetrating/i.test(fields.Description)){
 
			// add penetrating to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Penetrating (Dex save)";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Penetrating: This weapon pierces through its targets. When you make a ranged attack with this weapon and don't have disadvantage, you can target all creatures in a straight line within this weapon's normal range. You don't make an attack roll for this attack. Instead, each creature in the line must succeed on a Dexterity saving throw or take damage as if it were hit by the weapon.";
		}
	},
	AddSeeking : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && v.isRangedWeapon){
 
			// add seeking to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "5 dmg on miss";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Seeking: When you make an attack roll that doesn't have disadvantage with this weapon and miss, you instead hit the target and deal 5 damage of the weapon's type. This damage can't be increased in any way, and no other effects can be applied to the hit.";
		}
	},
	AddThreatening : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && v.isMeleeWeapon && !/threatening/i.test(fields.Description)){
 
			// add seeking to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Threatening";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Threatening: When you make an opportunity attack with a threatening weapon, you can do so without using your reaction. You can't make more than one opportunity attack per turn.";
		}
	},
	AddVorpal : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /slashing/i.test(fields.Damage_Type) && !/On nat 20: cut off head/.test(fields.Description_Tooltip)){
 
			// add seeking to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "On 20 to hit: cut off head or +6d8";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Vorpal: When you attack a creature that has at least one head with this weapon and roll a 20 on the attack roll, you cut off one of the creature's heads. The creature dies if it can't survive without the lost head. A creature is immune to this effect if it is immune to slashing damage, doesn't have or need a head, has legendary actions, or the GM decides that the creature is too big for its head to be cut off with this weapon. Such a creature instead takes an extra 6d8 slashing damage from the hit.";
		}
	},
	AddWhirlwind : function(fields, v, letter) {
		if (!ClassList["craftsman"].CheckViable(v)) return;
		if (new RegExp("\\b"+letter+"\\b", "i").test(v.WeaponTextName) && v.isMeleeWeapon && (/exotic/i.test(v.theWea.type) || /exotic/i.test(fields.Description)) && /finesse/i.test(fields.Description) && (/double/i.test(fields.Description) || /light/i.test(fields.Description)) && !/whirlwind/i.test(fields.Description)){
 
			// add whirlwind to description + tooltip
			fields.Description += (fields.Description ? "; " : "") + "Whirlwind";
			fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
										"Whirlwind: When you use your bonus action to make an additional melee attack with this weapon—such as when you engage with two-weapon fighting or use a double weapon—you can make an attack with it against any number of creatures within 5 feet of you, with a separate attack roll for each target. You can't move between these bonus attacks.";
		}
	},
	regExpSearch : /^(?=.*craftsman).*$/i,
	name : "Craftsman",
	source : ["VSoS", 64],
	primaryAbility : "Intelligence",
	abilitySave : 4,
	prereqs : "Strength 13 or Dexterity 13, and Intelligence 13",
	die : 10,
	improvements : [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
	saves : ["Int", "Con"],
	skillstxt: {
		   primary: "Choose two from Arcana, Athletics, History, Investigation, Medicine, Perception, and Persuasion",
	   },
	toolProfs : {
		primary : [["Craftsman's tools", "Int"], "All artisan's tools"],
		secondary : [["Craftsman's tools", "Int"], "All artisan's tools"] 
	},
	armorProfs : {
		primary: [true, true, true, true],
		secondary: [true, true, false, true]
	   },
	weaponProfs : {
		primary: [true, true, ["exotic"]], 
		secondary: [true, true, ["exotic"]] 
	   },
	equipment : "Craftsman starting equipment:\n \u2022 A shield and a dagger;\n \u2022 Chain mail -or- leather armor -or- scale mail;\n \u2022 A warhammer -or- any simple weapon;\n \u2022 A light crossbow and 20 bolts -or- a shortbow and 20 arrows;\n \u2022 Craftsman's tools;\n \u2022 A dungeoneer's pack.",
	subclasses : ["Artisan's Guild", []],
	attacks : [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
	features : {    
		"bonus proficiencies" : {
			name : "Bonus Proficiencies",
			source : ["VSoS", 65],
			minlevel : 1,
			description : desc([
				   "I am proficient with exotic weapons and armor, as well as all artisan's tools",
			]),
		},
		"active crafting" : {
			name : "Active Crafting",
			source : ["VSoS", 65],
			minlevel : 1,
			description : desc([
				"I can make 1 nonmagical item each day when I take a long rest. To make an item, I pay half",
				"the item's gold cost in materials, up to 25 gp. I can make items worth more than 25 gp by",
				"working on them for multiple days, spending 25 gp/day. As I gain craftsman levels, I can",
				"spend more gp/day on materials. Items I make this way can be sold at half their gp cost."
			]),
			limfeaname: "Max Active Crafting Gold",
			usages: levels.map(function (n) { return (n < 3 ? 25 : n < 20 ? ((n - 1) * 25) : 500); } ),
			recovery: "day",
			equipright : [
				["Craftsman's tools", "", 20]
			],
			toNotesPage: [{
				name: "Craftsman's Tools",
				note: [
					"I carry a set of Craftsman's Tools, which I can use for any ability check I would",
					"make with any set of artisan's tools. A set of craftsman's tools costs 75 gp."
				]
			}]
		},
		"masterwork" : {
			name : "Masterwork",
			source : ["VSoS", 65],
			minlevel : 2,
			additional : levels.map(function (n){
				return n <= 1 ? "" : ("Max Masterwork Property Level: " + (n < 5 ? "Apprentice" : n < 11 ? "Journeyman" : n < 17 ? "Master" : "Legendary"));
			}),
			description : desc([
				"I can craft masterwork weapons & armor for 50 gp plus the normal cost and time.",
				"Masterwork weapons have a +1 bonus to attack rolls, unless already a +1 magic weapon.",
				"I can modify masterwork items during a long rest. See notes pages for details.",
				"Masterwork save DC: 8 + my proficiency bonus + my Intelligence modifier"
			]),
			extrachoices: MasterworkWeaponChoices,
			extraname: "Masterwork Weapon Properties",
			"apprentice: aerodynamic a" : MasterworkWeaponProperties.aerodynamicA,
			"apprentice: automatic a" : MasterworkWeaponProperties.automaticA,
			"apprentice: balanced a" : MasterworkWeaponProperties.balancedA,
			"apprentice: concealable a" : MasterworkWeaponProperties.concealableA,
			"apprentice: elegant a" : MasterworkWeaponProperties.elegantA,
			"apprentice: exotic a" : MasterworkWeaponProperties.exoticA,
			"apprentice: extended magazine a" : MasterworkWeaponProperties.extendedmagA,
			"apprentice: finesse a" : MasterworkWeaponProperties.finesseA,
			"apprentice: firearm a" : MasterworkWeaponProperties.firearmA,
			"apprentice: fist a" : MasterworkWeaponProperties.fistA,
			"apprentice: foregrip a" : MasterworkWeaponProperties.foregripA,
			"apprentice: heavy a" : MasterworkWeaponProperties.heavyA,
			"apprentice: light a" : MasterworkWeaponProperties.lightA,
			"apprentice: loading a" : MasterworkWeaponProperties.loadingA,
			"apprentice: martial a" : MasterworkWeaponProperties.martialA,
			"apprentice: parrying a" : MasterworkWeaponProperties.parryingA,
			"apprentice: reach a" : MasterworkWeaponProperties.reachA,
			"apprentice: reload a" : MasterworkWeaponProperties.reloadA,
			"apprentice: returning a" : MasterworkWeaponProperties.returningA,
			"apprentice: scatter a" : MasterworkWeaponProperties.scatterA,
			"apprentice: sighted a" : MasterworkWeaponProperties.sightedA,
			"apprentice: superheavy a" : MasterworkWeaponProperties.superheavyA,
			"apprentice: switch a" : MasterworkWeaponProperties.switchA,
			"apprentice: thrown a" : MasterworkWeaponProperties.thrownA,
			"apprentice: trip a" : MasterworkWeaponProperties.tripA,
			"apprentice: two-handed a" : MasterworkWeaponProperties.twohandedA,
			"apprentice: versatile a" : MasterworkWeaponProperties.versatileA,
			"journeyman: counterweighted a" : MasterworkWeaponProperties.counterweightedA,
			"journeyman: double a" : MasterworkWeaponProperties.doubleA,
			"journeyman: explosive a" : MasterworkWeaponProperties.explosiveA,
			"journeyman: heat a" : MasterworkWeaponProperties.heatA,
			"journeyman: magical a" : MasterworkWeaponProperties.journeymanmagicalA,
			"journeyman: massive a" : MasterworkWeaponProperties.massiveA,
			"journeyman: mounted a" : MasterworkWeaponProperties.mountedA,
			"journeyman: precision a" : MasterworkWeaponProperties.precisionA,
			"journeyman: rocket a" : MasterworkWeaponProperties.rocketA,
			"journeyman: sniper a" : MasterworkWeaponProperties.sniperA,
			"journeyman: tension a" : MasterworkWeaponProperties.tensionA,
			"journeyman: twinshot a" : MasterworkWeaponProperties.twinshotA,
			"master: adamantine a" : MasterworkWeaponProperties.adamantineA,
			"master: blessed a" : MasterworkWeaponProperties.blessedA,
			"master: earthshatter a" : MasterworkWeaponProperties.earthshatterA,
			"master: elemental (acid) a" : MasterworkWeaponProperties.elementalacidA,
			"master: elemental (cold) a" : MasterworkWeaponProperties.elementalcoldA,
			"master: elemental (fire) a" : MasterworkWeaponProperties.elementalfireA,
			"master: elemental (lightning) a" : MasterworkWeaponProperties.elementallightningA,
			"master: elemental (thunder) a" : MasterworkWeaponProperties.elementalthunderA,
			"master: keen a" : MasterworkWeaponProperties.keenA,
			"master: magical a" : MasterworkWeaponProperties.mastermagicalA,
			"master: mithral a" : MasterworkWeaponProperties.mithralA,
			"master: serrated a" : MasterworkWeaponProperties.serratedA,
			"master: slaying a" : MasterworkWeaponProperties.slayingSpecialA,
			"master: slaying (aberrations) a" : MasterworkWeaponProperties.slayingAberrationA,
			"master: slaying (beasts) a" : MasterworkWeaponProperties.slayingBeastA,
			"master: slaying (celestials) a" : MasterworkWeaponProperties.slayingCelestialA,
			"master: slaying (constructs) a" : MasterworkWeaponProperties.slayingConstructA,
			"master: slaying (dragons) a" : MasterworkWeaponProperties.slayingDragonA,
			"master: slaying (elementals) a" : MasterworkWeaponProperties.slayingElementalA,
			"master: slaying (fey) a" : MasterworkWeaponProperties.slayingFeyA,
			"master: slaying (fiends) a" : MasterworkWeaponProperties.slayingFiendA,
			"master: slaying (giants) a" : MasterworkWeaponProperties.slayingGiantA,
			"master: slaying (monstrosities) a" : MasterworkWeaponProperties.slayingMonstrosityA,
			"master: slaying (oozes) a" : MasterworkWeaponProperties.slayingOozeA,
			"master: slaying (plants) a" : MasterworkWeaponProperties.slayingPlantA,
			"master: slaying (undead) a" : MasterworkWeaponProperties.slayingUndeadA,
			"master: vampiric a" : MasterworkWeaponProperties.vampiricA,
			"master: venom a" : MasterworkWeaponProperties.venomA,
			"legendary: crushing a" : MasterworkWeaponProperties.crushingA,
			"legendary: deadly a" : MasterworkWeaponProperties.deadlyA,
			"legendary: magical a" : MasterworkWeaponProperties.legendarymagicalA,
			"legendary: penetrating a" : MasterworkWeaponProperties.penetratingA,
			"legendary: seeking a" : MasterworkWeaponProperties.seekingA,
			"legendary: threatening a" : MasterworkWeaponProperties.threateningA,
			"legendary: vorpal a" : MasterworkWeaponProperties.vorpalA,
			"legendary: whirlwind a" : MasterworkWeaponProperties.whirlwindA,
			
			"apprentice: aerodynamic b" : MasterworkWeaponProperties.aerodynamicB,
			"apprentice: automatic b" : MasterworkWeaponProperties.automaticB,
			"apprentice: balanced b" : MasterworkWeaponProperties.balancedB,
			"apprentice: concealable b" : MasterworkWeaponProperties.concealableB,
			"apprentice: elegant b" : MasterworkWeaponProperties.elegantB,
			"apprentice: exotic b" : MasterworkWeaponProperties.exoticB,
			"apprentice: extended magazine b" : MasterworkWeaponProperties.extendedmagB,
			"apprentice: finesse b" : MasterworkWeaponProperties.finesseB,
			"apprentice: firearm b" : MasterworkWeaponProperties.firearmB,
			"apprentice: fist b" : MasterworkWeaponProperties.fistB,
			"apprentice: foregrip b" : MasterworkWeaponProperties.foregripB,
			"apprentice: heavy b" : MasterworkWeaponProperties.heavyB,
			"apprentice: light b" : MasterworkWeaponProperties.lightB,
			"apprentice: loading b" : MasterworkWeaponProperties.loadingB,
			"apprentice: martial b" : MasterworkWeaponProperties.martialB,
			"apprentice: parrying b" : MasterworkWeaponProperties.parryingB,
			"apprentice: reach b" : MasterworkWeaponProperties.reachB,
			"apprentice: reload b" : MasterworkWeaponProperties.reloadB,
			"apprentice: returning b" : MasterworkWeaponProperties.returningB,
			"apprentice: scatter b" : MasterworkWeaponProperties.scatterB,
			"apprentice: sighted b" : MasterworkWeaponProperties.sightedB,
			"apprentice: superheavy b" : MasterworkWeaponProperties.superheavyB,
			"apprentice: switch b" : MasterworkWeaponProperties.switchB,
			"apprentice: thrown b" : MasterworkWeaponProperties.thrownB,
			"apprentice: trip b" : MasterworkWeaponProperties.tripB,
			"apprentice: two-handed b" : MasterworkWeaponProperties.twohandedB,
			"apprentice: versatile b" : MasterworkWeaponProperties.versatileB,
			"journeyman: counterweighted b" : MasterworkWeaponProperties.counterweightedB,
			"journeyman: double b" : MasterworkWeaponProperties.doubleB,
			"journeyman: explosive b" : MasterworkWeaponProperties.explosiveB,
			"journeyman: heat b" : MasterworkWeaponProperties.heatB,
			"journeyman: magical b" : MasterworkWeaponProperties.journeymanmagicalB,
			"journeyman: massive b" : MasterworkWeaponProperties.massiveB,
			"journeyman: mounted b" : MasterworkWeaponProperties.mountedB,
			"journeyman: precision b" : MasterworkWeaponProperties.precisionB,
			"journeyman: rocket b" : MasterworkWeaponProperties.rocketB,
			"journeyman: sniper b" : MasterworkWeaponProperties.sniperB,
			"journeyman: tension b" : MasterworkWeaponProperties.tensionB,
			"journeyman: twinshot b" : MasterworkWeaponProperties.twinshotB,
			"master: adamantine b" : MasterworkWeaponProperties.adamantineB,
			"master: blessed b" : MasterworkWeaponProperties.blessedB,
			"master: earthshatter b" : MasterworkWeaponProperties.earthshatterB,
			"master: elemental (acid) b" : MasterworkWeaponProperties.elementalacidB,
			"master: elemental (cold) b" : MasterworkWeaponProperties.elementalcoldB,
			"master: elemental (fire) b" : MasterworkWeaponProperties.elementalfireB,
			"master: elemental (lightning) b" : MasterworkWeaponProperties.elementallightningB,
			"master: elemental (thunder) b" : MasterworkWeaponProperties.elementalthunderB,
			"master: keen b" : MasterworkWeaponProperties.keenB,
			"master: magical b" : MasterworkWeaponProperties.mastermagicalB,
			"master: mithral b" : MasterworkWeaponProperties.mithralB,
			"master: serrated b" : MasterworkWeaponProperties.serratedB,
			"master: slaying b" : MasterworkWeaponProperties.slayingSpecialB,
			"master: slaying (aberrations) b" : MasterworkWeaponProperties.slayingAberrationB,
			"master: slaying (beasts) b" : MasterworkWeaponProperties.slayingBeastB,
			"master: slaying (celestials) b" : MasterworkWeaponProperties.slayingCelestialB,
			"master: slaying (constructs) b" : MasterworkWeaponProperties.slayingConstructB,
			"master: slaying (dragons) b" : MasterworkWeaponProperties.slayingDragonB,
			"master: slaying (elementals) b" : MasterworkWeaponProperties.slayingElementalB,
			"master: slaying (fey) b" : MasterworkWeaponProperties.slayingFeyB,
			"master: slaying (fiends) b" : MasterworkWeaponProperties.slayingFiendB,
			"master: slaying (giants) b" : MasterworkWeaponProperties.slayingGiantB,
			"master: slaying (monstrosities) b" : MasterworkWeaponProperties.slayingMonstrosityB,
			"master: slaying (oozes) b" : MasterworkWeaponProperties.slayingOozeB,
			"master: slaying (plants) b" : MasterworkWeaponProperties.slayingPlantB,
			"master: slaying (undead) b" : MasterworkWeaponProperties.slayingUndeadB,
			"master: vampiric b" : MasterworkWeaponProperties.vampiricB,
			"master: venom b" : MasterworkWeaponProperties.venomB,
			"legendary: crushing b" : MasterworkWeaponProperties.crushingB,
			"legendary: deadly b" : MasterworkWeaponProperties.deadlyB,
			"legendary: magical b" : MasterworkWeaponProperties.legendarymagicalB,
			"legendary: penetrating b" : MasterworkWeaponProperties.penetratingB,
			"legendary: seeking b" : MasterworkWeaponProperties.seekingB,
			"legendary: threatening b" : MasterworkWeaponProperties.threateningB,
			"legendary: vorpal b" : MasterworkWeaponProperties.vorpalB,
			"legendary: whirlwind b" : MasterworkWeaponProperties.whirlwindB,
 
			"apprentice: aerodynamic c" : MasterworkWeaponProperties.aerodynamicC,
			"apprentice: automatic c" : MasterworkWeaponProperties.automaticC,
			"apprentice: balanced c" : MasterworkWeaponProperties.balancedC,
			"apprentice: concealable c" : MasterworkWeaponProperties.concealableC,
			"apprentice: elegant c" : MasterworkWeaponProperties.elegantC,
			"apprentice: exotic c" : MasterworkWeaponProperties.exoticC,
			"apprentice: extended magazine c" : MasterworkWeaponProperties.extendedmagC,
			"apprentice: finesse c" : MasterworkWeaponProperties.finesseC,
			"apprentice: firearm c" : MasterworkWeaponProperties.firearmC,
			"apprentice: fist c" : MasterworkWeaponProperties.fistC,
			"apprentice: foregrip c" : MasterworkWeaponProperties.foregripC,
			"apprentice: heavy c" : MasterworkWeaponProperties.heavyC,
			"apprentice: light c" : MasterworkWeaponProperties.lightC,
			"apprentice: loading c" : MasterworkWeaponProperties.loadingC,
			"apprentice: martial c" : MasterworkWeaponProperties.martialC,
			"apprentice: parrying c" : MasterworkWeaponProperties.parryingC,
			"apprentice: reach c" : MasterworkWeaponProperties.reachC,
			"apprentice: reload c" : MasterworkWeaponProperties.reloadC,
			"apprentice: returning c" : MasterworkWeaponProperties.returningC,
			"apprentice: scatter c" : MasterworkWeaponProperties.scatterC,
			"apprentice: sighted c" : MasterworkWeaponProperties.sightedC,
			"apprentice: superheavy c" : MasterworkWeaponProperties.superheavyC,
			"apprentice: switch c" : MasterworkWeaponProperties.switchC,
			"apprentice: thrown c" : MasterworkWeaponProperties.thrownC,
			"apprentice: trip c" : MasterworkWeaponProperties.tripC,
			"apprentice: two-handed c" : MasterworkWeaponProperties.twohandedC,
			"apprentice: versatile c" : MasterworkWeaponProperties.versatileC,
			"journeyman: counterweighted c" : MasterworkWeaponProperties.counterweightedC,
			"journeyman: double c" : MasterworkWeaponProperties.doubleC,
			"journeyman: explosive c" : MasterworkWeaponProperties.explosiveC,
			"journeyman: heat c" : MasterworkWeaponProperties.heatC,
			"journeyman: magical c" : MasterworkWeaponProperties.journeymanmagicalC,
			"journeyman: massive c" : MasterworkWeaponProperties.massiveC,
			"journeyman: mounted c" : MasterworkWeaponProperties.mountedC,
			"journeyman: precision c" : MasterworkWeaponProperties.precisionC,
			"journeyman: rocket c" : MasterworkWeaponProperties.rocketC,
			"journeyman: sniper c" : MasterworkWeaponProperties.sniperC,
			"journeyman: tension c" : MasterworkWeaponProperties.tensionC,
			"journeyman: twinshot c" : MasterworkWeaponProperties.twinshotC,
			"master: adamantine c" : MasterworkWeaponProperties.adamantineC,
			"master: blessed c" : MasterworkWeaponProperties.blessedC,
			"master: earthshatter c" : MasterworkWeaponProperties.earthshatterC,
			"master: elemental (acid) c" : MasterworkWeaponProperties.elementalacidC,
			"master: elemental (cold) c" : MasterworkWeaponProperties.elementalcoldC,
			"master: elemental (fire) c" : MasterworkWeaponProperties.elementalfireC,
			"master: elemental (lightning) c" : MasterworkWeaponProperties.elementallightningC,
			"master: elemental (thunder) c" : MasterworkWeaponProperties.elementalthunderC,
			"master: keen c" : MasterworkWeaponProperties.keenC,
			"master: magical c" : MasterworkWeaponProperties.mastermagicalC,
			"master: mithral c" : MasterworkWeaponProperties.mithralC,
			"master: serrated c" : MasterworkWeaponProperties.serratedC,
			"master: slaying c" : MasterworkWeaponProperties.slayingSpecialC,
			"master: slaying (aberrations) c" : MasterworkWeaponProperties.slayingAberrationC,
			"master: slaying (beasts) c" : MasterworkWeaponProperties.slayingBeastC,
			"master: slaying (celestials) c" : MasterworkWeaponProperties.slayingCelestialC,
			"master: slaying (constructs) c" : MasterworkWeaponProperties.slayingConstructC,
			"master: slaying (dragons) c" : MasterworkWeaponProperties.slayingDragonC,
			"master: slaying (elementals) c" : MasterworkWeaponProperties.slayingElementalC,
			"master: slaying (fey) c" : MasterworkWeaponProperties.slayingFeyC,
			"master: slaying (fiends) c" : MasterworkWeaponProperties.slayingFiendC,
			"master: slaying (giants) c" : MasterworkWeaponProperties.slayingGiantC,
			"master: slaying (monstrosities) c" : MasterworkWeaponProperties.slayingMonstrosityC,
			"master: slaying (oozes) c" : MasterworkWeaponProperties.slayingOozeC,
			"master: slaying (plants) c" : MasterworkWeaponProperties.slayingPlantC,
			"master: slaying (undead) c" : MasterworkWeaponProperties.slayingUndeadC,
			"master: vampiric c" : MasterworkWeaponProperties.vampiricC,
			"master: venom c" : MasterworkWeaponProperties.venomC,
			"legendary: crushing c" : MasterworkWeaponProperties.crushingC,
			"legendary: deadly c" : MasterworkWeaponProperties.deadlyC,
			"legendary: magical c" : MasterworkWeaponProperties.legendarymagicalC,
			"legendary: penetrating c" : MasterworkWeaponProperties.penetratingC,
			"legendary: seeking c" : MasterworkWeaponProperties.seekingC,
			"legendary: threatening c" : MasterworkWeaponProperties.threateningC,
			"legendary: vorpal c" : MasterworkWeaponProperties.vorpalC,
			"legendary: whirlwind c" : MasterworkWeaponProperties.whirlwindC,
 
			"apprentice: aerodynamic d" : MasterworkWeaponProperties.aerodynamicD,
			"apprentice: automatic d" : MasterworkWeaponProperties.automaticD,
			"apprentice: balanced d" : MasterworkWeaponProperties.balancedD,
			"apprentice: concealable d" : MasterworkWeaponProperties.concealableD,
			"apprentice: elegant d" : MasterworkWeaponProperties.elegantD,
			"apprentice: exotic d" : MasterworkWeaponProperties.exoticD,
			"apprentice: extended magazine d" : MasterworkWeaponProperties.extendedmagD,
			"apprentice: finesse d" : MasterworkWeaponProperties.finesseD,
			"apprentice: firearm d" : MasterworkWeaponProperties.firearmD,
			"apprentice: fist d" : MasterworkWeaponProperties.fistD,
			"apprentice: foregrip d" : MasterworkWeaponProperties.foregripD,
			"apprentice: heavy d" : MasterworkWeaponProperties.heavyD,
			"apprentice: light d" : MasterworkWeaponProperties.lightD,
			"apprentice: loading d" : MasterworkWeaponProperties.loadingD,
			"apprentice: martial d" : MasterworkWeaponProperties.martialD,
			"apprentice: parrying d" : MasterworkWeaponProperties.parryingD,
			"apprentice: reach d" : MasterworkWeaponProperties.reachD,
			"apprentice: reload d" : MasterworkWeaponProperties.reloadD,
			"apprentice: returning d" : MasterworkWeaponProperties.returningD,
			"apprentice: scatter d" : MasterworkWeaponProperties.scatterD,
			"apprentice: sighted d" : MasterworkWeaponProperties.sightedD,
			"apprentice: superheavy d" : MasterworkWeaponProperties.superheavyD,
			"apprentice: switch d" : MasterworkWeaponProperties.switchD,
			"apprentice: thrown d" : MasterworkWeaponProperties.thrownD,
			"apprentice: trip d" : MasterworkWeaponProperties.tripD,
			"apprentice: two-handed d" : MasterworkWeaponProperties.twohandedD,
			"apprentice: versatile d" : MasterworkWeaponProperties.versatileD,
			"journeyman: counterweighted d" : MasterworkWeaponProperties.counterweightedD,
			"journeyman: double d" : MasterworkWeaponProperties.doubleD,
			"journeyman: explosive d" : MasterworkWeaponProperties.explosiveD,
			"journeyman: heat d" : MasterworkWeaponProperties.heatD,
			"journeyman: magical d" : MasterworkWeaponProperties.journeymanmagicalD,
			"journeyman: massive d" : MasterworkWeaponProperties.massiveD,
			"journeyman: mounted d" : MasterworkWeaponProperties.mountedD,
			"journeyman: precision d" : MasterworkWeaponProperties.precisionD,
			"journeyman: rocket d" : MasterworkWeaponProperties.rocketD,
			"journeyman: sniper d" : MasterworkWeaponProperties.sniperD,
			"journeyman: tension d" : MasterworkWeaponProperties.tensionD,
			"journeyman: twinshot d" : MasterworkWeaponProperties.twinshotD,
			"master: adamantine d" : MasterworkWeaponProperties.adamantineD,
			"master: blessed d" : MasterworkWeaponProperties.blessedD,
			"master: earthshatter d" : MasterworkWeaponProperties.earthshatterD,
			"master: elemental (acid) d" : MasterworkWeaponProperties.elementalacidD,
			"master: elemental (cold) d" : MasterworkWeaponProperties.elementalcoldD,
			"master: elemental (fire) d" : MasterworkWeaponProperties.elementalfireD,
			"master: elemental (lightning) d" : MasterworkWeaponProperties.elementallightningD,
			"master: elemental (thunder) d" : MasterworkWeaponProperties.elementalthunderD,
			"master: keen d" : MasterworkWeaponProperties.keenD,
			"master: magical d" : MasterworkWeaponProperties.mastermagicalD,
			"master: mithral d" : MasterworkWeaponProperties.mithralD,
			"master: serrated d" : MasterworkWeaponProperties.serratedD,
			"master: slaying d" : MasterworkWeaponProperties.slayingSpecialD,
			"master: slaying (aberrations) d" : MasterworkWeaponProperties.slayingAberrationD,
			"master: slaying (beasts) d" : MasterworkWeaponProperties.slayingBeastD,
			"master: slaying (celestials) d" : MasterworkWeaponProperties.slayingCelestialD,
			"master: slaying (constructs) d" : MasterworkWeaponProperties.slayingConstructD,
			"master: slaying (dragons) d" : MasterworkWeaponProperties.slayingDragonD,
			"master: slaying (elementals) d" : MasterworkWeaponProperties.slayingElementalD,
			"master: slaying (fey) d" : MasterworkWeaponProperties.slayingFeyD,
			"master: slaying (fiends) d" : MasterworkWeaponProperties.slayingFiendD,
			"master: slaying (giants) d" : MasterworkWeaponProperties.slayingGiantD,
			"master: slaying (monstrosities) d" : MasterworkWeaponProperties.slayingMonstrosityD,
			"master: slaying (oozes) d" : MasterworkWeaponProperties.slayingOozeD,
			"master: slaying (plants) d" : MasterworkWeaponProperties.slayingPlantD,
			"master: slaying (undead) d" : MasterworkWeaponProperties.slayingUndeadD,
			"master: vampiric d" : MasterworkWeaponProperties.vampiricD,
			"master: venom d" : MasterworkWeaponProperties.venomD,
			"legendary: crushing d" : MasterworkWeaponProperties.crushingD,
			"legendary: deadly d" : MasterworkWeaponProperties.deadlyD,
			"legendary: magical d" : MasterworkWeaponProperties.legendarymagicalD,
			"legendary: penetrating d" : MasterworkWeaponProperties.penetratingD,
			"legendary: seeking d" : MasterworkWeaponProperties.seekingD,
			"legendary: threatening d" : MasterworkWeaponProperties.threateningD,
			"legendary: vorpal d" : MasterworkWeaponProperties.vorpalD,
			"legendary: whirlwind d" : MasterworkWeaponProperties.whirlwindD,
 
			"apprentice: aerodynamic e" : MasterworkWeaponProperties.aerodynamicE,
			"apprentice: automatic e" : MasterworkWeaponProperties.automaticE,
			"apprentice: balanced e" : MasterworkWeaponProperties.balancedE,
			"apprentice: concealable e" : MasterworkWeaponProperties.concealableE,
			"apprentice: elegant e" : MasterworkWeaponProperties.elegantE,
			"apprentice: exotic e" : MasterworkWeaponProperties.exoticE,
			"apprentice: extended magazine e" : MasterworkWeaponProperties.extendedmagE,
			"apprentice: finesse e" : MasterworkWeaponProperties.finesseE,
			"apprentice: firearm e" : MasterworkWeaponProperties.firearmE,
			"apprentice: fist e" : MasterworkWeaponProperties.fistE,
			"apprentice: foregrip e" : MasterworkWeaponProperties.foregripE,
			"apprentice: heavy e" : MasterworkWeaponProperties.heavyE,
			"apprentice: light e" : MasterworkWeaponProperties.lightE,
			"apprentice: loading e" : MasterworkWeaponProperties.loadingE,
			"apprentice: martial e" : MasterworkWeaponProperties.martialE,
			"apprentice: parrying e" : MasterworkWeaponProperties.parryingE,
			"apprentice: reach e" : MasterworkWeaponProperties.reachE,
			"apprentice: reload e" : MasterworkWeaponProperties.reloadE,
			"apprentice: returning e" : MasterworkWeaponProperties.returningE,
			"apprentice: scatter e" : MasterworkWeaponProperties.scatterE,
			"apprentice: sighted e" : MasterworkWeaponProperties.sightedE,
			"apprentice: superheavy e" : MasterworkWeaponProperties.superheavyE,
			"apprentice: switch e" : MasterworkWeaponProperties.switchE,
			"apprentice: thrown e" : MasterworkWeaponProperties.thrownE,
			"apprentice: trip e" : MasterworkWeaponProperties.tripE,
			"apprentice: two-handed e" : MasterworkWeaponProperties.twohandedE,
			"apprentice: versatile e" : MasterworkWeaponProperties.versatileE,
			"journeyman: counterweighted e" : MasterworkWeaponProperties.counterweightedE,
			"journeyman: double e" : MasterworkWeaponProperties.doubleE,
			"journeyman: explosive e" : MasterworkWeaponProperties.explosiveE,
			"journeyman: heat e" : MasterworkWeaponProperties.heatE,
			"journeyman: magical e" : MasterworkWeaponProperties.journeymanmagicalE,
			"journeyman: massive e" : MasterworkWeaponProperties.massiveE,
			"journeyman: mounted e" : MasterworkWeaponProperties.mountedE,
			"journeyman: precision e" : MasterworkWeaponProperties.precisionE,
			"journeyman: rocket e" : MasterworkWeaponProperties.rocketE,
			"journeyman: sniper e" : MasterworkWeaponProperties.sniperE,
			"journeyman: tension e" : MasterworkWeaponProperties.tensionE,
			"journeyman: twinshot e" : MasterworkWeaponProperties.twinshotE,
			"master: adamantine e" : MasterworkWeaponProperties.adamantineE,
			"master: blessed e" : MasterworkWeaponProperties.blessedE,
			"master: earthshatter e" : MasterworkWeaponProperties.earthshatterE,
			"master: elemental (acid) e" : MasterworkWeaponProperties.elementalacidE,
			"master: elemental (cold) e" : MasterworkWeaponProperties.elementalcoldE,
			"master: elemental (fire) e" : MasterworkWeaponProperties.elementalfireE,
			"master: elemental (lightning) e" : MasterworkWeaponProperties.elementallightningE,
			"master: elemental (thunder) e" : MasterworkWeaponProperties.elementalthunderE,
			"master: keen e" : MasterworkWeaponProperties.keenE,
			"master: magical e" : MasterworkWeaponProperties.mastermagicalE,
			"master: mithral e" : MasterworkWeaponProperties.mithralE,
			"master: serrated e" : MasterworkWeaponProperties.serratedE,
			"master: slaying e" : MasterworkWeaponProperties.slayingSpecialE,
			"master: slaying (aberrations) e" : MasterworkWeaponProperties.slayingAberrationE,
			"master: slaying (beasts) e" : MasterworkWeaponProperties.slayingBeastE,
			"master: slaying (celestials) e" : MasterworkWeaponProperties.slayingCelestialE,
			"master: slaying (constructs) e" : MasterworkWeaponProperties.slayingConstructE,
			"master: slaying (dragons) e" : MasterworkWeaponProperties.slayingDragonE,
			"master: slaying (elementals) e" : MasterworkWeaponProperties.slayingElementalE,
			"master: slaying (fey) e" : MasterworkWeaponProperties.slayingFeyE,
			"master: slaying (fiends) e" : MasterworkWeaponProperties.slayingFiendE,
			"master: slaying (giants) e" : MasterworkWeaponProperties.slayingGiantE,
			"master: slaying (monstrosities) e" : MasterworkWeaponProperties.slayingMonstrosityE,
			"master: slaying (oozes) e" : MasterworkWeaponProperties.slayingOozeE,
			"master: slaying (plants) e" : MasterworkWeaponProperties.slayingPlantE,
			"master: slaying (undead) e" : MasterworkWeaponProperties.slayingUndeadE,
			"master: vampiric e" : MasterworkWeaponProperties.vampiricE,
			"master: venom e" : MasterworkWeaponProperties.venomE,
			"legendary: crushing e" : MasterworkWeaponProperties.crushingE,
			"legendary: deadly e" : MasterworkWeaponProperties.deadlyE,
			"legendary: magical e" : MasterworkWeaponProperties.legendarymagicalE,
			"legendary: penetrating e" : MasterworkWeaponProperties.penetratingE,
			"legendary: seeking e" : MasterworkWeaponProperties.seekingE,
			"legendary: threatening e" : MasterworkWeaponProperties.threateningE,
			"legendary: vorpal e" : MasterworkWeaponProperties.vorpalE,
			"legendary: whirlwind e" : MasterworkWeaponProperties.whirlwindE,
			calcChanges : {
				atkAdd : [
					function (fields, v){
						if (/\b[a-e]\b/i.test(v.WeaponTextName) && v.isWeapon){
							
									// add magical property if correct level
									if (classes.known.craftsman.level >= 6 && !/magical/i.test(fields.Description)) fields.Description += (fields.Description ? '; ' : '') + 'Counts as magical';
 
									// remove special properties
									if (/special/i.test(fields.Description)){
										fields.Description = fields.Description.replace(/special[,; ]*/i, "");
										fields.Description_Tooltip = "";
									}
 
									// rebalance assault rifle
									if (/assault rifle/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d6+1";
 
										// seek reload property to change capacity to 10
										var split = fields.Description.split("reload (");
										split[1] = split[1].replace (/\d+/, "");
										fields.Description = split[0] + "reload (10" + split[1];
									}
 
									// rebalance bayonet
									else if (/bayonet/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d6";
										fields.Description = "Finesse, light";
										fields.Description_Tooltip = "";
									}
 
									// rebalance the whip
									else if (/whip/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d6";
									}
 
									// rebalance the boomerang/doomerang/throwing dagger
									else if (/[bd]oomerang/i.test(v.WeaponTextName) || /throwing dagger/i.test(v.WeaponTextName)){
										
										// change the range
										var rangeFld = fields.Range;
										rangeFld = rangeFld.replace("Melee", "");
										rangeFld = rangeFld.replace(",", "");
										rangeFld = rangeFld.replace("(", "");
										rangeFld = rangeFld.replace(")", "");
										rangeFld = rangeFld.replace("ft", "");
										rangeFld = rangeFld.replace(" ", "");
										rangeFld = rangeFld.replace(".", "");
 
										var ranges = rangeFld.split("/");
										if (ranges.length < 2) return;
										var oldN = ranges[0];
										var oldL = ranges[1];
										var newN = parseInt(ranges[0]) + 40;
										var newL = parseInt(ranges[1]) + 120;
										fields.Range = fields.Range.replace(oldN + "/" + oldL, newN + "/" + newL + " ");
 
										// add aerodynamic to the description
										fields.Description += (fields.description == "" ? "" : "; ") + "Aerodynamic"; 
									}
 
									// rebalance the catchpole
									else if (/catchpole/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d8";
										fields.Description = "Reach, two-handed";
										fields.Description_Tooltip = "";
									}
 
									// rebalance the trident
									else if (/trident/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d8";
									}
 
									// rebalance the gatling gun
									else if (/gatling gun/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d8+1";
 
										// seek reload property to change capacity to 10
										var split = fields.Description.split("reload (");
										split[1] = split[1].replace (/\d+/, "");
										fields.Description = split[0] + "reload (10" + split[1];
									}
 
									// rebalance handaxe
									else if (/handaxe/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d4";
									}
 
									// rebalance handgun/revolver
									else if (/handgun/i.test(v.WeaponTextName) || /revolver/i.test(v.WeaponTextName)){
										fields.Range = "50/200 ft";
									}
 
									// rebalance hunting rifle
									else if (/hunting rifle/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d6+1";
									}
 
									// rebalance javelin
									else if (/javelin/i.test(v.WeaponTextName)){
										fields.Range = "Melee, 20/60 ft";
									}
 
									// rebalance lance
									else if (/lance/i.test(v.WeaponTextName)){
										fields.Damage_Die = "1d8";
										fields.Description = "Reach, two-handed";
										fields.Description_Tooltip = "";
									}
 
									// rebalance light cannon
									else if (/\blight cannon\b/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d12+1";
									}
 
									// rebalance longbow
									else if (/longbow/i.test(v.WeaponTextName)){
										fields.Range = "100/400 ft";
									}
 
									// rebalance magnum/explosive magnum
									else if (/magnum/i.test(v.WeaponTextName)){
										fields.Description += (fields.Description == "" ? "" : "; ") + "two-handed";
										fields.Range = "100/400 ft";
									}
 
									// rebalance musket/volley gun
									else if (/musket/i.test(v.WeaponTextName) || /volley gun/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d8+1";
									}
 
									// rebalance parlor gun
									else if (/parlor gun/i.test(v.WeaponTextName)) {
										fields.Damage_Die = "2d4+1";
									}
 
									// rebalance rocket launcher
									else if (/rocket launcher/i.test(v.WeaponTextName)){
										fields.Damage_Die = "2d12+1";
										fields.Description += (fields.Description == "" ? "" : "; ") + "Mounted";
										fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") +
																	   "Mounted: This weapon is normally used while attached to a tripod, vehicle, or other bracing mount. You can mount or unmount this weapon as an action. While it is mounted, it can't be moved. It can only be used to make an attack while unmounted if held by a Medium or larger creature with a Strength score of at least 15.";
									}
						}
					}, "",
					100
				],
				// this calc adds a +1 to hit to a weapon assumed to a masterwork.
				atkCalc : [
					function (fields, v, output){
						if (/\b[a-e]\b/i.test(v.WeaponTextName) && v.isWeapon && !/\+[\d]/.test(v.WeaponTextName)){
							output.extraHit += 1;
						}
					},
					"Any non-magical weapon that I add the letters \"A\" to \"E\" to will become a Masterwork weapon, gaining a +1 bonus to hit. Certain weapons are rebalanced when they become Masterworks: Assault Rifles, Bayonets, Whips, Boomerangs, Doomerangs, Throwing Daggers, Catchpoles, Tridents, Gatling Guns, Handaxes, Handguns, Revolvers, Hunting Rifles, Javelins, Lances, Light Cannons, Longbows, Magnums, Explosive Magnums, Muskets, Volley Guns, Parlor Guns, & Rocket Launchers. The following weapons cannot be modified by masterworks: Blowguns, Bolas, Bombs, Nets.",
					100
				]
			},
			toNotesPage : [{
				name: "Masterwork Properties",
				note: [
					"Masterwork items can be modified with masterwork properties, which come in",
					"4 levels: Apprentice, Journeyman, Master, & Legendary.",
					"I can add any number of apprentice properties to a masterwork weapon, and",
					"up to 3 apprentice properties to a masterwork armor.",
					"I can also add 1 journeyman, 1 master, and 1 legendary property to each",
					"masterwork item.",
					"If I add a master or legendary property to a masterwork item, only I can use it."
				],
				amendTo: "Craftsman's Tools",
			},{
				name: "Modifying Equipment",
				note: [
					"Using Active Crafting, I can modify an item during a long rest:",
					"- Improving Equipment: I can make any nonmagical weapon or suit of armor",
					"  masterwork using 50 gp of materials.",
					"- Adding Masterwork Properties: I can add masterwork properties to",
					"  masterwork items. Adding masterwork properties of Journeyman level or",
					"  higher requires a material cost in gp, and also requires you to be of a high",
					"  enough level in this class, as shown in the Masterwork Properties table below.",
					"  When I learn a new level of masterwork properties, I can apply a property of",
					"  that level to 1 masterwork item at no cost.",
					"  Whenever I modify the properties of a masterwork weapon, I can change the",
					"  damage type of the weapon to bludgeoning, slashing, or piercing, if its",
					"  damage type was one of those types.",
					"- Removing Properties: I can remove any property of a masterwork item, unless",
					"  it is a prerequisite for another masterwork property on the item.",
					"  If I replace a masterwork property with another of the same level, I can do so",
					"  without an additional cost in materials."
				],
				amendTo: "Masterwork Properties",
			},{
				name: "Masterwork Properties Table",
				note: [
					"Property Level             Craftsman Level          Gp Cost",
					"Apprentice                            2nd                        -",
					"Journeyman                          5th                     100 gp",
					"Master                                  11th                    250 gp",
					"Legendary                            17th                    400 gp"
				],
				amendTo: "Modifying Equipment",
			}, {
				name: "Crafting Ability",
				note: [
					"Intelligence is the primary ability I use for crafting items. I use my Intelligence",
					"modifer when setting the saving throw DC for items I craft: 8 + Int Mod + Prof",
					"Bonus."
				],
				amendTo: "Masterwork Properties Table",
			}, {
				name: "Masterwork Weapon Exceptions",
				note: [
					"Weapons that have been masterworked lose their Special properties. The",
					"following weapons' stats are changed upon being modified by the Craftsman:",
					"- Assault rifles' damage dice changes to 2d6 + 1 and gain Reload(10).",
					"- Bayonets' and whips' damages dice change to 1d6.",
					"- Blowguns, bolas, bombs, & nets cannot have masterwork properties.",
					"- Boomerangs, doomerangs, & throwing daggers gain Aerodynamic.",
					"- Catchpoles' & tridents' damage dice change to 1d8.",
					"- Gatling guns' damage dice change to 2d8 + 1, and gain Reload(10).",
					"- Handaxes' damage dice change to 1d4.",
					"- Handguns' & revolvers' range changes to 50/200 ft.",
					"- Hunting rifles' damage dice change to 2d6 + 1.",
					"- Javelins' range changes to 20/60 ft.",
					"- Lances' damage dice changes to 1d8, and gains two-handed.",
					"- Light Cannons' damage dice change to 2d12 + 1.",
					"- Longbows' range changes to 100/400 ft.",
					"- Magnums' & explosive magnums' ranges change to 100/400 ft, and gain",
					"  two-handed.",
					"- Muskets' & volley guns' damage dice change to 2d8 + 1.",
					"- Parlor guns' damage dice change to 2d4 + 1.",
					"- Rocket Launchers' damage dice change to 2d12+1 and gain Mounted."
				],
				amendTo: "Crafting Ability"
			}]
		},
		"tool belt" : {
			name : "Tool Belt", 
			source : ["VSoS", 66],
			minlevel : 2, 
			description : desc([
				"I can use an action to retrieve a piece of non-magical gear worth 50 gp or less from my tool",
				"belt. The item cannot be a weapon/armor/shield/potion, and disappears after a long rest.",
			]),
			usages : "Int mod (minimum of 1) x per ",
			usagescalc : "event.value = Math.max(1, this.getField(\"Int Mod\").value);",
			recovery : "long rest",
			action: ["action", " (Retrieve item)"],
 
			// create masterwork armor properties
			extrachoices: ["Apprentice: Cleated",
						   "Apprentice: Climbing",
						   "Apprentice: Comfortable",
						   "Apprentice: Environmental",
						   "Apprentice: Exotic",
						   "Apprentice: Integrated",
						   "Apprentice: Quick-Change",
						   "Apprentice: Retractable",
						   "Apprentice: Scaled",
						   "Apprentice: Spiked",
						   "Journeyman: Adamantine",
						   "Journeyman: Arcane",
						   "Journeyman: Arrow-Catching",
						   "Journeyman: Diving",
						   "Journeyman: Juggernaut",
						   "Journeyman: Maneuvering",
						   "Journeyman: Mithral",
						   "Journeyman: Resistance, Acid",
						   "Journeyman: Resistance, Cold",
						   "Journeyman: Resistance, Fire",
						   "Journeyman: Resistance, Force",
						   "Journeyman: Resistance, Lightning",
						   "Journeyman: Resistance, Necrotic",
						   "Journeyman: Resistance, Poison",
						   "Journeyman: Resistance, Radiant",
						   "Journeyman: Resistance, Thunder",
						   "Master: Animated",
						   "Master: Cloaking",
						   "Master: Clockwork",
						   "Master: Glamoured",
						   "Master: Trollskin",
						   "Master: Winged",
						   "Legendary: Colossal",
						   "Legendary: Etherealness",
						   "Legendary: Fleet",
						   "Legendary: Immortal",
						   "Legendary: Mirrored",
						   "Legendary: Spellguard",
						   "Legendary: Warding",
						],
			extraname: "Masterwork Armor Properties",
			"apprentice: cleated" : {
				name: "Apprentice: Cleated",
				source: ["VSoS", 86],
				additional: "Prereq: Medium/Heavy",
				prereqeval: function (v) {
					if (/Apprentice: Cleated/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					} 
				},
				description: desc([
					"Movement against my will while wearing this armor is reduced by 10 feet."
				])
			},
			"apprentice: climbing" : {
				name: "Apprentice: Climbing",
				source: ["VSoS", 86],
				additional: "Prereq: Exotic, Light",
				prereqeval: function (v) {
					if (/Apprentice: Climbing/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"While wearing this armor, I gain a climbing speed equal to my walking speed, as long as",
					"I have 1 hand free."
				]),
				speed: { climb : {spd: "walk"}}
			},
			"apprentice: comfortable" : {
				name: "Apprentice: Comfortable",
				source: ["VSoS", 86],
				additional: "Prereq: None",
				prereqeval: function (v) {
					if (/Apprentice: Comfortable/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"I can sleep in this armor with no ill effect.",
				]),
			},
			"apprentice: environmental" : {
				name: "Apprentice: Environmental",
				source: ["VSoS", 86],
				additional: "Prereq: None",
				prereqeval: function (v) {
					if (/Apprentice: Environmental/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"While wearing this armor, I can tolerate temperatures within -100°F and 200°F.",
				]),
			},
			"apprentice: exotic" : {
				name: "Apprentice: Exotic",
				source: ["VSoS", 86],
				additional: "Prereq: Not exotic",
				prereqeval: function (v) {
					if (/Apprentice: Exotic/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"This armor becomes exotic armor, and it has a +1 bonus to AC.",
				]),
				extraAC: [{
					mod: 1,
					name: "Exotic",
					magic: false,
					text: "This armor has the Exotic masterwork property and grants a +1 bonus to its wearer's AC.",
					stopeval : function(v){
						return (!/masterwork/i.test(What("AC Armor Description")));
					}
				}]
			},
			"apprentice: integrated" : {
				name: "Apprentice: Integrated",
				source: ["VSoS", 86],
				additional: "Prereq: Exotic",
				prereqeval: function (v) {
					if (/Apprentice: Integrated \(Masterwork Armor/g.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"I can integrate 1 weapon/two non-two-handed weapons into this armor. While holding an",
					"integrated weapon, I can't be disarmed of it. I can switch which weapons are integrated",
					"during a long rest."
				]),
			},
			"apprentice: quick-change" : {
				name: "Apprentice: Quick-Change",
				source: ["VSoS", 86],
				additional: "Prereq: None",
				prereqeval: function (v) {
					if (/Apprentice: Quick-Change/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
				description: desc([
					"I can don or doff this suit of armor as an action."
				]),
				action: ["action", "Don/Doff Quick-Change Armor"]
			},
			"apprentice: retractable" : {
				name: "Apprentice: Retractable",
				source: ["VSoS", 86],
				additional: "Prereq: Exotic, Medium/Heavy",
				prereqeval: function (v) {
					if (/Apprentice: Retractable/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
 
				description: desc([
					"While wearing this armor, I can don/doff the armor's retractable shield as a bonus action."
				]),
				action: ["bonus action", "Don/Doff Retractable Shield"],
			},
			"apprentice: scaled" : {
				name: "Apprentice: Scaled",
				source: ["VSoS", 86],
				additional: "Prereq: Exotic, Light",
				prereqeval: function (v) {
					if (/Apprentice: Scaled/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
 
				description: desc([
					"This armor's AC increases by 3. My Dex mod can only add a max of +2 to this armor."
				]),
				extraAC: [{
					mod: "3",
					name: "Scaled",
					magic: false,
					text: "This armor has the Scaled masterwork property and grants a +3 bonus to its wearer's AC. The wearer's Dex mod can only add +2 to this armor's AC.",
					stopeval : function(v){
						return (!/masterwork/i.test(What("AC Armor Description")) || (v.mediumArmor || v.heavyArmor));
					}
				},{
					mod: "2-Dex",
					name: "Scaled Restriction",
					magic: false,
					text: "This armor has the Scaled masterwork property and grants a +3 bonus to its wearer's AC. The wearer's Dex mod can only add +2 to this armor's AC.",
					stopeval : function(v){
						return (!/masterwork/i.test(What("AC Armor Description")) || (v.mediumArmor || v.heavyArmor) || What('Dex Mod') <= 2);
					}
				}]
			},
			"apprentice: spiked" : {
				name: "Apprentice: Spiked",
				source: ["VSoS", 86],
				additional: "Prereq: Heavy",
				prereqeval: function (v) {
					if (/Apprentice: Spiked/.test(What('Extra.Notes'))) return true;
 
					else {
						var foundAppArmor = What('Extra.Notes').match(/Apprentice: .+ \(Masterwork Armor/g);
 
						if (foundAppArmor) return foundAppArmor.length < 3;
						else return true;
					}
				},
 
				description: desc([
					"While wearing this armor, creatures touching me take 1d4 + my STR mod piercing damage at",
					"the start of my turn."
				])
			},
			"journeyman: adamantine" : {
				name: "Journeyman: Adamantine",
				source: ["VSoS", 86],
				additional: "Prereq: Exotic, Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Adamantine \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, critical hits against me become normal hits.",
				])
			},
			"journeyman: arcane" : {
				name: "Journeyman: Arcane",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Arcane \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"When I apply this armor property, I gain 2 wizard cantrips of my choice.",
					"Intelligence is my spellcasting modifier for these cantrips.",
				]),
				spellcastingBonus: [{
					name: "Arcane Masterwork Armor Property",
					times: 2,
					firstCol: "AA",
					"class" : ["wizard"],
					level: [0, 0],
					spellcastingAbility: 4,
				}]
			},
			"journeyman: arrow-catching" : {
				name: "Journeyman: Arrow-Catching",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic, Medium/Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Arrow-Catching \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"When a creature makes a ranged attack against a target within 5 feet of me, I can use my",
					"reaction to become the target of the attack instead."
				]),
				action: ["reaction", "Arrow-Catch"]
			},
			"journeyman: diving" : {
				name: "Journeyman: Diving",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Diving \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I gain a swim speed equal to my walking speed. The armor contains",
					"8 hrs of air that I can use to breath normally underwater or in a vacuum, and am immune to",
					"the effects of inhaled poisons. The armor's air is replenished on a long rest."
				]),
				speed: { swim : {spd: "walk"}},
				savetxt: {
					immune: ["inhaled poisons while breathing via armor"],
				}
			},
			"journeyman: juggernaut" : {
				name: "Journeyman: Juggernaut",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic, Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Juggernaut \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I count as an obstacle providing three-quarters cover.",
					"I must have a Strength score of 16 or higher to wear this armor."
				]),
			},
			"journeyman: maneuvering" : {
				name: "Journeyman: Maneuvering",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic, Light/Medium",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Maneuvering \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"As a reaction when I fall or as a bonus action on my turn, I can pull myself to a target location",
					"that I can see and is no further than my walking speed, as long as the target location can hold",
					"my weight. This movement doesn't provoke opportunity attacks.",
					"I must have a Strength score of 16 or higher to wear this armor."
				]),
				action: [["bonus action", "Grappling Hook"], ["reaction", "Grappling Hook (when falling)"]]
			},
			"journeyman: mithral" : {
				name: "Journeyman: Mithral",
				source: ["VSoS", 87],
				additional: "Prereq: Exotic, Medium/Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Mithral \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"This armor weighs half as much as it normally does, has no Strength requirement, and doesn't",
					"impose disadvantage on Dexterity (Stealth) checks. If the armor is Medium armor, the max",
					"Dex mod bonus I can add to my AC increases to 3, instead of 2, and the armor can easily be",
					"worn hidden under normal clothing."
				]),
				extraAC: [{
					mod: 1,
					name: "Mithral",
					text: "This armor has the Mithral masterwork property. If it is medium armor, the maximum Dexterity modifier you can apply to your AC increases to 3, instead of 2.",
					magic: false,
					stopeval: function (v) {
						return !/masterwork/i.test(What("AC Armor Description")) || (!v.mediumArmor || v.heavyArmor) || What('Dex Mod') <= 2;
					}
				}]
			},
			"journeyman: resistance, acid" : {
				name: "Journeyman: Acid Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Acid Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to acid damage."
				]),
				dmgres: [["Acid", "Acid (from armor)"]],
			},
			"journeyman: resistance, cold" : {
				name: "Journeyman: Cold Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Cold Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to cold damage."
				]),
				dmgres: [["Cold", "Cold (from armor)"]],
			},
			"journeyman: resistance, fire" : {
				name: "Journeyman: Fire Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Fire Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to fire damage."
				]),
				dmgres: [["Fire", "Fire (from armor)"]],
			},
			"journeyman: resistance, force" : {
				name: "Journeyman: Force Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Force Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to force damage."
				]),
				dmgres: [["Force", "Force (from armor)"]],
			},
			"journeyman: resistance, lightning" : {
				name: "Journeyman: Lightning Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Lightning Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to lightning damage."
				]),
				dmgres: [["Lightning", "Lightning (from armor)"]],
			},
			"journeyman: resistance, necrotic" : {
				name: "Journeyman: Necrotic Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Necrotic Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to necrotic damage."
				]),
				dmgres: [["Necrotic", "Necrotic (from armor)"]],
			},
			"journeyman: resistance, poison" : {
				name: "Journeyman: Poison Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Poison Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to poison damage."
				]),
				dmgres: [["Poison", "Poison (from armor)"]],
			},
			"journeyman: resistance, radiant" : {
				name: "Journeyman: Radiant Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Radiant Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to radiant damage."
				]),
				dmgres: [["Radiant", "Radiant (from armor)"]],
			},
			"journeyman: resistance, thunder" : {
				name: "Journeyman: Thunder Resistance",
				source: ["VSoS", 88],
				additional: "Prereq: None",
				prereqeval: function (v) { return classes.known.craftsman.level >= 5 && (/Journeyman: Thunder Resistance \(Masterwork Armor/.test(What('Extra.Notes')) || !/Journeyman: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have resistance to thunder damage."
				]),
				dmgres: [["Thunder", "Thunder (from armor)"]],
			},
			"master: animated" : {
				name: "Master: Animated",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Heavy; 1 / long rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Animated \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"As an action, I can doff the armor, which animates as per the animate objects spell. The",
					"armor's AC equals my own when I wore it, has 40 hit points, and uses my own melee attack",
					"bonus. If I was holding a weapon when the armor animated, it can make 1 attack with the",
					"weapon instead of using its slam attack. The armor remains animated for 1 minute, or until it",
					"reaches 0 hitpoints, or I dismiss it as an action. When I dismiss it, if it is within 30 feet of me, I",
					"can command it to return to me and don the armor as part of the same action."
				]),
				action: [["action", "Animate/Dismiss Armor"], ["bonus action", "Command Armor"]],
				extraLimitedFeatures: [{
					name: "Animate Armor",
					usages: 1,
					recovery: "long rest",
				}]
			},
			"master: cloaking" : {
				name: "Master: Cloaking",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Light; 1 / short rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Cloaking \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I can cast the invisibility spell at will."
				]),
				action: [["action", "Activate Cloaking"],],
				extraLimitedFeatures: [{
					name: "Activate Cloaking",
					usages: 1,
					recovery: "short rest",
				}],
				spellcastingBonus: [{
					name: "Cloaking Armor Property",
					spells: ["invisibility"],
					selection: ["invisibility"],
					firstCol: "oncesr"
				}],
				spellChanges: {
					"invisibility": {
						components: "",
						changes: "When I cast this spell using my armor, I can cast it at will once per short rest.",
					}
				}
			},
			"master: clockwork" : {
				name: "Master: Clockwork",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Clockwork \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, my jump distance is tripled, and I have advantage on Strength",
					"(Athletics) checks (except grapples), and when I take the Dodge action, my AC becomes 22, if",
					"it was lower."
				])
			},
			"master: glamoured" : {
				name: "Master: Glamoured",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Glamoured \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"This armor doesn't impose disadvantage on Dexterity (Stealth) checks. I can use a bonus",
					"action to make the armor appear as a normal set of clothing or some other kind of armor,",
					"retaining its normal bulk and weight. The illusion lasts until I use this ability again or remove",
					"the armor."
				])
			},
			"master: trollskin" : {
				name: "Master: Trollskin",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Medium; 1 / short rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Trollskin \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I can use a bonus action to regain hit points equal to 1d10 + my",
					"craftsman level."
				]),
				action: ["bonus action", "Activate Trollskin"]
			},
			"master: winged" : {
				name: "Master: Winged",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Light",
				prereqeval: function (v) { return classes.known.craftsman.level >= 11 && (/Master: Winged \(Masterwork Armor/.test(What('Extra.Notes')) || !/Master: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I can use a bonus action extend/contract wings. While wings are",
					"extended, I gain a fly speed equal to my walking speed."
				]),
				speed: { fly : {spd: "walk"}},
				action: ["bonus action", "Extend/Contract Wings"]
			},
			"legendary: colossal" : {
				name: "Legendary: Colossal",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic, Heavy",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Colossal \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, my weight is multiplied by 8, my size increases by 1 category, I have",
					"advantage on Strength saves & checks, and my weapons deal an extra +1d4 damage."
				]),
				savetxt: {
					text: ["advantage on STR saves while wearing Colossal armor"]
				},
				calcChanges: {
					atkAdd: [
						function (fields, v) {
							if (v.isWeapon) {
								fields.Description += (fields.Description == "" ? "" : "; ") + "Colossal Armor +1d4 dmg";
							}
						}
					]
				}
			},
			"legendary: etherealness" : {
				name: "Legendary: Etherealness",
				source: ["VSoS", 88],
				additional: "Prereq: Exotic; 1 / long rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Etherealness \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I can use my action to gain the effect of the etherealness spell, which lasts for 10 minutes or until I use my action to end it."
				]),
				action: ["action", "Activate Etherealness"],
				extraLimitedFeatures: [{
					name: "Activate Etherealness",
					usages: 1,
					recovery: "long rest"
				}],
				spellcastingBonus: [{
					name: "Etherealness Armor Property",
					spells: ["etherealness"],
					selection: ["etherealness"],
					firstCol: "oncelr"
				}],
				spellChanges: {
					"etherealness" : {
						duration: "10 min",
						description: "Go to Ethereal Plane; move there, but able to perceive 60 ft into the normal plane",
						components: "",
						changes: "When I cast Etherealness through my armor, it lasts up to 10 minutes instead of 8 hours."
					}
				}
			},
			"legendary: fleet" : {
				name: "Legendary: Fleet",
				source: ["VSoS", 89],
				additional: "Prereq: Exotic, Light",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Fleet \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, my speed increases by 10 feet, I have advantage on initiative rolls,",
					"and opportunity attacks against me are made with disadvantage."
				]),
				speed: { allModes: "+10" }
			},
			"legendary: immortal" : {
				name: "Legendary: Immortal",
				source: ["VSoS", 89],
				additional: "Prereq: Exotic, Medium/Heavy; 3/long rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Immortal \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"When I am reduced to 0 hit points but not killed outright, I can make a DC 13 Constitution",
					"save, dropping to 1 hit point on a success. I also have advantage on death saving throws."
				]),
				extraLimitedFeatures: [{
					name: "Immortal",
					usages: 3,
					recovery: "long rest"
				}],
				savetxt: { adv_vs: ["death saves"] }
			},
			"legendary: mirrored" : {
				name: "Legendary: Mirrored",
				source: ["VSoS", 89],
				additional: "Prereq: Exotic, Light; 1 / short rest",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Mirrored \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I can cast mirror image at will as a bonus action."
				]),
				extraLimitedFeatures: [{
					name: "Activate Mirror Image",
					usages: 1,
					recovery: "short rest"
				}],
				spellcastingBonus: [{
					name: "Mirrored Armor Property",
					spells: ["mirror image"],
					selection: ["mirror image"],
					firstCol: "oncesr"
				}],
				spellChanges: {
					"mirror image" : {
						time: "1 bns",
						components: "",
						changes: "When I cast this spell through my armor, I can cast it as a bonus action."
					}
				},
				action: ["bonus action", "Activate Mirror Image"]
			},
			"legendary: spellguard" : {
				name: "Legendary: Spellguard",
				source: ["VSoS", 89],
				additional: "Prereq: Exotic",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Spellguard \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"While wearing this armor, I have advantage on saves against spells."
				]),
				savetxt: { adv_vs: ["spells"] }
			},
			"legendary: warding" : {
				name: "Legendary: Warding",
				source: ["VSoS", 89],
				additional: "Prereq: Exotic, Medium",
				prereqeval: function (v) { return classes.known.craftsman.level >= 17 && (/Legendary: Warding \(Masterwork Armor/.test(What('Extra.Notes')) || !/Legendary: .+ \(Masterwork Armor/.test(What('Extra.Notes'))); },
				description: desc([
					"As a bonus action, I gain temporary hit points equal to half my craftsman level."
				]),
				action: ["bonus action", "Activate Warding"]
			},
 
			// this calcchange exists to:
			// resolve any +\d bonuses from damage die steps
			// determine new versatile/scatter/massive damage dice
			calcChanges: {
				atkCalc: [
					function(fields, v, output){
						if (/\+\d+/.test(output.die)){
							// seek out bonuses in the die string and add them to extrahit
							var bonus = output.die.match(/\+\d+/);
							output.extraDmg = parseInt(bonus[0]);
							output.die = output.die.replace(/\+\d+/, "");
						}
					}, "", 199
				],
				atkAdd: [
					function (fields, v){
 
						// make sure this is working:
						// resolve foregrip range
						if (/foregrip/i.test(fields.Description)){
							// calculate the range, increase by 50
							var newRange = ClassList["craftsman"].CalcNewRange(fields.Range, 50);
							fields.Description = fields.Description.replace("Foregrip", "Foregrip (" + newRange + " ft)");
						}
 
						// resolve versatile dice
						if (/versatile \(\d+d\d+(\+\d+)*\)/i.test(fields.Description)){
							var newVersDie = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);
							fields.Description = fields.Description.replace(/versatile \(\d+d\d+(\+\d+)*\)/i, "Versatile (" + newVersDie + ")");
						}
 
						// resolve scatter damage dice
						if (/scatter/i.test(fields.Description)){
							var scatterDie = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 2);
							fields.Description = fields.Description.replace("Scatter", "Scatter (" + scatterDie + ")");
						}
 
						// add dice from massive
						if (/massive/i.test(fields.Description)){
							// add extra damage dice
							var dieSplit = fields.Damage_Die.split("d");
							dieSplit[0] = parseInt(dieSplit[0]) + ((classes.attacks - 1) * 2);
							fields.Damage_Die = dieSplit[0] + "d" + dieSplit[1];
						}
					}, "", 198
				]
			}
		},
		"subclassfeature3" : {
			name : "Artisan's Guild",
			source : ["VSoS", 66],
			minlevel : 3,
			description : desc([
				"Choose an Artisan's Guild you strive to gather under and put it in the \"Class\" field",
				"Choose either Arcane Maester, Arimger, Gearsmith, Gunsmith, Thunderlord, Trapsmith, or Weaponsmith.",
			]),
		},
		"folded steel" : {
			name : "Folded Steel",
			source : ["VSoS", 66],
			minlevel : 6,
			description : desc([
				"Masterwork and exotic weapons I craft count as magical", 
			]),
			calcChanges : {
				atkAdd : [ function (fields, v) {
				},"Any non-magical weapon that I add the letters \"A\" to \"E\" to will become magical."]
			},
		},
		"eye for quality" : {
			name : "Eye for Quality",
			source : ["VSoS", 67],
			minlevel : 9,
			description : desc([
				"I can cast the identify spell at will. When cast this way, I learn the item's market value in gp.",
			]),
			spellcastingBonus: [{
				name: "Eye for Quality",
				spells: ["identify"],
				selection: ["identify"],
				firstCol: "atwill"
			}],
			spellChanges: {
				"identify": {
					components: "",
					description: "1 magic item or magic-imbued crea/obj; learn properties, how to use, spells affecting it, market value",
					changes: "When cast using this feature, I also appraise the item, learning its market value in gold pieces."
				}
			},
			action: ["action", " (Identify)"]
		},
		"flawless construction" : {
			name : "Flawless Construction",
			source : ["VSoS", 67],
			minlevel : 13,
			description : desc([
				"My masterwork items don't show signs of aging, resist all damage, and can only be",
				"destroyed by effects that destroy magic items."
			]),
		},
		"uncanny tool belt" : {
			name : "Uncanny Tool Belt",
			source : ["VSoS", 67],
			minlevel : 15, 
			description : desc([
				"I can use an action to retrieve a common/uncommon magical item from my tool belt.",
				"It remains in my possession until I take a long rest.",
			]),
			usages : 1,
			recovery : "long rest",
			action : ["action", " (Retrive magic item)"]
		},
		"magnum opus" : {
			name : "Magnum Opus",
			source : ["VSoS", 67],
			minlevel : 20,
			description : desc([
				"I craft a single very rare/legendary magic item, attuned always & only to me while alive.",
				"It takes me 30 days to do this, I can only do this once. It doesn't count towards my max # of",
				"attunements. I can use a bonus action to call this item to my hand or body."
			]),
			action: ["bonus action", "Call Magnum Opus"]
		},
	},
}

// * Arcane Maester Craftsman Subclass
AddSubClass("craftsman","arcane maester",{
	regExpSearch : /^(?=.*arcane)(?=.*maester).*$/i,
	subname : "Arcane Maesters' Guild",
	source : ["VSoS", 67],
	fullname : "Arcane Maester",
	features : {
		"subclassfeature3" : { 
			name : "Magic Item Crafting",
			source : ["VSoS", 67],
			minlevel : 3,
			description : desc([
				"Using Active Crafting, I can craft magic items. See the notes pages for details."
			]),
			toNotesPage: [{
				name: "Magic Item Crafting",
				note: [
					"Using Active Crafting, I can the magic items below, as long as I meet the",
					"craftsman level requirement.",
					"I may only have a certain number of magic items crafted at one time:",
					"- 5 items from the 3rd level list",
					"- 3 items from the 7th level list",
					"- 3 items from the 10th level list",
					"- 2 items from the 14th level list",
					"In the process of creating a new magic item, I may dismantle a crafted magic",
					"item in order to build a new one from the same category."
				]
			},{
				name: "3rd Level Magic Item Crafting List",
				amendTo: "Magic Item Crafting",
				source : ["VSoS", 68],
				note: [
					"Cost to craft: 100 gp",
					"Bag of Holding                                            Decanter of Endless Water",
					"Eyes of Minute Seeing                                 Folding Boat",
					"Goggles of Night                                         Handy Haversack",
					"Helm of Comprehending Languages          Immovable Rod",
					"Lantern of Revealing                                   Periapt of Health",
					"Rope of Climbing                                        Wand of Secrets",
				]
			}]
		},
		"subclassfeature3.1" : {
			name : "Apprentice Property",
			source : ["VSoS", 68],
			minlevel : 3,
			description : "\n    I learn a new masterwork property: Enchanted.",
			extraname: "Apprentice Masterwork Weapon Property",
			"enchanted": {
				name: "Enchanted",
				additional : "Prereq: None",
				source : ["VSoS", 68],
				description: "\n    I use Intelligence for this weapon's attack and damage rolls.",
			},
			autoSelectExtrachoices: [{
				extrachoice: "enchanted"
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v){
						if (/enchanted/i.test(v.WeaponTextName) && v.isWeapon)
							{
								// treat attack like masterwork. add magical property if correct level
								if (classes.known.craftsman.level >= 6 && !/magical/i.test(fields.Description)) fields.Description += (fields.Description ? '; ' : '') + 'Counts as magical';
								
								if (fields.Mod == 1){
									if (What('Int Mod') >= What('Str Mod')) fields.Mod = 4;
								}
								else if (fields.Mod == 2){
									if (What('Int Mod') >= What('Dex Mod')) fields.Mod = 4;
								}
								else if (fields.Mod == 3){
									if (What('Int Mod') >= What('Con Mod')) fields.Mod = 4;
								}
								else if (fields.Mod == 5){
									if (What('Int Mod') >= What('Wis Mod')) fields.Mod = 4;
								}
								else if (fields.Mod == 6){
									if (What('Int Mod') >= What('Cha Mod')) fields.Mod = 4;
								}
							}
					}, "If the word \"Enchanted\" is included in the name of a weapon attack, it is treated as having the Enchanted masterwork property, using Intelligence as the ability modifier.",
				],
				atkCalc : [
					function (fields, v, output){
						// only add the masterwork +1 if it fits and hasn't already been added by a slot application
						if (/enchanted/i.test(v.WeaponTextName) && !/\b[a-e]\b/i.test(v.WeaponTextName) && v.isWeapon && !/\+[\d]/.test(v.WeaponTextName)){
							output.extraHit += 1;
						}
					}
				]
			}
		},
		"subclassfeature7" : {
			name : "Instant Attunement",
			source : ["VSoS", 68],
			minlevel : 7,
			description : desc([
				"I can use my action to attune/end attunement to a magic item.",
			]),
			usages: "Int mod",
			usagescalc: "event.value = What('Int Mod');",
			recovery: "short rest",
			action: ["action", " (attune/end)"],
			toNotesPage: [{
				name: "7th Level Magic Item Crafting List",
				amendTo: "3rd Level Magic Item Crafting List",
				source : ["VSoS", 68],
				note: [
					"Cost to craft: 250 gp",
					"Boots of Elvenkind                                      Circlet of Blasting",
					"Cloak of Elvenkind                                      Efficient Quiver",
					"Eyes of Charming                                        Pipes of Haunting",
					"Portable Hole                                              Ring of Jumping",
					"Ring of Water Walking                                Wand of Magic Missiles",
					"Wind Fan",
				]
			}]
		},
		"subclassfeature10" : {
			name : "Ephemeral Enchantment",
			source : ["VSoS", 69],
			minlevel : 10,
			description : desc([
				"I can spend 10 minutes to enchant 1 nonmagical weapon, or a short/long rest to enchant up",
				"to 6 nonmagical weapons. For the next 8 hours, each enchanted weapon counts as magical.",
			]),
			toNotesPage: [{
				name: "10th Level Magic Item Crafting List",
				amendTo: "7th Level Magic Item Crafting List",
				source : ["VSoS", 68],
				note: [
					"Cost to craft: 500 gp",
					"Boots of Striding and Springing                 Eversmoking Bottle",
					"Eyes of the Eagle                                        Gloves of Missile Snaring",
					"Hat of Disguise                                           Helm of Telepathy",
					"Periapt of Proof Against Poison                 Periapt of Wound Closure",
					"Ring of Feather Falling                                Ring of Mind Shielding",
					"Slippers of Spider Climbing                        Winged Boots",
				]
			}]
		},
		"subclassfeature14" : {
			name : "Sever Connection",
			source : ["VSoS", 69],
			minlevel : 14,
			description : desc([
				"As a reaction to being attacked or forced to make a save, I can end my attunement to 1 magic",
				"item. Until the start of my next turn, I gain a bonus to my AC and saves equal to my Int mod. ",
				"The total number of magic items I can attune to is reduced by 1 until I finish a short/long rest.",
			]),
			usages : 1, 
			recovery : "short rest",
			action : ["reaction", ""],
			toNotesPage: [{
				name: "14th Level Magic Item Crafting List",
				amendTo: "10th Level Magic Item Crafting List",
				source : ["VSoS", 68],
				note: [
					"Cost to craft: 1000 gp",
					"Belt of Dwarvenkind                                    Boots of Levitation",
					"Boots of Speed                                            Cape of the Mountebank",
					"Cloak of the Bat                                           Gem of Seeing",
					"Horn of Blasting                                           Instant Fortress",
					"Iron Bands of Binding                                  Ring of Free Action",
					"Ring of the Ram                                          Ring of X-Ray Vision",
					"Wand of Enemy Detection                          Wand of Fear"
				]
			}]
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 69],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork armor property, which I can immediately apply: Resonant."
			]),
			extraname: "Legendary Masterwork Armor Property",
			"resonant": {
				name: "Resonant",
				source : ["VSoS", 69],
				additional : "Prereq: Exotic",
				description: desc([
					"By spending a short rest focusing on a magic item while wearing this armor, I can attune the",
					"item directly to the armor. I can use the magic item as though I were attuned to it while I am",
					"wearing this armor. I can attune up to 2 items to the armor, and end an item's attunement to",
					"the armor by spending another short rest focused on the item."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "resonant"
			}]
		},
	}
})

// * Armiger Craftsman Subclass
AddSubClass("craftsman","armiger",{
	regExpSearch : /^(?=.*armiger).*$/i,
	subname : "Armigers' Guild",
	source : ["VSoS", 69],
	fullname : "Armiger",
	features : {
		"subclassfeature3" : { 
			name : "Fighting Style",
			source : ["VSoS", 69],
			minlevel : 3,
			description : desc([
				"Choose a Fighting Style using the \"Choose Feature\" button above",
			]),
			choices: ["Defense", "Protection"],
			"defense" : FightingStyles.defense,
			"protection" : FightingStyles.protection,
		},
		"subclassfeature7" : {
			name : "Shining Steel",
			source : ["VSoS", 69],
			minlevel : 7,
			description : desc([
				"When I roll initiative and am not surprised, Creatures I choose within 60 ft of me that can see",
				"me must succeed a Wisdom save vs my Masterwork save DC or have disadvantage on any",
				"attack roll not targetting me on the 1st round of combat. A creature with an Int score of 3 or",
				"less automatically fail this save."
			])
		},
		"subclassfeature10" : {
			name : "Armor Reinforcement",
			source : ["VSoS", 69],
			minlevel : 10,
			description : desc([
				"I can spend 10 minutes with 1 suit of armor or a short/long rest with up to 6 suits of armor to",
				"reinforce them. This lasts until a creature wearing the armor is hit.",
			]),
			extraname: "Armiger's Guild 10",            
			"reinforcement options" : {
				name: "Armor Reinforcement",
				source : ["VSoS", 69],
				description: desc ([
					"I can spend 10 minutes with 1 suit of armor or a short/long rest with up to 6 suits of armor to",
					"reinforce them. This lasts until a creature wearing the armor is hit.",
					"I have two reinforcement techniques:",
					"- Adamant: When a creature wearing this armor takes damage, it reduces the amount it",
					"takes by 1d8.",
					"- Banded: A creature wearing this armor has a +1 bonus to Armor Class."
				])
			},
			autoSelectExtrachoices : [{
				extrachoice: "reinforcement options"
			}]
		},
		"subclassfeature14" : {
			name : "Fortify",
			source : ["VSoS", 69],
			minlevel : 14,
			description : desc([
				"I can use a bonus action to gain resistance to all damage until the end of my next turn.",
			]),
			usages : 1, 
			recovery : "short rest",
			action : ["bonus action", ""],
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 69],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork armor property, which I can immediately apply: Invincible.",
			]),
			extraname: "Legendary Masterwork Armor Property",
			"invincible": {
				name: "Invincible",
				source : ["VSoS", 69],
				additional : "Prereq: Exotic",
				description: desc([
					"While I am wearing this armor, bludgeoning, piercing, and slashing damage I take from",
					"nonmagical attacks are reduced by 5."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "invincible"
			}]
		}
	}
});
	
// * Mechanaut Craftsman Subclass
AddSubClass("craftsman","mechanaut",{
	regExpSearch : /^(?=.*mechanaut).*$/i,
	subname : "Mechanauts' Guild",
	source : ["VSoS", 73],
	fullname : "Mechanaut",
	features : {
		"subclassfeature3" : { 
			name : "Mechanaut's Apparatus",
			source : ["VSoS", 73],
			minlevel : 3,
			description : desc([
				"I complete the frame of a Mechanaut's Apparatus. See notes & companion pages.",
			]),
			toNotesPage: [{
				name: "Mechanaut's Apparatus",
				note: [
					"I can model my apparatus after any Beast, or as a Humanoid figure. The",
					"statistics of my apparatus is given in the companion pages.",
					"",
					"Customizing the Apparatus",
					"My apparatus comes with two installed masterwork weapons, which I can",
					"modify with masterwork properties or replace with different weapons when I",
					"finish a long rest. Only one installed weapon can be ranged. Furthermore, I can",
					"only load or reload an installed ranged weapon by using my action while I am",
					"inside the apparatus (or two actions if the weapon has the Mounted property).",
					"My apparatus is always proficient with its installed weapons, and can use",
					"masterwork weapons with Master and Legendary properties.",
					"",
					"Repairing the Apparatus",
					"When my apparatus drops to 0 hit points, it can't move or act, but can be",
					"repaired. I can spend 1 minute restoring the apparatus's ability to move at half",
					"speed, which it loses if it takes damage again before it is repaired. I can repair",
					"my apparatus at the end of a short rest by spending my Hit Dice, causing it to",
					"regain hit points as if it had taken a short rest. When I finish a long rest, I can",
					"repair my apparatus, causing it to regain all its hit points. I am always",
					"considered to have enough materials to repair my apparatus. If my apparatus is",
					"lost, I can build a new one for 400 gp.",
					"",
					"Attacking with the Apparatus",
					"The apparatus attacks with its integrated weapons as if I was wielding them,",
					"and uses my Dexterity or Intelligence modifier (my choice) for its attack and",
					"damage rolls, using the same modifier for both. When I take the Attack action,",
					"it makes the same number of attacks I normally would.",
				],
				popupName: "Mechanaut's Apparatus Notes",
				source: ["VSoS", 73]
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v){
						if (/\bintegrated\b/i.test(v.WeaponTextName) && v.isWeapon){
							var maxMod = What("Dex Mod") < What("Int Mod") ? 4 : 2;
							fields.Mod = maxMod;
						} 
					}, "If a weapon attack includes the word \"Integrated\" in its name, it is treated as a weapon that has been integrated into a Mechanaut's Apparatus, using my Dexterity or Intelligence modifier for its attack and damage rolls, whichever is higher."
				]
			},
			creaturesAdd: ["Mechanaut's Apparatus"],
			creatureOptions: [{
				name: "Mechanaut's Apparatus",
				source: ["VSoS", 74],
				size: 2,
				type: "Construct",
				companion: "mechanaut's apparatus",
				companionApply: "mechanaut's apparatus",
				alignment: "Unaligned",
				ac: 13,
				hp: 30,
				hd: ["",""],
				hdLinked: ["craftsman"],
				speed: "35 ft",
				proficiencyBonus: 2,
				challengeRating: "",
				scores: [17, 17, 18, 1, 3, 1],
				saves: ["", "", "", "", "", ""],
				senses: "Blindsight 120 ft (blind beyond this radius)",
				attacksAction: 1,
				attacks: [{
					name: "Ballista Cannon",
					ability: 4,
					damage: [5,10, "piercing"],
					range: "5x60 ft line",
					abilitytodamage: false,
					isDC: true,
					description: "Dex save, half damage on save",
					modifiers: ["-Int+oInt", ""],
				}],
				damage_immunities : "poison, psychic",
				condition_immunities: "blinded, charmed, deafened, frightened, paralyzed, petrified, poisoned",
				traits: [{
					name : "Cockpit Cover",
					description: desc ([
						"Any creature inside the apparatus is granted total cover",
						"from outside effects, but takes half the damage taken by",
						"the apparatus."
					])
				}, {
					name : "Double Two-Handed",
					description: desc ([
						"The apparatus has two mechanical arms, each of which",
						"can hold one installed weapon. Each mechanical arm is",
						"powerful enough to wield weapons as if with two hands."
					])
				}],
				header: "Apparatus",
				calcChanges : {
					hp : function (totalHD, HDobj, prefix) {
						if (!classes.known.craftsman) return;
						conMod = 0;
						HDobj.fixed = 10 * classes.known.craftsman.level;
						HDobj.max = 10 * classes.known.craftsman.level;
					}
				},
				eval: function(prefix, lvl){
					//AddString(prefix + 'Cnote.Left', "◆ .");
					Value(prefix + "Comp.Use.Attack.1.Weapon Selection", "");
				},
			}]
		},
		"subclassfeature3.1" : { 
			name : "Cockpit Upgrade",
			source: ["VSoS", 74],
			minlevel : 3,
			description : desc([
				"Choose a cockpit upgrade for your apparatus by using the \"Choose Feature\" button above.",
			]),
			choices: ["Comfortable Amenities", "Ejector Seat", "Loudspeaker"],
			"comfortable amenities" : {
				name: "Comfortable Amenities Cockpit Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"I can sleep in the apparatus without ill effect.",
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Comfortable Amenities:\n   A creature can sleep in the apparatus\n   without ill effect.";
						aFnc(prefix + "Comp.Use.Features", str, true);
					},
					"Mechanaut's Apparatuses I create are comfortable enough to sleep in without ill effect."
					]
				}           
			},
			"ejector seat" : {
				name: "Ejector Seat Cockpit Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"Exiting the apparatus costs no movement.",
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Ejector's Seat:\n   Exiting the apparatus costs no\n   movement.";
						aFnc(prefix + "Comp.Use.Features", str, true);

					},
					"Mechanaut's Apparatuses I create can be exited with no movement cost."
					]
				}
			},
			"loudspeaker" : {
				name: "Loudspeaker Cockpit Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"The apparatus can amplify my voice up to 3 times louder than normal.",
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Loudspeaker:\n   The apparatus can amplify the piloting\n  creature's voice up to 3 times louder\n   than normal.";
						aFnc(prefix + "Comp.Use.Features", str, true);

					},
					"Mechanaut's Apparatuses I create can amplify the piloting creature's voice up to 3 times louder than normal."
					]
				}
			}
		},
		"subclassfeature7" : {
			name : "Limb Upgrade",
			source: ["VSoS", 74],
			minlevel : 7,
			description : desc([
				"Choose a Limb Upgrade for your apparatus by using the \"Choose Feature\" button above.",
			]),
			choices: ["Arachnotron Legs", "Heavy Suspension", "Telescopic Frame"],
			"arachnotron legs" : {
				name: "Arachnotron Legs Limb Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"The apparatus has the Arachnotron Legs Limb Upgrade. See companion pages."
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Arachnotron Legs:\n   The apparatus can move up, down, and\n   across vertical surfaces/ceilings.";
						var spdStr = "climb 35 ft";
						aFnc(prefix + "Comp.Use.Features", str, true);
						aFnc(prefix + "Comp.Use.Speed", spdStr, true);
					},
					"Mechanaut's Apparatuses I create can move up, down, and across vertical surfaces/ceilings, and have a climb speed equal to their walk speed."
					]
				}
			},
			"heavy suspension" : {
				name: "Heavy Suspension Limb Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"The apparatus has the Heavy Suspension Limb Upgrade. See companion pages."
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Heavy Suspension:\n   The apparatus's jump distance triples. It\n   takes no damage from falling a distance\n   of less than 100 feet.";
						aFnc(prefix + "Comp.Use.Features", str, true);
					},
					"Mechanaut's Apparatuses I create have a tripled jump distance, and take no damage from falling a distance of less than 100 feet."
					]
				}
			},
			"telescopic frame" : {
				name: "Telescopic Frame Limb Upgrade",
				source: ["VSoS", 74],
				description: desc([
					"The apparatus has the Telescopic Frame Limb Upgrade. See companion pages."
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Telescopic Frame:\n   While no one is inside the apparatus, its\n   craftsman can use their bonus action to\n   command it to collapse down to Medium\n   size, or return to Large size. While\n   collapsed, the apparatus can't be\n   entered.";
						aFnc(prefix + "Comp.Use.Features", str, true);
					},
					"Mechanaut's Apparatuses I create can be collapsed to Medium Size or returned to Large, when I command them using a bonus action. A collapsed apparatus can't be entered."
					]
				}
			}
		},
		"subclassfeature10" : {
			name : "Passenger Seat",
			source: ["VSoS", 74],
			minlevel : 10,
			description : desc([
				"The apparatus gains a Passenger Seat. See companion pages.",
			]),
			calcChanges: {
				companionCallback : [function(prefix, oCrea, bAdd, sCompType){
					if (sCompType !== "mechanaut's apparatus") return;
					var aFnc = bAdd ? AddString : RemoveString;
					var str = "\u25C6 Passenger Seat:\n   The apparatus gains a second seat, which takes an\n   action to enter/exit. A creature can't pilot the apparatus\n   from this seat, but gains total cover from outside effects.";
					aFnc(prefix + "Comp.Use.Traits", str, true);
				},
				"Mechanaut's Apparatuses I create gain a second seat, which takes an action to enter/exit."
				]
			}
		},
		"subclassfeature14" : {
			name : "Attachment Upgrade",
			source: ["VSoS", 74],
			minlevel : 14,
			description : desc([
				"Choose an Attachment Upgrade for your apparatus by using the \"Choose Feature\" button",
				"above.",
			]),
			choices: ["Ballista Cannon", "Gyro Module", "Rocket Engine"],
			"ballista cannon" : {
				name: "Ballista Cannon Attachment Upgrade",
				source: ["VSoS", 75],
				description: desc([
					"As an action, I can fire the apparatus's integrated heavy ballista. See companion pages.",
				]),
				calcChanges: {
					creatureCallback: [
						function(prefix, oCrea, bAdd) {
							if (!/\bmechanaut's apparatus\b/i.test(oCrea.name)) return;              
							if (bAdd) { AddWeapon("Ballista Cannon", "", prefix); }
							else {
								for (i = 1; i < 3; ++i)
								{
									if (/Ballista Cannon/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection"))){
										Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
									}
								}
							}
						},
						"My Mechanaut's Apparatus gains a Ballista Cannon."],
				},
				action: ["action", "Fire Heavy Ballista"]
			},
			"gyro module" : {
				name: "Gyro Module Attachment Upgrade",
				source: ["VSoS", 75],
				description: desc([
					"The apparatus gains the Gyro Module Attachment Upgrade. See companion pages.",
				]),
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Gyro Module:\n   A piloting creature can use their action to make an attack using an integrated weapon against any number\n   of creatures within 5 feet of the apparatus, making a separate attack roll against each target. The apparatus\n   cannot move between these attacks.";
						aFnc(prefix + "Cnote.Left", str, true);
					},
					"Mechanaut's Apparatuses I create gain the Gyro Module attachment upgrade: piloting creatures can use their action to make an attack using an integrated weapon against any number of creatures within 5 feet of the apparatus, making a separate attack roll against each target. The apparatus cannot move between these attacks."
					],
					atkAdd: [
						function (fields, v){
							if (/\bintegrated\b/i.test(v.WeaponTextName) && v.isMeleeWeapon){
								fields.Description += (fields.Description == "" ? "" : "; ") + "Gyro hits any # of crea in range";
								fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Gyro Module: piloting creatures can use their action to make an attack using an integrated weapon against any number of creatures within 5 feet of the apparatus, making a separate attack roll against each target. The apparatus cannot move between these attacks.";
							} 
						}, "If a weapon attack includes the word \"Integrated\" in its name, it includes text and a tooltip on the use of the Gyro Module feature."
					]
				}
			},
			"rocket engine" : {
				name: "Rocket Engine Attachment Upgrade",
				source: ["VSoS", 75],
				description: desc([
					"As a bonus action, I can light the apparatus's rocket engine. See companion pages.",
				]),
				action: ["bonus action", "Light Rocket Engine"],
				calcChanges: {
					companionCallback : [function(prefix, oCrea, bAdd, sCompType){
						if (sCompType !== "mechanaut's apparatus") return;
						var aFnc = bAdd ? AddString : RemoveString;
						var str = "\u25C6 Rocket Engine:\n   A piloting creature can use their bonus action to propel the apparatus up to 30 feet in a straight line in a\n   chosen direction. If the apparatus makes a melee attack immediately after this move, the attack gains\n   advantage. On hit, this attack knocks the target prone OR pushes it up to 10 feet away from the apparatus.";
						aFnc(prefix + "Cnote.Left", str, true);
					},
					"Mechanaut's Apparatuses I create gain the Rocket Engine attachment upgrade: A piloting creature can use their bonus action to light the apparatus's installed rocket engine, propelling the apparatus up to 30 feet in a straight line in a chosen direction. If the apparatus makes a melee attack immediately after this movement, the attack is made with advantage. On a hit, this attack knocks the target prone or pushes it up to 10 feet away from the apparatus (piloting creature's choice)."
					],
				}
			}
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source: ["VSoS", 75],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork weapon property, which I can immediately apply: Pneumatic.",
			]),
			extraname: "Legendary Masterwork Weapon Property",
			"pneumatic" : {
				name: "Pneumatic",
				source: ["VSoS", 75],
				additional : "Prereq: Exotic, Melee",
				description: desc([
					"If this weapon is installed in a mechanaut's apparatus and it deals more than one die of",
					"damage on a hit, when I roll damage, I can maximize one of the weapon's damage dice",
					"instead of rolling it.",
				])
			},
			calcChanges: {
				atkCalc: [
					function (fields, v, output) {
						if (/\bpneumatic\b/i.test(v.WeaponTextName) && /\bintegrated\b/i.test(v.WeaponTextName) && v.isMeleeWeapon && (/bexotic\b/i.test(v.theWea.type) || /\bexotic\b/i.test(fields.Description))) {

							// get dice
							var dieSplit = output.die.split("d");

							if (dieSplit[0] > 1) {
								var newDie = (dieSplit[0] - 1) + "d" + dieSplit[1];
								output.die = newDie;
								output.extraDmg += parseInt(dieSplit[1]);
							}
						}
					}, "If the words \"Pneumatic\" & \"Integrated\" is included in the name of an exotic melee attack, it is treated as having the Pneumatic property, maximizing one of the damage die rolled.",
					199
				],
			},
			autoSelectExtrachoices: [{
				extrachoice: "pneumatic"
			}]
		}   
	}
});
	
// * Calibaron Craftsman Subclass
AddSubClass("craftsman","Calibaron",{
	regExpSearch : /^(?=.*calibaron).*$/i,
	subname : "Calibarons' Guild",
	source : ["VSoS", 70],
	fullname : "Calibaron",
	features : {
		"subclassfeature3" : { 
			name : "Fighting Style",
			source : ["VSoS", 70],
			minlevel : 3,
			description : desc([
				"Choose a Fighting Style using the \"Choose Feature\" button above",
			]),
			choices: ["Akimbo", "Bullseye", "Duelist", "Shotgunner"],
			"akimbo": {
				name: "Akimbo Fighting Style",
				source : ["VSoS", 71],
				description: desc ([
					"When I engage in two-weapon fighting with firearms, I don't take a penalty to the damage of",
					"of the second attack."
				])
			},
			"bullseye" : {
				name: "Bullseye Fighting Style",
				source : ["VSoS", 71],
				description: desc ([
					"I gain a +2 bonus to ranged attack rolls I make with firearms with the Sighted property or",
					"have a normal range of 80 or longer. This style doesn't stack with the Archery fighting style."
				]),
				calcChanges: {
					atkCalc : [
						function (fields, v, output) {

							// get the weapon's range
							var rangeFld = fields.Range.match(/\d+\/\d+/);
							var ranges = rangeFld[0].split("/");

							// add to hit bonus
							if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && (/\bsighted\b/i.test(fields.Description) || ranges[0] >= 80)) {
								output.extraHit += 2;
							}
						}, "I gain a +2 bonus to ranged attack rolls I make with firearms with the Sighted property or have a normal range of 80 or longer. This style doesn't stack with the Archery fighting style.",
					]
				}
			},
			"duelist" : {
				name: "Duelist Fighting Style",
				source : ["VSoS", 71],
				description: desc ([
					"Once per round. while wielding a firearm in one hand and nothing in the other, if I make a",
					"ranged weapon attack roll and exceed the target's AC by 5+, I deal 1 extra die of",
					"weapon damage."
				]),
				calcChanges: {
					atkAdd: [
						function (fields, v) {
							if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && !/\btwo-handed\b/i.test(fields.Description)) {
								// get the die type
								var dieSplit = fields.Damage_Die.split("d");
								if (dieSplit.length < 2) return;
								var die = "1d" + dieSplit[1];
								fields.Description += (fields.Description == "" ? "" : "; ") + "Duelist +" + die + " extra dmg";
							}
						}, "Once per round, when wielding a firearm in one hand and nothing in the other, I deal 1 extra die of weapon damage if my attack roll exceeds the target's AC by 5 or more.",
					]
				}
			},
			"shotgunner" : {
				name: "Shotgunner Fighting Style",
				source : ["VSoS", 71],
				description : desc ([
					"When I hit with a ranged weapon attack using a firearm that has the Scatter property, I can",
					"reroll the lowest damage die. I must use the new roll."
				]),
				calcChanges : {
					atkAdd: [
						function (fields, v){
							if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && /\bscatter\b/i.test(fields.Description)) {
								fields.Description += (fields.Description == "" ? "" : "; ") + "reroll lowest dmg die";
							}
						}, "When I hit with a ranged weapon attack using a firearm that has the Scatter property, I can reroll the lowest damage die.",
					]
				}
			}
		},
		"subclassfeature7" : {
			name : "Apprentice Property",
			source : ["VSoS", 71],
			minlevel : 7,
			description : desc([
				"I learn a new masterwork weapon property: Suppressor.",
			]),
			extraname: "Apprentice Masterwork Weapon Property",
			"suppressor": {
				name: "Suppressor",
				source : ["VSoS", 71],
				additional : "Prereq: Ranged, Firearm",
				description: desc([
					"Attacks with this weapon are only audible out to 10 feet, and release a puff of smoke to mask",
					"the light given off by the blast."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "suppressor"
			}],
			calcChanges: {
				atkAdd : [
					function(fields, v){
						if (/\bsuppressor\b/i.test(v.WeaponTextName) && (/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description))) {
							fields.Description += (fields.Description == "" ? "" : "; ") + "only audible 10 ft & no light";
							fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Suppressor: Attacks with this weapon make only a low thud or a quiet clink, audible out to 10 feet, and release a puff of smoke to mask the light given off by the blast.";
						}
					}, "If a firearm contains the word \"Suppressor\" in its name, the Suppressor property details are added in its tooltip.",
					106
				]
			}
		},
		"subclassfeature10" : {
			name : "Ballistic Calibration",
			source : ["VSoS", 71],
			minlevel : 10,
			description : desc([
				"I can spend 10 min with a ranged weapon or a short/long rest with up to 6 ranged weapons",
				"to calibrate them. A weapon loses its calibration once it hits a target. See notes pages."
			]),
			extraname: "Calibarons' Guild 10",
			"calibrations" : {
				name : "Ballistic Calibration",
				source : ["VSoS", 71],
				description: desc ([
					"I can spend 10 min with a ranged weapon or a short/long rest with up to 6 ranged weapons",
					"to calibrate them. A weapon loses its calibration once it hits a target.",
					"I have two calibration options:",
					"- Ballistic: This weapon deals an extra die of damage on a hit.",
					"- Calibrated: This weapon scores a critical hit on a roll of 18-20."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "calibrations"
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (v.isRangedWeapon) {
							// find out what damage die we are using
							var die = fields.Damage_Die.match(/(?:d)\d+/i);
							fields.Description += (fields.Description == "" ? "" : "; ") +
								"Ballistic (+1" + die[0] + " dmg); Calibrated (crit on 18-20)";
						}
					}, "Ranged weapons I have calibrated gain either the Ballistic or Calibrated property, until they hit a target. Ballistic adds one extra damage die to the damage of the attack, and Calibrated allows the weapon to crit on a roll of 18-20.",
				]
			}
		},
		"subclassfeature14" : {
			name : "Underbarrel Grenade Launcher",
			source : ["VSoS", 71],
			minlevel : 14,
			description : desc([
				"I can use my action to attach/detach a grenade launcher to a two-handed firearm. If the",
				"launcher is lost or stolen, I can build a new one during a long rest with 100 gp in materials. I",
				"can use my action to fire the launcher. I can only fire the launcher once per short/long rest."
			]),
			weaponOptions: [{
				name: "Underbarrel Grenade Launcher",
				source : ["VSoS", 71],
				regExpSearch: /\bunderbarrel grenade launcher\b/i,
				type: "AlwaysProf",
				ability: 4,
				abilitytodamage: false,
				damage: [8,6, "Fire"],
				range: "60 ft, 10 ft rad",
				description: "Dexterity save; must be attached to two-handed firearm; save half damage",
				dc: true,
				isNotWeapon: true,
				selectNow : true
			}],
			action: [["action", "Attach/Detach Grenade Launcher"], ["action", "Fire Grenade Launcher"]],
			usages: 1,
			recovery: "short rest"
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 71],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork weapon property, which I can immediately apply: Burst Fire.",
			]),
			extraname: "Legendary Masterwork Weapon Property",
			"burst fire" : {
				name: "Burst Fire",
				source : ["VSoS", 71],
				additional : "Prereq: Exotic, Firearm, Automatic",
				description: desc ([
					"When I take the attack action to make an attack with this firearm, I can use my bonus action",
					"to make an additional attack with it."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "burst fire"
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (/\bburst fire\b/i.test(v.WeaponTextName) && (/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && /\bautomatic\b/i.test(fields.Description) && (/\bexotic\b/i.test(v.theWea.type) || /\bexotic\b/i.test(fields.Description))) {
							fields.Description += (fields.Description == "" ? "" : "; ") + "bonus action extra attack";
						}
					}, "When the phrase \"Burst Fire\" is included in the name of an exotic automatic firearm attack, it gains the Burst Fire property.",
					106
				]
			}
		},
	}
});
	
// * Forgeknight craftsman subclass
AddSubClass("craftsman","forgeknight",{
	regExpSearch: /^(?=.*forgeknight).*$/i,
	subname: "Forgeknights' Guild",
	source: ["VSoS", 71],
	fullname: "Forgeknight",
	features: {
		"subclassfeature3" : {
			name: "Portable Forge",
			source: ["VSoS", 71],
			minlevel: 3,
			description: desc([
				"I gain a portable forge. While carrying the forge, I gain resistance to fire damage, can cast the",
				"mending and produce flame cantrips using Int as my spellcasting ability, and can choose 4",
				"weapons I wield to deal fire damage instead of their normal damage type. If the forge is",
				"lost/destroyed, I can build a new one during a long rest with 100 gp of materials."
			]),
			dmgres: ["Fire", "Fire (with forge)"],
			spellcastingBonus: [{
				name: "Portable Forge",
				spells: ["mending", "produce flame"],
				selection: ["mending", "produce flame"],
				times: 2,
				spellcastingAbility: 4,             
			}]
		},
		"subclassfeature7" : {
			name: "Forgefired Armory",
			source: ["VSoS", 72],
			minlevel: 7,
			description: desc([
				"I can add the Explosive and Heat masterwork properties to my exotic melee weapons. I can",
				"add the Heat property even if it already has another Journeyman property. When I hit with a",
				"melee weapon that has the Explosive property, the explosion doesn't harm me or the weapon.",
			]),
			extraname: "Journeyman Masterwork Weapon Property",
			"armoryheat": {
				name: "Heat",
				source: [["VSoS", 72], ["VSoS", 82]],
				additional: ["Prereq: Exotic, Melee"],
				description: desc ([
					"This weapon gains the Heat property and its damage dice increase by 1 step.",
				])
			},
			"armoryexplosive": {
				name: "Explosive",
				source: [["VSoS", 72], ["VSoS", 82]],
				additional: ["Prereq: Exotic, Melee"],
				description: desc ([
					"This weapon gains the Explosive property and its damage dice decrease by 1 step. If this",
					"weapon dealt bludgeoning, piercing, or slashing damage, it deal s fire damage instead."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "armoryheat"
			}, {
				extrachoice: "armoryexplosive"
			}],
			calcChanges: {
				atkAdd: [
					function(fields, v){
						if (v.isWeapon && (/\bexotic\b/i.test(v.theWea.type) || /\bexotic\b/i.test(fields.Description)) && v.isMeleeWeapon){
							if (/\bheat\b/i.test(v.WeaponTextName)){

								// add magical property if correct level
								if (classes.known.craftsman.level >= 6 && !/magical/i.test(fields.Description)) fields.Description += (fields.Description ? '; ' : '') + 'Counts as magical';

								// increase damage
								var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, true, 1);                       
								fields.Damage_Die = newDice;

								// add heat to description & tooltip
								if (!/\bheat\b/i.test(fields.Description))
									fields.Description += (fields.Description ? "; " : "") + "Heat";
								fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
																							"Heat: This weapon gains 1 heat point whenever an attack is made with it, and it loses 1 heat point at the start of each of your turns. If the weapon has 3 heat points, it overheats and loses all heat points. An overheated weapon can't be used to make an attack again until the end of your next turn.";
							}
							if (/\bexplosive\b/i.test(v.WeaponTextName)){

								// add magical property if correct level
								if (classes.known.craftsman.level >= 6 && !/magical/i.test(fields.Description)) fields.Description += (fields.Description ? '; ' : '') + 'Counts as magical';

								// decrease damage
								var newDice = ClassList["craftsman"].CalcDieStep(fields.Damage_Die, false, 1);                      
								fields.Damage_Die = newDice;

								// change damage type
								if (/bludgeoning/i.test(fields.Damage_Type) || /piercing/i.test(fields.Damage_Type) || /slashing/i.test(fields.Damage_Type))
									fields.Damage_Type = "Fire";

								// add explosive to description & tooltip
								if (!/explosive/i.test(fields.Description))
									fields.Description += (fields.Description ? "; " : "") + "Explosive";
									fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + 
																							"Explosive: When this weapon hits a target, it explodes in a 15-foot diameter sphere. Each creature other than the target within the blast radius (for a Medium or smaller target, each creature within 5 feet of it) must make a Dexterity saving throw, taking half the damage rolled on a failed save or no damage on a successful one.";
							}
						}
					}, "If the words \"Explosive\" and/or \"Heat\" are included in the name of an exotic melee weapon, they are treated as Masterwork weapons with the Explosive and/or Heat properties.",
					102
				],
				atkCalc: [
					function(fields, v, output){
						if ((/\bexotic\b/i.test(v.theWea.type) && /\bexotic\b/i.test(fields.Description)) && v.isMeleeWeapon && (/\bheat\b/i.test(v.WeaponTextName) || /\bexplosive\b/i.test(v.WeaponTextName)) && (!/\b[a-e]\b/i.test(v.WeaponTextName) || !/\+[\d]/.test(v.WeaponTextName))) {
							output.extraHit += 1;
						}
					}, "", 102
				]
			},
		},
		"subclassfeature10" : {
			name: "Superheated Weapons",
			source: ["VSoS", 72],
			minlevel: 10,
			description: desc([
				"I can heat 1 weapon/2 pieces of ammunition as an action, or up to 10 weapons/20 pieces of",
				"ammunition over 1 min. Heated items must be metal, and stay heated for 10 min. The first",
				"time a heated weapon/ammunition hits a target, it deals an extra 1d6 fire damage."
			]),
			calcChanges: {
				atkAdd: [
					function(fields, v){
						if (v.isWeapon){
							fields.Description += (fields.Description == "" ? "" : "; ") + "Superheated +1d6 fire";
						}
					}, "Weapons and ammunition that I superheat deal +1d6 fire damage the first time they hit a target."
				]
			}
		},
		"subclassfeature14" : {
			name : "Fire Burst",
			source: ["VSoS", 72],
			minlevel: 14,
			limfeaname: "Fire Burst (Fireball)",
			description: desc([
				"While holding my forge, I can cast the fireball spell, centered on myself, without using a spell",
				"slot or material components, using my Masterwork save DC. I take no damage from this spell."
			]),
			spellcastingBonus: [{
				name: "Fire Burst",
				spells: ["fireball"],
				selection: ["fireball"],
				spellcastingAbility: 4,
				firstCol: "oncesr",
				allowUpCasting: false,
			}],
			spellChanges: {
				"fireball" : {
					components: "",
					range: "Self",
					changes: "When I cast this spell via the Fire Burst feature, the spell is centered on myself, and I take no damage from it."
				}
			},
			usages: 1,
			recovery: "short rest",
			action: ["action", "Fire Burst"]
		},
		"subclassfeature18": {
			name : "Legendary Property",
			source: ["VSoS", 72],
			minlevel: 18,
			description: desc ([
				"I learn a new masterwork weapon property, which I can immediately apply: Forge Plate."
			]),
			extraname: "Legendary Masterwork Armor Property",
			"forge plate" : {
				name: "Forge Plate",
				source : ["VSoS", 72],
				additional : "Prereq: Exotic, Heavy",
				description: desc ([
					"While wearing this armor, I am immune to fire damage. When I take the Dash action, I can",
					"cast the wall of fire spell without using a spell slot or spell components as part of that action.",
					"The wall appears at the end of your turn, and follows a path along the ground over which I",
					"moved on my turn, up to 60 feet."
				]),

			},
			action: ["action", "Forge Plate (Dash & Wall of Fire)"],
			autoSelectExtrachoices: [{
				extrachoice: "forge plate"
			}],
			extraLimitedFeatures: [{
				name: "Activate Forge Plate",
				usages: 1,
				recovery: "short rest"
			}],
			savetxt: {
				immune: ["fire damage while wearing Forge Plate armor"]
			},
			spellcastingBonus: [{
				name: "Forge Plate",
				spells: ["wall of fire"],
				selection: ["wall of fire"],
				spellcastingAbility: 4,
				firstCol: "oncesr",
				allowUpCasting: false,
			}],
			spellChanges: {
				"wall of fire" : {
					components: "",
					range: "",
					time: "",
					description: "60×1×20ft (l×w×h) all in & 10 ft on 1 side 5d8 Fire dmg; save halves; see book",
					changes: "When cast via the Forge Plate Masterwork armor property, the wall appears at the end of the caster's turn, and follows a path along the ground over which the caster moved that turn."
				}
			}
		}
	}
})

// * Thunderlord Craftsman Subclass
AddSubClass("craftsman","thunderlord",{
	regExpSearch : /^(?=.*thunderlord).*$/i,
	subname : "Thunderlords' Guild",
	source : ["VSoS", 75],
	fullname : "Thunderlord",
	spellcastingAbility : 4,
	spellcastingFactor : 4,
	features : {
		"subclassfeature3" : { 
			name : "Power Cell",
			source : ["VSoS", 75],
			minlevel : 3,
			description : desc([
				"I have a power cell and connected thunder gauntlets. I can replace these items over a long",
				"rest with 100 gp of materials. While carrying these items, I have a number of charge points",
				"equal to half my craftsman level rounded up. I regain all expended charge points on a short",
				"or long rest. Once per turn when I hit a creature with an attach that deals lightning damage, I",
				"can expend charge points up to my proficiency bonus to enhance the attack in various ways",
				"listed in the notes pages."
			]),
			additional: levels.map(function (n) { return Math.ceil(n/2) + " charge points, " + (n < 4 ? "2" : n < 9 ? "3" : n < 13 ? "4" : n < 17 ? "5" : "6") + " max points/turn"; }),
			extraLimitedFeatures: [{
				name : "Charge Points",
				usagescalc: "event.value = Math.ceil(classes.known.craftsman.level/2);",
				recovery: "short rest"
			}],
			"powercell" : {
				name: "Power Cell Effects",
				source : ["VSoS", 75],
				description: desc([
					"Once per turn when I hit a creature with an attack that deals lightning damage, I can spend",
					"a number of charge points (up to my Proficiency bonus) to create one of the following effects:",
					"- Arc: A number of creatures equal to the number of charge points I expended that are within",
					"15 ft of the target of your attack must succeed on a Dex save vs my Masterwork save DC or",
					"take lightning damage equal to 1d6 + my Int modifier.",
					"- Discharge: The target takes an extra 1d6 lightning damage per charge point expended.",
					"- Jolt: The target can't take reactions until the start of my next turn."
				])
			},
			calcChanges: {
				atkAdd: [
					function (fields, v){
						if (!v.isDC && /\blightning\b/i.test(fields.Damage_Type)){
							fields.Description += (fields.Description == "" ? "" : "; ") + "Arc 1d6 + Int mod; Discharge +1d6/cpoint; Jolt";
							fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Arc: Lightning arcs to nearby targets. Spend charge points to choose a number of creatures equal to the number of charge points you expended that are within 15 feet of the target of your attack. Each of the chosen creatures must succeed on a Dexterity saving throw against your Masterwork save DC or take lightning damage equal to 1d6 + your Intelligence modifier.";
							fields.Description_Tooltip += "\nDischarge: I can spend charge points to make the creature I hit take an extra 1d6 lightning damage for each charge point expended.";
							fields.Description_Tooltip += "\nJolt: I can spend a charge point to make the creature I hit unable to take reactions until the start of my next turn.";
						}
					}, "I can spend charge points to add effects to my Lightning attacks.",
					101
				]
			},
			autoSelectExtrachoices: [{
				extrachoice: "powercell"
			}]
		},
		"subclassfeature3.1" : {
			name: "Shock",
			source : ["VSoS", 76],
			minlevel: 3,
			description: desc ([
				"While I am carrying my power cell and have at least 1 unspent charge point, weapons I wield",
				"can deal lightning damage instead of their normal damage type, and I know the shocking",
				"grasp and spare the dying cantrips. Intelligence is my spellcasting ability for these cantrips."
			]),
			spellcastingBonus : [{
				name : "Shock",
				spells : ["shocking grasp"],
				selection : ["shocking grasp"]
			},  {
				name : "Shock",
				spells : ["spare the dying"],
				selection : ["spare the dying"]
			}],
			calcChanges: {
				atkAdd: [
					function (fields, v){
						if (v.isWeapon){
							fields.Damage_Type = "Lightning";
						} 
					}, "While I am carrying my power cell and have at least 1 charge point, weapons I wield can deal lightning damage instead of their normal damage type."
				]
			}
		},
		"subclassfeature7" : {
			name : "Lightning Rod",
			source : ["VSoS", 76],
			minlevel : 7,
			description : desc([
				"While I am carrying my power cell, I have resistance to lightning damage. I can regain 2",
				"expended charge points as a reaction to taking lightning damage from a hostile creature",
				"while wearing my gauntlets."
			]),
			action : ["reaction", " (Regain 2 Charge Points)"],
			dmgres: ["Lightning", "Lightning (with Power Cell)"],
		},
		"subclassfeature10" : {
			name : "Static Charge",
			source : ["VSoS", 76],
			minlevel : 10,
			description : desc([
				"I can spend 10 minutes with a weapon or suit of armor, or a short or long rest with up to 6",
				"different weapons or suits of armor to apply a charge to them, granting them one of thee",
				"following appropriate properties. Unexpended charges dissipate after 1 hour. See notes for properties."
			]),
			extraname: "Static Charge Property",
			"chargedarmor": {
				name: "Charged Armor",
				description: desc ([
					"When I take damage from a melee attack, I can use my reaction to expend the charge,",
					"dealing 1d8 lightning damage to the creature that hit me."
				])
			},
			"chargedweapon": {
				name: "Charged Weapon",
				description: desc ([
					"When I hit a creature with an attack using this weapon, I can expend the charge to deal 1d6",
					"lightning damage to the target."
				])
			},
			action: ["reaction", "Charged Armor (1d8)"],
			calcChanges: {
				atkAdd: [
					function(fields, v){
						if (v.isWeapon)
						{
							fields.Description += (fields.Description == "" ? "" : "; ") + "Charged +1d6 lightning";
							fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Charged Weapon: If I charged this weapon using my Static Charge feature within the last hour, On a hit, I can expend that charge to deal an extra 1d6 lightning damage to the target.";
						}
					}, "If I charged this weapon using my Static Charge feature within the last hour, On a hit, I can expend that charge to deal an extra 1d6 lightning damage to the target."
				]
			},
			autoSelectExtrachoices : [{
				extrachoice: "chargedarmor"
			}, {
				extrachoice: "chargedweapon"
			}]
		},
		"subclassfeature14" : {
			name : "High Voltage",
			source : ["VSoS", 76],
			minlevel : 14,
			description : desc([
				"While carrying my power cell, I can expend 5 charge points to cast the lightning bolt spell",
				"without using a spell slot or material components. This spell uses your Masterwork save DC."
			]),
			action : ["action", "Lightning Bolt (5 charge points)"],
			spellcastingBonus : [{
				name : "High Voltage",
				spells : ["lightning bolt"],
				selection : ["lightning bolt"],
				firstCol: "5C"
			}],
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 76],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork weapon property, which I can immediately apply: Electroshock.",
			]),
			extraname: "Legendary Masterwork Weapon Property",
			"electroshock" : {
				name: "Electroshock",
				source: ["VSoS", 76],
				additional : "Prereq: Exotic; 1/short rest",
				description: desc([
					"When I hit a creature with this weapon, I can make the target make a Constitution save vs my",
					"Masterwork save DC or be stunned until the end of my next turn."
				])
			},
			calcChanges: {
				atkAdd: [ function(fields, v) {
					if (/\belectroshock\b/i.test(v.WeaponTextName) && (/bexotic\b/i.test(v.theWea.type) || /\bexotic\b/i.test(fields.Description))){

						fields.Description += (fields.Description == "" ? "" : "; ") + "Electroshock 1/rest";
						fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Electroshock: When you hit a creature with this weapon, you can expend the weapon's built-in power cell to shock the target. The target must succeed on a Constitution saving throw against your Masterwork save DC or be stunned until the end of your next turn. Once you use this property, you can't use it again with this weapon until you finish a short or long rest.";
					}
				}, "If the word \"Electroshock\" is included in the name of an exotic attack, the Electroshock masterwork property is added to its description and tooltip.",
				103
				]           
			},
			autoSelectExtrachoices: [{
				extrachoice: "electroshock"
			}]
		},
	}
});

// * Trapper Craftsman Subclass
AddSubClass("craftsman","trapper",{
	regExpSearch : /^(?=.*trapper).*$/i,
	subname : "Trappers' Guild",
	source : ["VSoS", 76],
	fullname : "Trapper",
	features : {
		"subclassfeature3" : { 
			name : "Danger Sense",
			source : ["VSoS", 76],
			minlevel : 3,
			description : desc([
				"Adv. on Dexterity saves against seen effects (not blinded/deafened/incapacitated)",
			]),
			savetxt : { text : ["Adv. on Dex saves vs. seen effects"] }
		},
		"subclassfeature3.1" : { 
			name : "Traps",
			source : ["VSoS", 76],
			minlevel : 3,
			description : desc([
				"I can craft traps, and can deploy a number equal to my Intelligence modifier (min 1) per rest.",
				"When I take the Attack action, I can forgo one of my attacks to deploy a trap. I can use an",
				"action to disarm and recover one of my untriggered traps, which restores 1 trap deployment.",
				"See notes for trap options."
			]),
			additional : "Int mod (min 1) trap deployments",
			extraLimitedFeatures: [{
				name: "Trap Deployments",
				usagescalc: "event.value = Math.max(1, What('Int Mod'));",
				recovery: "short rest"
			}],
			action: ["action", "Deploy Trap (replace 1 attack)"],
			toNotesPage: [{
				name: "Traps",
				source: ["VSoS", 77],
				note: [
					"Craftsmen of the Trappers' Guild can build the following traps:"
				]
			}, {
				name: "Ballista Trap",
				source: ["VSoS", 77],
				note: [
					"I place this trap in an unoccupied space within 5 feet of me and aim it in a",
					"direction I choose. The trap triggers when a creature enters the area within a",
					"5-foot-wide, 30-foot-long line extending from the front of the trap. When it",
					"triggers, the ballista fires automatically, making a ranged attack against the",
					"creature using my Intelligence modifier and proficiency bonus. On hit, the target",
					"takes 2d8 piercing damage."
				],
				amendTo: "Traps"
			}, {
				name: "Man-Trap",
				source: ["VSoS", 77],
				note: [
					"I place this trap in an unoccupied 5-foot-square area within 5 feet of me. When",
					"a Small or larger creature moves within the trap's area, the trap clamps down on",
					"the creature. The creature must make a Dexterity save vs my Masterwork save",
					"DC. On a failed save, the creature takes 2d8 slashing damage, and if it is Large",
					"or smaller, it becomes trapped, rendering it unable to move. On a successful",
					"save, the creature takes half as much damage and isn't trapped. The trapped",
					"creature or another creature within 5 feet of it can use its action to make a",
					"Strength check against my Masterwork save DC, freeing the trapped creature on",
					"a success. A Huge or larger creature that failed its saving throw rips the trap",
					"from its mounting the next time it moves."
				],
				amendTo: "Traps"
			}, {
				name: "Razor Wire",
				source: ["VSoS", 77],
				note: [
					"I place this trap in up to four unoccupied, contiguous, 5-foot-square areas I",
					"choose within 10 feet of me. Each of these areas becomes difficult terrain. When",
					"a creature moves into or within the area, it takes 2d4 piercing damage for every",
					"5 feet it travels. Once deployed, the razor wire can't be recovered."
				],
				amendTo: "Traps"
			}, {
				name: "Trigger Bomb",
				source: ["VSoS", 77],
				note: [
					"I toss this trap into an unoccupied space within 30 feet of me. As a reaction",
					"when a creature I can see or hear moves within 5 feet of the bomb, I can cause",
					"the bomb to explode. Each creature within 5 feet of the bomb must make a",
					"Dexterity save vs my Masterwork save DC, taking 2d6 fire damage on a failed",
					"save, or half as much damage on a successful one. The explosion ignites",
					"flammable objects in the area that aren't being worn or carried."
				],
				amendTo: "Traps"
			}]
		},
		"subclassfeature7" : {
			name : "Booby Trap",
			source : ["VSoS", 76],
			minlevel : 7,
			description : desc([
				"I can spend 1 minute to hide a trap. A creature can detect the trap with a successful",
				"Investigation or Perception check vs my Masterwork save DC, or by having a passive",
				"Perception score higher than that DC. The trap deals twice its normal damage dice."
			]),
		},
		"subclassfeature10" : {
			name : "Ambush Modification",
			source : ["VSoS", 77],
			minlevel : 10,
			description : desc([
				"I can spend 10 min with a ranged weapon, or a short/long rest with up to 6 ranged weapons",
				"to give them the Hair-Trigger property: This weapon has advantage on the first attack it",
				"makes using the Ready action."
			]),
		},
		"subclassfeature14" : {
			name : "Rapid Setup",
			source : ["VSoS", 77],
			minlevel : 14,
			action: ["action", "Rapid Setup (Deploy 4 traps)"],
			description : desc([ "As an action, I can deploy up to four traps." ]),
			usages : 1, 
			recovery : "short rest",
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 77],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork weapon property, which I can immediately apply: Net.",
			]), 
			extraname: "Legendary Masterwork Weapon Property",
			"net" : {
				name: "Net",
				source: ["VSoS", 76],
				additional : "Prereq: Exotic, Ranged, not Firearm;\n   1/short rest",
				description: desc([
					"When I hit a Large or smaller creature with this weapon's projectile, it also deploys a net",
					"that automatically hits the creature."
				])
			},
			calcChanges: {
				atkAdd: [ function(fields, v) {
					if (/\bnet\b/i.test(v.WeaponTextName) && v.isRangedWeapon && (/bexotic\b/i.test(v.theWea.type) || /\bexotic\b/i.test(fields.Description) && (!/firearm/i.test(v.theWea.list) && !/\bfirearm\b/i.test(fields.Description)))){

						fields.Description += (fields.Description == "" ? "" : "; ") + "restrain on hit";
						fields.Description_Tooltip += (fields.Description_Tooltip == "" ? "" : "\n") + "Net: When this weapon hits a Large or smaller creature with its projectile, it also deploys a net that automatically hits the creature. A Large or smaller creature hit by the net is restrained until it is freed. A net has no effect on creatures that are formless, or creatures that are Huge or larger. A creature can use its action to make a DC 10 Strength check, freeing itself or another creature within its reach on a success. Dealing 5 slashing damage to the net (AC 10) also frees the creature without harming it, ending the effect and destroying the net.";
					}
				}, "If the word \"Net\" is included in the name of an exotic attack, the Net masterwork property is added to its description and tooltip.",
				103
				]           
			},
			autoSelectExtrachoices: [{
				extrachoice: "net"
			}]
		},
	}
});

// * Bladeworker Craftsman Subclass
AddSubClass("craftsman","bladeworker",{
	regExpSearch : /^(?=.*bladeworker).*$/i,
	subname : "Bladeworkers' Guild",
	source : ["VSoS", 70],
	fullname : "Bladeworker",
	features : {
		"subclassfeature3" : { 
			name : "Fighting Style",
			source : ["VSoS", 70],
			minlevel : 3,
			description : desc([
				"Choose a Fighting Style using the \"Choose Feature\" button above",
			]),
			choices : ["Dueling", "Great Weapon Fighting", "Half-and-a-Half", "Two-Weapon Fighting"],
			"archery" : FightingStyles.archery,
			"dueling" : FightingStyles.dueling,
			"great weapon fighting" : FightingStyles.great_weapon,
			"two-weapon fighting" : FightingStyles.two_weapon,
			"half-and-a-half" : {
				name: "Half-and-a-Half Fighting Style",
				source : ["VSoS", 70],
				description: desc ([
					"   I gain +1 to attack & damage rolls with a versatile weapon that I am wielding in two hands."
				]),
				calcChanges: {
					atkAdd : [
						function (fields, v){
							if (/\bversatile\b/i.test(fields.Description)){
								fields.Description += "; Hand-and-a-Half +1";
							}
						}, "While wielding a versatile weapon in two hands, I gain a +1 bonus to attack and damage rolls with that weapon."
					]
				} 
			}
		},
		"subclassfeature7" : {
			name : "Sabotaging Strike",
			source : ["VSoS", 70],
			minlevel : 7,
			description : desc([
				"Once on my turn, when I take the Attack action, I can replace one of my attacks with one of",
				"the two special melee attacks listed on the notes page."
			]),
			action: ["action", "Disarm/Sunder (replaces 1 attack)"],
			extraname: "Sabotaging Strike",
			"disarm" : {
				name: "Disarm",
				source : ["VSoS", 70],
				description: desc ([
					"The target makes a Strength save vs my Masterwork save DC or drops one item of my choice",
					"that it is holding or carrying at its feet."
				])
			},
			"sunder" : {
				name: "Sunder",
				source : ["VSoS", 70],
				description: desc ([
					"The target makes a Dexterity save vs my Masterwork save DC or the target's armor or shield",
					"take a permanent & cumulative -1 to its AC. Armor that drops to 10 AC or a shield that drops",
					"to a +0 is destroyed, but can be repaired over a short or long rest."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "disarm"
			}, {
				extrachoice: "sunder"
			}]
		},
		"subclassfeature10" : {
			name : "Honed Weapons",
			source : ["VSoS", 70],
			minlevel : 10,
			description : desc([
				"I can spend 10 min fortifying a weapon, or a short or long rest fortifying up to 6 weapons.",
				"This lasts until the weapon hits a target. I have two fortifying techniques, on the notes page.",
			]),
			calcChanges: {
				atkAdd: [
					function (fields, v) {
						if (v.isWeapon) {
							fields.Description += (fields.Description == "" ? "" : "; ") + "Honed +2 to hit; Sharpened +1d8 dmg"
						}
					}, "Honed weapons gain a +2 bonus to hit until it hits a target. Sharpened weapons deal an extra +1d8 damage until it hits a target."
				]
			},
			extraname: "Bladeworker's Guild 10",
			"honed weapons" : {
				name: "Honed Weapons",
				source : ["VSoS", 70],
				description: desc ([
					"I can spend 10 min fortifying a weapon, or a short or long rest fortifying up to 6 weapons.",
					"This lasts until the weapon hits a target. I have two fortifying techniques:",
					"- Honed: This weapon has a +2 bonus to attack rolls.",
					"- Sharpened: This weapon deals an 1d8 additional damage on a hit."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "honed weapons"
			}]
		},
		"subclassfeature14" : {
			name : "Versatile Weapon Master",
			source : ["VSoS", 70],
			minlevel : 14,
			description : desc([
				"Once on each of my turns when I attack with a weapon, I gain advantage on the attack roll. I",
				"can use this ability 4 times as long as I use a different weapon:",
				"- Once with a ranged weapon that has the Ammunition property",
				"- Once with a two-handed melee weapon",
				"- Once with a one-handed melee weapon",
				"- Once with a ranged weapon attack with a thrown weapon",
				"I regain use of this ability after 1 minute, and cannot use this ability if I have disadvantage on",
				"on the attack roll or if I can't see the target."
			]),
			extraLimitedFeatures: [{
				name: "Ranged Weapon w. Ammunition Adv.",
				usages: 1,
				recovery: "MIN",
			}, {
				name: "Two-handed Weapon Adv.",
				usages: 1,
				recovery: "MIN"
			}, {
				name: "One-Handed Weapon Adv.",
				usages: 1,
				recovery: "MIN"
			}, {
				name: "Ranged Thrown Weapon Adv.",
				usages: 1,
				recovery: "MIN"
			}]
		},
		"subclassfeature18" : {
			name : "Legendary Property",
			source : ["VSoS", 70],
			minlevel : 18,
			description : desc([
				"I learn a new masterwork weapon property, which I can immediately apply: Devastating.",
			]),
			extraname: "Legendary Masterwork Weapon Property",
			"devastating": {
				name: "Devastating",
				additional : "Prereq: Exotic",
				source : ["VSoS", 70],
				description: desc([
					"This weapon scores a critical hit on a roll of 18-20."
				])
			},
			autoSelectExtrachoices: [{
				extrachoice: "devastating",
			}],
			calcChanges : {
				atkAdd : [
					function (fields, v){
						if (/\bdevastating\b/i.test(v.WeaponTextName) && !v.isDC && (/\bexotic\b/i.test(fields.Description) || /\bexotic\b/i.test(v.theWea.type))){
							if (!/crit/i.test(fields.Description)){
								fields.Description += (fields.Description == "" ? "" : "; ") + "crit on 18-20";
							}
							else {
								fields.Description = fields.Description.replace("19 or 20", "18-20");
								fields.Description = fields.Description.replace("19-20", "18-20");
							}
						}
					}, "If the word \"Devastating\" is in the name of an exotic weapon attack, that weapon crits on an attack roll of 18-20.",
					104
				]
			},  
		},
	}
});

// * Gunslinger class
ClassList["gunslinger"] = {
    name: "Gunslinger",
    regExpSearch: /\bgunslinger\b/i,
    source: ["VSoS", 91],
    primaryAbility: "Dexterity and Constitution",
    prereqs: "Dexterity 13",
    die: 8,
    improvements: [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
    saves: ["Dex", "Cha"],
    abilitySave: 2,
    skillstxt: {
        primary: "Choose two from Acrobatics, Animal Handling, Athletics, Deception, Persuasion, Sleight of Hand, Stealth",
    },
    armorProfs: {
        primary: [true, false, false, false],
        secondary: [true, false, false, false]
    },
    weaponProfs: {
        primary: [true, false, ["Firearms"]],
        secondary: [true, false, ["Firearms"]],
    },
    toolProfs: {
        primary: ["One type of gaming set", 1]
    },
    equipment: "Gunslinger starting equipment: " +
        "\n \u2022 a handgun and 20 bullets -or- a revolver and 10 bullets;" +
        "\n \u2022 any two-handed firearm that isn't heavy and 30 bullets/shells;" +
        "\n \u2022 a dungeoneer's pack -or- an explorer's pack;" +
        "\n \u2022 leather armor, a longcoat, and a dagger",
    subclasses: ["Gunslinger's Creed", []],
    attacks: [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    features: {
        "fighting style": {
            name: "Fighting Style",
            minlevel: 1,
            source: ["VSoS", 92],
            description: desc([
                "Choose a Fighting Style for the gunslinger using the \"Choose Feature\" button above."
            ]),
            calcChanges : {
                atkAdd : [
                    function (fields, v){
                        if((/firearms?/i).test(v.theWea.type) || (/firearms?/i).test(v.theWea.list)) {
                            fields.Proficiency = true;
                        }
                    }
                ]
            },
            choices: ["Akimbo", "Bullseye", "Duelist", "Shotgunner"],
            "akimbo": {
                name: "Akimbo Fighting Style",
                source: ["VSoS", 92],
                description: desc([
                    "I don't take the -2 damage penalty of off-hand firearm attacks when two-weapon fighting.",
                ]),
                calcChanges: {
                    atkAdd:[
                        function (fields, v){
                            if (/^(?!.*(spell|cantrip))(?=.*(off.{0,3}hand|secondary))(?=.*\-\d+\s?dmg)(?=.*\(min\.\s?1\)).*$/i.test(fields.Description)){
                                fields.Description = fields.Description.replace(/^(?=.*\-\d+\s?dmg)(?=.*\(min\.\s?1\)).*$/i, "");
                                fields.Description_Tooltip = fields.Description_Tooltip.replace(/When you engage in two-weapon fighting with two light firearms, you subtract 2 from the damage roll of the bonus attack, to a minimum of 1 damage./, "");
                            }
                        },
                        "I don't take the -2 damage penalty of off-hand firearm attacks when two-weapon fighting.",
                        500
                    ]
                }
            },
            "bullseye": {
                name: "Bullseye Fighting Style",
                source: ["VSoS", 93],
                description: desc([
                    "Ranged firearm attack rolls with Sighted or a normal range of 80 ft or longer gain a +2 bonus.",
                    "This effect doesn't stack with Archery Fighting Style."
                ]),
                calcChanges: {
                    atkCalc : [
                        function (fields, v, output) {                           
                            // check if the archery fighting style is here, back out
                            if (!/Archery Fighting Style/i.test(What("Class Features")) || !(/\d+\/\d+/i).test(fields.Range)) return;
                            var rangeFld = fields.Range.match(/(\d+)\/(\d+)/i);
                            var shortRange = parseInt(rangeNmbr[1]);
                            if(!(/firearm/i.test(v.theWea.list) || !/firearm/i.test(fields.Description)) && (!/sighted/i.test(fields.Description) || !shortRange >= 80)) return;
                            output.extraHit += 2;
 
                        }, "I gain a +2 bonus to ranged attack rolls I make with firearms with the Sighted property or have a normal range of 80 or longer. Doesn't stack with the Archery fighting style.",
                    ]
                }
            },
            "duelist": {
                name: "Duelist Fighting Style",
                source : ["VSoS", 93],
                description: desc ([
                    "Once per round, I deal 1 extra die of weapon damage when making a ranged, one-handed",
                    "firearm attack roll that exceeds the target's AC by 5+. Must have 1 free hand.",
                ]),
                calcChanges: {
                    atkAdd: [
                        function (fields, v) {
                            if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && !/\btwo-handed\b/i.test(fields.Description) && (/(\d+)d(\d+)/).test(fields.Damage_Die)) {
                                // get the die type
                                var dieSplit = fields.Damage_Die.split("d");
                                if (dieSplit.length < 2) return;
                                var die = "1d" + dieSplit[1];
                                fields.Description += (fields.Description ? "; " : "") + "Duelist +" + die;
                            }
                        }, "Once per round, when wielding a firearm in one hand and nothing in the other, I deal 1 extra die of weapon damage if my attack roll exceeds the target's AC by 5 or more.",
                    ]
                }
            },
            "shotgunner" : {
                name: "Shotgunner Fighting Style",
                source : ["VSoS", 93],
                description : desc ([
                    "When I hit on a ranged firearm attack with Scatter, I can reroll the lowest damage die.",
                ]),
                calcChanges : {
                    atkAdd: [
                        function (fields, v){
                            if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description)) && /\bscatter\b/i.test(fields.Description)) {
                                fields.Description += (fields.Description ? "; " : "") + "reroll lowest dmg die";
                            }
                        }, "When I hit with a ranged weapon attack using a firearm that has the Scatter property, I can reroll the lowest damage die.",
                    ]
                }
            }
        },
        "quickdraw": {
            name: "Quick Draw",
            source : ["VSoS", 93],
            minlevel: 1,
            description: desc([
                "Adv. on initiative rolls. I can draw/stow 2 weapons when I roll initiative as part of my action.",
            ]),
            
        },
        "critical shot": {
            name: "Critical Shot",
            source : ["VSoS", 93],
            minlevel: 2,
            description: desc([
                "My ranged firearm attacks score a critical hit on a roll of 19-20, increasing at 9th & 17th level.",
            ]),
            additional: levels.map(function (n) { return n < 2 ? "" : ("critical hit range: " + n < 9 ? "19-20" : n < 17 ? "18-20" : "17-20");}),
            calcChanges: {
                atkAdd: [
                    function (fields, v){
                        if ((/firearm/i.test(v.theWea.list) || /\bfirearm\b/i.test(fields.Description))){
                            fields.Description += (fields.Description ? "; " : "") + "crit on " + (classes.known.gunslinger.level < 9 ? "19-20" : classes.known.gunslinger.level < 17 ? "18-20" : "17-20");
                        }
                    }, "At 2nd level, my ranged firearm attacks score a crit on a roll of 19-20; at 9th level, 18-20; and at 17th level, 17-20."
                ]
            }
        },
        "poker face": {
            name: "Poker Face",
            source : ["VSoS", 93],
            minlevel: 2,
            description: desc([
                "Advantage on checks/saves vs others trying to sense my motives, emotions, or thoughts."
            ]),
            savetxt : {
                adv_vs : ["others sensing my motives, emotions, thoughts"]
            }
        },
        "risk" : {
            name: "Risk",
            source : ["VSoS", 93],
            minlevel: 2,
            description: desc([
                "I can spend Risk Dice to fuel Deeds once per turn (see third page) ",
                "My deed save DC is 8 + my proficiency bonus + my Dexterity modifier."
            ]),
            limfeaname: "Risk Dice",
            additional : levels.map(function (n) { return n < 2 ? "" : n < 10 ? "d8" : n < 18 ? "d10" : "d12"}),
            usages: levels.map(function (n) { return n < 2 ? 0 : n < 6 ? 4 : n < 14 ? 5 : 6}),
            recovery: "long rest",
            extraname: "Deed",
            action: ["bonus action", "Deed"],
            "bitethebullet": {
                name: "Bite the Bullet",
                source: ["VSoS", 94],
                description: desc([
                    "As a bonus action, I can expend 1 risk die to gain temporary hit points equal to the roll + my",
                    "Constitution modifier."
                ]),
            },
            "coveringfire": {
                name: "Covering Fire",
                source: ["VSoS", 94],
                description: desc([
                    "As a bonus action, when I hit a creature with a ranged weapon attack, I can subtract the risk",
                    "die from the next attack roll the creature makes before the start of my next turn."
                ]),
            },
            "dodgeroll": {
                name: "Dodge Roll",
                source: ["VSoS", 94],
                description: desc([
                    "As a bonus action, I can spend a risk die to move up to 15 ft and reload any firearm I am",
                    "holding. This movement doesn't provoke opportunity attacks, ignores difficult terrain, and can",
                    "move through a hostile creature's space as long as I don't end my movement there."
                ]),
            },
            "limbshot": {
                name: "Limb Shot",
                source: ["VSoS", 94],
                description: desc([
                    "As a bonus action, when I hit a creature with a ranged weapon attack, I can spend a risk die,",
                    "forcing the target to make a Constitution save or drop a held object of my choice at its feet."
                ]),
            },
            "skinofyourteeth": {
                name: "Skin of Your Teeth",
                source: ["VSoS", 94],
                description: desc([
                    "As a reaction to a creature I can see making an attack roll against me, I can add a risk die to",
                    "my AC against the attack."
                ]),
                action: ["reaction", ""],
            },
            "steadyaim": {
                name: "Steady Aim",
                source: ["VSoS", 94],
                description: desc([
                    "As a bonus action, I can spend a risk die to double the normal and maximum range for the",
                    "next ranged weapon attack I make."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "bitethebullet"
            }, {
                extrachoice: "coveringfire"
            }, {
                extrachoice: "dodgeroll"
            }, {
                extrachoice: "limbshot"
            }, {
                extrachoice: "skinofyourteeth"
            }, {
                extrachoice: "steadyaim"
            }]
        },
        "subclassfeature3" : {
            name: "Gunslinger's Creed",
            minlevel: 3,
            source: ["VSoS", 93],
            description: desc(["Choose a Gunslinger's Creed and put it in the \"Class\" field."])
        },
        "gutshot": {
            name: "Gut Shot",
            minlevel: 6,
            source: ["VSoS", 94],
            description: desc([
                "When I crit on a ranged firearm attack vs a Large or smaller creature, the creature moves at",
                "half speed & has disadvantage on attack rolls & ability checks until it uses its action to end",
                "the effect. Elementals, Oozes, and Undead are immune to this effect."
            ])
        },
        "evasion": {
            name: "Evasion",
            minlevel: 7,
            source: ["VSoS", 94],
            description: desc(["My Dexterity saves vs. areas of effect negate damage on success and halve it on failure."]),
            savetxt : { text : ["Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg"] }
        },
        "mankiller": {
            name: "Mankiller",
            minlevel: 11,
            source: ["VSoS", 94],
            description: desc(["I add my ability modifier to damage rolls of ranged firearm attacks I make using my action."]),
            calcChanges: {
                atkCalc: [
                    function (fields, v, output){
                        if ((/firearms?/i.test(v.theWea.list) || /firearms?/i.test(fields.Description)) && !(/((^|[^+-]\b)off).?hand(ed)?\b/i).test(v.WeaponTextName)){
                            output.modToDmg = true;
                        }
                    },  "I add my ability modifier to damage rolls of ranged firearm attacks I make using my action."
                ]
            }
        },
        "diregambit": {
            name: "Dire Gambit",
            minlevel: 13,
            source: ["VSoS", 94],
            description: desc("I regain 1 expended risk die whenever I score a critical hit.")
        },
        "cheatdeath": {
            name: "Cheat Death",
            minlevel: 15,
            source: ["VSoS", 94],
            description: desc([
                "When I drop to 0 hit points but don't die, I can use my reaction to expend & roll a risk die,",
                "dropping to a number of hit points equal to the roll instead."
            ]),
            action: ["reaction", ""],
            usages: 1,
            recovery: "short rest"
        },
        "maverick": {
            name: "Maverick",
            minlevel: 18,
            source: ["VSoS", 94],
            description: desc("I have advantage on Constitution checks and saving throws."),
            savetxt: { adv_vs: ["Constitution"]},
            advantages: [["Constitution", true]],
        },
        "headshot": {
            name: "Head Shot",
            minlevel: 20,
            source: ["VSoS", 94],
            description: desc([
                "When I crit with a firearm attack, the creature dies if it has <100 hp. If not, it takes 10d10",
                "damage. Elementals, Oozes, Undead, and creatures that lack nervous systems are immune."
            ]),
            usages: 1,
            recovery: "short rest"
        }
    }
}

// * Gun Tank Gunslinger subclass
AddSubClass("gunslinger","gun tank",{
    regExpSearch: /\bgun tank\b/i,
    subname: "Gun Tank",
    source: ["VSoS", 95],
    prereqs : "Strength 15 or higher",
    abilitySaveAlt: 1,
    features: {
        "subclassfeature3": {
            name: "Heavy Gunner",
            minlevel: 3,
            source: ["VSoS", 95],
            description: desc([
                "I can use heavy firearms regardless of their weight. I can use Strength instead of Dexterity",
                "for attack & damage rolls using heavy firearms, and my Deed save DC."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (((/firearms?/i).test(v.theWea.type) || (/firearms?/i).test(v.theWea.list)) && /heavy/i.test(fields.Description)){
                            fields.Mod = What("Str Mod") > What("Dex Mod") ? 1 : 2;
                        }
                    }, "I can use Strength instead of Dexterity for attack & damage rolls using heavy firearms."
                ]
            }
        },
        "subclassfeature3.1": {
            name: "Tough As Nails",
            minlevel: 3,
            source: ["VSoS", 95],
            description: desc([
                "My hp max increases by my gunslinger level. I gain proficiency with medium & heavy armor.",
            ]),
            armorProfs: [true, true, true, false],
            calcChanges: {
                hp: function (totalHD, HDobj, prefix){
                    if (classes.known.gunslinger) {
                        return [classes.known.gunslinger.level, "Tough As Nails"];
                    }
                }
            }
        },
        "subclassfeature7": {
            name: "Thick-Headed",
            minlevel: 7,
            source: ["VSoS", 95],
            description: desc([
                "I have advantage on saves made to avoid or end the charmed condition on myself."
            ]),
            savetxt: { adv_vs : ["charmed"] }
        },
        "subclassfeature10": {
            name: "Strong As An Ox",
            minlevel: 10,
            source: ["VSoS", 95],
            description: desc([
                "My carry capacity, and weight I can push/drag/lift is doubled. I have advantage on Strength",
                "checks and saves, and can ignore the Two-handed property on firearms I am proficient in."
            ]),
            savetxt: { adv_vs: ["Strength"]},
            advantages: [["Strength", true]],
            carryingCapacity: 2,
            calcChanges: {
                atkAdd: [
                    function(fields, v, output){
                        if ((/((^|[^+-]\b)2|\btwo).?hand(ed)?s?\b/i).test(fields.Description) && (/firearms?/i.test(v.theWea.list) || /firearms?/i.test(fields.Description)) && fields.Proficiency){
                            fields.Description = fields.Description.replace(/([;,]? ?((^|[^+-]\b)2|\btwo).?hand(ed)?s?\b[;,]? ?)/i, "");
                        }
                    }, "I ignore the two-handed property of firearms I am proficient in.",
                    1 // * needs high priorty.
                ]
            }
        },
        "subclassfeature14": {
            name: "Gun Rage",
            minlevel: 14,
            source: ["VSoS", 95],
            description: desc([
                "Start/end as a bonus action: lasts 1 min; resistance to bludgeoning/piercing/slashing damage;",
                "I can make 1 additional attack when I take the Attack action on my turn; my speed is halved,",
                "and I have disadv. on Dex checks/saves. Stops if I take cover or end turn without attacking."
            ]),
            usages: 1,
            recovery: "short rest",
            action : [["bonus action", " (start/end)"], ["action", "Gun Rage Attack (3 attacks per action)"]],
            dmgres : [["Bludgeoning", "Bludgeon. (in rage)"], ["Piercing", "Piercing (in rage)"], ["Slashing", "Slashing (in rage)"]],
            savetxt: { text: ["Disadv on Dex rolls in rage"]}
        }
    }
})

// * Gun-Ko Master Gunslinger subclass
AddSubClass("gunslinger","gun-ko master",{
    regExpSearch: /\bgun\-ko master\b/i,
    subname: "Gun-Ko Master",
    source: ["VSoS", 96],
    features: {
        "subclassfeature3": {
            name: "Point-Blank Shot",
            source: ["VSoS", 96],
            minlevel: 3,
            description: desc([
                "Being in 5 ft of a hostile creature doesn't impose disadvantage on my ranged firearm attacks."
            ])
        },
        "subclassfeature3.1": {
            name: "Gun-Ko",
            source: ["VSoS", 96],
            minlevel: 3,
            description: desc([
                "I can treat firearms as melee weapons with Finesse, dealing 1d6 bludgeoning damage on hit,",
                "or 1d8 if the firearm is two-handed. When I make a ranged firearm attack vs a creature within",
                "5 ft of me, I can make a melee weapon attack using the firearm as a bonus action."
            ]),
            action: ["bonus action", "Gun-Ko Attack"],
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if ((/((^|[^+-]\b)2|\btwo).?hand(ed)?s?\b/i).test(fields.Description) && (/firearm/i.test(v.theWea.list) || /firearm/i.test(fields.Description))) {
                            fields.Description += (fields.Description ? ", " : "") + "Melee (1d8)";
                        }
                        if((/finesse/i).test(fields.Description) && (/firearms?/i.test(v.theWea.list) || /firearms?/i.test(fields.Description))){
                            fields.Description += (fields.Description ? ", " : "") + "Melee (1d6)";
                        }
                    }
                ]
            }   
        },
        "subclassfeature7" : {
            name: "Lightning Disarm",
            source: ["VSoS", 96],
            minlevel: 7,
            description: desc([
                "As a bonus action, with a free hand, expend a risk die to force a creature holding a firearm",
                "within 5 ft of me to make a Dex save vs my Deed save DC. On fail, I take the firearm.",
            ]),
            action: ["bonus action", ""]
        },
        "subclassfeature7.1": {
            name: "Bullet Catch",
            source: ["VSoS", 96],
            minlevel: 7,
            description: desc([
                "As a reaction to being hit by a ranged weapon attack, I reduce the damage by 1d10 + my",
                "Dexterity modifier + my proficiency bonus (min 0)."
            ]),
            action: ["reaction", ""]
        },
        "subclassfeature10": {
            name: "Predictive Dodge",
            source: ["VSoS", 96],
            minlevel: 10,
            description: desc([
                "As a bonus action, I gain Dodge effect vs ranged attacks & effects from 1 creature I can see",
                "within 30 ft of me until start of my next turn, losing this if I take damage from them."
            ]),
            action: ["bonus action", ""]
        },
        "subclassfeature14": {
            name: "Gatling Strikes",
            source: ["VSoS", 96],
            minlevel: 14,
            description: desc([
                "I can use my bonus action to make 2 melee weapon attacks & 1 ranged weapon attack with a",
                "firearm against targets within 15 ft of me."
            ]),
            action: ["bonus action", ""],
            usages: 1,
            recovery: "short rest"
        }
    }
})

// * High Roller Gunslinger subclass
AddSubClass("gunslinger","high roller",{
    regExpSearch: /\bhigh roller\b/i,
    subname: "High Roller",
    source: ["VSoS", 96],
    features: {
        "subclassfeature3": {
            name: "Bonus Proficiencies",
            source: ["VSoS", 96],
            minlevel: 3,
            description: desc([
                "I gain proficiency in all gaming sets and in either Deception, Insight or Perception."
            ]),
            toolProfs: ["All gaming sets"],
            skillstxt: ["Choose one from Deception, Insight, or Perception."]
        },
        "subclassfeature3.1": {
            name: "All In",
            source: ["VSoS", 96],
            minlevel: 3,
            description: desc([
                "As a bonus action for my attack roll/ability check, or as a reaction to rolling a save, I expend",
                "a risk die to add it to the result. If I roll a 1 on the risk die, I fail the roll regardless of result."
            ]),
            action: [["bonus action", " (Attack/Ability Check)"], ["reaction", " (Saving Throw)"]]
        },
        "subclassfeature3.2": {
            name: "Liar's Dice",
            source: ["VSoS", 96],
            minlevel: 3,
            description: desc([
                "When I make a d20 roll, I can roll in secret and declare any result. The GM can all my bluff,",
                "revealing the number. If truthful, treat the result as if I rolled a 20. If lying, roll the d20 again",
                "and use the lowest roll. If the GM chooses not to call my bluff, I use the result I declared.",
            ]),
            usagescalc: "event.value = Math.max(1 + What('Cha Mod'), 1);",
            usages: "1 + Cha mod (min 1)",
            recovery: "long rest"
        },
        "subclassfeature7": {
            name: "Boom or Bust",
            source: ["VSoS", 97],
            minlevel: 7,
            description: desc([
                "When I hit with a ranged firearm attack, I can expend & add a risk die to the damage roll,",
                "jamming it afterwards. Jammed weapons can't make attacks until an action is used to clear it.",
            ]), 
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if ((/firearms?/i.test(v.theWea.list) || /firearms?/i.test(fields.Description))){
                            var die = classes.known.gunslinger.level < 10 ? "+1d8" : classes.known.gunslinger.level < 18 ? "+1d10" : "+1d12";
                            fields.Description += (fields.Description ? "; " : "" ) + "Boom or Bust " + die;
                            fields.Description_Tooltip += (fields.Description_Tooltip ? "" : "\n") + "Boom or Bust: when you hit with a ranged firearm attack, you can expend a risk die and add it to the weapon's damage roll. After this attack, the weapon jams. A jammed weapon can't be used to make an attack until a creature uses its action to clear the weapon malfunction.";
                        }
                    }, "When I hit with a ranged firearm attack, I can expend a risk die and add it to the weapon's damage roll, jamming the weapon afterwards."
                ]
            }
        },
        "subclassfeature10": {
            name: "Unlucky Numbers",
            source: ["VSoS", 97],
            minlevel: 10,
            description: desc([
                "As a reaction to getting hit from a hostile creature I can see, record the d20 roll & impose",
                "disadv. on that attack roll. Until short/long rest, attacks vs me crit when rolling that number.",
            ]),
            action: ["reaction", ""]
        },
        "subclassfeature14": {
            name: "Double Or Nothing",
            source: ["VSoS", 97],
            minlevel: 14,
            description: desc([
                "On a crit with a firearm, roll two d20s, treating them as ranged firearm attack rolls vs the",
                "target. If both miss, the crit is a normal hit. If either crits, roll the firearm damage thrice.",
            ])
        }
    }
})

// * Musketeer gunslinger subclass
AddSubClass("gunslinger","musketeer",{
    regExpSearch: /\bmusketeer\b/i,
    subname: "Musketeer",
    source: ["VSoS", 97],
    features: {
        "subclassfeature3": {
            name: "Bonus Proficiencies",
            minlevel: 3,
            source: ["VSoS", 97],
            description: desc(["I gain proficiency with the bayonet, cutlass, halberd, rapier, and shortsword."]),
            weaponProfs: [true, false, ["bayonet", "cutlass", "halberd", "rapier", "shortsword"]]
        },
        "subclassfeature3.1": {
            name: "Heavy Shot",
            minlevel: 3,
            source: ["VSoS", 97],
            description: desc([
                "When I hit a target with a ranged attack using a blunderbuss/flintlock/musket, I deal extra",
                "damage equal to the number of damage dice rolled for the attack."
            ]),
            calcChanges: {
                atkCalc: [
                    function(fields, v, output){
                        if (((/\bblunderbuss\b/i).test(v.WeaponTextName + v.baseWeaponName) || (/\bflintlock\b/i).test(v.WeaponTextName + v.baseWeaponName) || (/\bmusket\b/i).test(v.WeaponTextName + v.baseWeaponName)) && fields.Damage_Die.match(/(\d+)d(\d+)/i)) {
                            var dmgDie = fields.Damage_Die.match(/(\d+)d(\d+)/i);
                            var dieAmt = parseInt(dmgDie[1]);
                            output.extraDmg += dieAmt;
                        }
                    }, "Ranged attacks I make using a blunderbuss, flintlock, or musket deal extra damage equal to the number of damage dice rolled for the attack." 
                ]
            }
        },
        "subclassfeature7": {
            name: "Lock, Stock, And Barrel",
            minlevel: 7,
            source: ["VSoS", 97],
            description: desc([
                "I ignore the Loading and Misfire properties of the blunderbuss, flintlock, and musket."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v, output){ 
                        if (((/\bblunderbuss\b/i).test(v.WeaponTextName + v.baseWeaponName) || (/\bflintlock\b/i).test(v.WeaponTextName + v.baseWeaponName) || (/\bmusket\b/i).test(v.WeaponTextName + v.baseWeaponName))){
                            fields.Description = fields.Description.replace(/([;,]? ?loading|loading[;,]? ?)/i, "").replace(/([;,]? ?misfire|misfire[;,]? ?)/i, "");
                        }
                    }, "I ignore the Loading and Misfire properties of the blunderbuss, flintlock, and musket.",
                    999
                ]
            }
        },
        "subclassfeature10":{
            name: "Bayonet Charge",
            minlevel: 10,
            source: ["VSoS", 97],
            description: desc([
                "If I move 15 ft or more straight towards a target, I can use a bonus action to make an attack",
                "with a bayonet or melee weapon I am holding."
            ]),
            action: ["bonus action", ""]
        },
        "subclassfeature14": {
            name: "All For One",
            minlevel: 14,
            source: ["VSoS", 97],
            description: desc([
                "As a reaction to a friendly creature within 5 ft of me being attacked, I make an attack with a",
                "firearm or bayonet against the attacker."
            ]),
            action: ["reaction", ""]
        }
    }
})

// * Pistolero Gunslinger subclass
AddSubClass("gunslinger","pistolero",{
    regExpSearch: /\bpistolero\b/i,
    subname: "Pistolero",
    source: ["VSoS", 97],
    features: {
        "subclassfeature3": {
            name: "Point-Blank Shot",
            minlevel: 3,
            source: ["VSoS", 97],
            description: desc([
                "I don't get disadvantage on ranged firearm attacks from being within 5 ft of a hostile creature"
            ])
        },
        "subclassfeature3.1": {
            name: "Fan The Hammer",
            minlevel: 3,
            source: ["VSoS", 97],
            description: desc([
                "When I take the Attack action on my turn with a one-handed, non-automatic firearm & have",
                "a free hand, I can use my bonus action & a spend a risk die to make 2 extra ranged attacks",
                "with that firearm, with disadvantage. At 14th level, I make 3 extra attacks with this feature.",                  
            ]),
            additional: levels.map(function (n) { return n < 3 ? "" : ((n < 14 ? "2" : "3") + " attacks") }),
            action: ["bonus action", ""]
        },
        "subclassfeature7": {
            name: "Speed Loader",
            minlevel: 7,
            source: ["VSoS", 97],
            description: desc(["On my turn, I can reload 1 one-handed firearm as a free action."])
        },
        "subclassfeature10": {
            name: "Bullet Time",
            minlevel: 10,
            source: ["VSoS", 97],
            description: desc([
                "As a bonus action, I can gain advantage on a ranged, one-handed firearm attack roll."
            ]),
            usages: 1,
            recovery: "short rest",
            action: ["bonus action", ""]
        },
        "subclassfeature14": {
            name: "Swift Vengeance",
            minlevel: 14,
            source: ["VSoS", 97],
            description: desc([
                "As a reaction to taking damage from a creature within 15 ft of me, I make a firearm attack",
                "against that creature."
            ]),
            action: ["reaction", ""]
        }
    }
})

// * Sharpshooter gunsling subclass
AddSubClass("gunslinger","sharpshooter",{
    regExpSearch: /\bsharpshooter\b/i,
    subname: "Sharpshooter",
    source: ["VSoS", 98],
    features: { 
        "subclassfeature3": {
            name: "Eagle Eye",
            minlevel: 3,
            source: ["VSoS", 98],
            description: desc([
                "As a bonus action, expend & add a risk die to a ranged two-handed firearm attack roll.",
                "The attack doesn't gain disadvantage due to long range."
            ]),
            action: ["bonus action", ""]
        },
        "subclassfeature3.1": {
            name: "Sniper's Stance",
            minlevel: 3,
            source: ["VSoS", 98],
            description: desc([
                "No disadv. on ranged firearm attacks from being prone. Standing up uses 5 ft of movement."
            ]),
        },
        "subclassfeature7": {
            name: "Camouflage",
            minlevel: 7,
            source: ["VSoS", 98],
            description: desc([
                "Spend 1 minute to gain benefits until I move: adv. on Dex (Stealth) checks to hide; attacking",
                "while hidden won't reveal my location; disadv. on checks to find origin of my firearm attacks."
            ])
        },
        "subclassfeature10": {
            name: "Eye For Movement",
            minlevel: 10,
            source: ["VSoS", 98],
            description: desc([
                "As a bonus action, I gain darkvision and the effects of see invisibility out 20 ft or further until",
                "the start of my next turn."
            ]),
            action: ["bonus action", ""],
        },
        "subclassfeature14": {
            name: "Focused Shot",
            minlevel: 14,
            source: ["VSoS", 98],
            description: desc([
                "Once on each of my turns when I hit with a ranged firearm attack, the bullet continues",
                "straight out to its normal range, stopping at solid objects. Make an attack roll vs each",
                "creature in the line. On hit, the bullet deals damage and continues; on miss, the bullet stops."
            ])
        }
    }
})

// * Spellslinger gunslinger subclass
AddSubClass("gunslinger","spellslinger",{
    regExpSearch: /\bspellslinger\b/i,
    subname: "Spellslinger",
    source: ["VSoS", 98],
    spellcastingKnown : {
        cantrips : [0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3],
        spells : [0,0,3,4,4,4,5,5,5,6,7,7,8,8,8,9,9,9,10,10],
    },
    spellcastingList: {
        "class": "wizard",
        school: ["Evoc", "Abjur"],
        level: [1,4],           
    },
    spellcastingAbility: 4,
    spellcastingFactor: "warlock1",
    spellcastingTable: [
        [0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0],
        [2,0,0,0,0,0,0,0,0],
        [3,0,0,0,0,0,0,0,0],
        [3,0,0,0,0,0,0,0,0],
        [3,0,0,0,0,0,0,0,0],
        [4,2,0,0,0,0,0,0,0],
        [4,2,0,0,0,0,0,0,0],
        [4,2,0,0,0,0,0,0,0],
        [4,3,0,0,0,0,0,0,0],
        [4,3,0,0,0,0,0,0,0],
        [4,3,0,0,0,0,0,0,0],
        [4,3,2,0,0,0,0,0,0],
        [4,3,2,0,0,0,0,0,0],
        [4,3,2,0,0,0,0,0,0],
        [4,3,3,0,0,0,0,0,0],
        [4,3,3,0,0,0,0,0,0],
        [4,3,3,0,0,0,0,0,0],
        [4,3,3,1,0,0,0,0,0],
        [4,3,3,1,0,0,0,0,0],
    ],
    features: {
        "subclassfeature3": {
            name: "Spellcasting",
            source: ["VSoS", 98],
            minlevel: 3,
            description: desc([
                "I can cast wizard cantrips/spells that I know, using Intelligence as my spellcasting ability"
            ]),
            additional : levels.map( function (n) {
                if (n < 3) return "";
                var cantrips = n < 10 ? "3" : "4";
                var spells = n < 4 ? "3" : n < 7 ? "4" : n < 8 ? "5" : n < 10 ? "6" : n < 11 ? "7" : n < 13 ? "8" : n < 14 ? "9" : n < 16 ? "10" : n < 19 ? "11" : n < 20 ? "12" : "13";
                return cantrips + " cantrips & " + spells + " spells known";
            }),
            spellcastingBonus : [{ // the spells gained at level 8, 14, and 20
                name : "From any school",
                "class" : "wizard",
                times : [0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3],
                level : [1, 4]
            },{
                name : "Finger Guns",
                spells : ["finger guns"],
                selection : ["finger guns"],
                firstCol : "markedbox",
                times : 1
            }]
        },
        "subclassfeature3.1": {
            name: "Bang, You're Dead!",
            source: ["VSoS", 99],
            minlevel: 3,
            description: desc([
                "I can use Deeds with finger guns spell attacks. When I hit with a finger guns attack, I can",
                "spend a risk die as a bonus action to deal an extra 1d8 force damage."
            ]),
            action: ["bonus action", ""],
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bfinger guns\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "can use Deeds; Bang +1d8 force damage";
                        }
                    }, "I can use Deeds with finger guns spell attacks. When I hit with a finger guns attack, I can spend a risk die as a bonus action to deal an extra 1d8 force damage."
                ]
            }
        },
        "subclassfeature7": {
            name: "Spellshot",
            source: ["VSoS", 99],
            minlevel: 7,
            description: desc([
                "When I use my action to cast a cantrip, I can use my bonus action to make 1 ranged attack",
                "with a firearm or make a ranged spell attack using the finger guns cantrip."
            ]),
            action: ["bonus action", ""]
        },
        "subclassfeature7.1": {
            name: "Rune-Carved Cartridges",
            source: ["VSoS", 99],
            minlevel: 7,
            description: desc([
                "My ranged firearm attacks count as magical for overcoming resistance & immunity."
            ])
        },
        "subclassfeature10": {
            name: "Magic Bullet",
            source: ["VSoS", 99],
            minlevel: 10,
            description: desc([
                "As a bonus action, a ranged firearm attack I make on my turn vs a target at normal range",
                "automatically hits, and deals an extra 3d4 + 3 force damage."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (((/firearms?/i).test(v.theWea.type) || (/firearms?/i).test(v.theWea.list))){
                            fields.Description += (fields.Description == "" ? "" : "; ") + "Magic Bullet (+3d4+3 force)";
                        }
                    }, "As a bonus action, A ranged weapon attack I make on my turn vs a target at normal range automatically hits, and deals an extra 3d4 + 3 force damage.",
                ]
            },
            action: ["bonus action", ""],
            usages: 1,
            recovery: "long rest"
        },
        "subclassfeature14": {
            name: "Improved Spellshot",
            source: ["VSoS", 99],
            minlevel: 14,
            description: desc([
                "On casting a spell with an action, I can expend a risk die as a bonus action to make a ranged",
                "spell attack with a firearm or finger guns cantrip. Add the risk die to the attack roll. On hit, the",
                "attack deals its normal damage + the spell's effects."
            ])
        }
    }
});

// * Trick Shot gunslinger subclass
AddSubClass("gunslinger","trick shot",{
    regExpSearch: /\btrick shot\b/i,
    subname: "Trick Shot",
    source: ["VSoS", 100],
    features: {
        "subclassfeature3": {
            name: "Creative Trajectory",
            minlevel: 3,
            source: ["VSoS", 100],
            description: desc([
                "My ranged firearm attacks ignore half cover."
            ])
        },
        "subclassfeature3.1": {
            name: "Ricochet",
            minlevel: 3,
            source: ["VSoS", 100],
            description: desc([
                "As a bonus action, on a miss with a ranged firearm attack without disadvantage, reroll the",
                "attack roll. On hit, the attack deals half damage."
            ]),
            action: ["bonus action", ""],
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if ((/firearms?/i.test(v.theWea.list) || /firearms?/i.test(fields.Description))){
                            fields.Description += (fields.Description ?  "; " : "") + "Ricochet \u00BD";
                        }
                    }, "As a bonus action, on a miss with a ranged firearm attack without disadvantage I can reroll the attack roll. On hit, the attack deals half damage."
                ]
            }
        },
        "subclassfeature7": {
            name: "Light-Footed",
            minlevel: 7,
            source: ["VSoS", 100],
            description: desc([
                "Difficult terrain costs me no extra movement."
            ])
        },
        "subclassfeature10": {
            name: "Deft Deflectionist",
            minlevel: 10,
            source: ["VSoS", 100],
            description: desc([
                "As a reaction to a creature I can see making a ranged weapon attack roll against me, I make a",
                "ranged firearm attack roll. If my roll is greater than the attacker's, the attack gains disadv."
            ]),
            action: ["reaction", "Deflect"]
        },
        "subclassfeature14": {
            name: "Pinball Shot",
            minlevel: 14,
            source: ["VSoS", 100],
            description: desc([
                "Once on my turn when I hit with a ranged firearm attack, I can make another attack roll vs a",
                "separate target within range of the first target up to half the firearm's normal range."
            ])
        }
    }
});

// * White Hat gunslinger subclass
AddSubClass("gunslinger","white hat",{
    regExpSearch: /\bwhite hat\b/i,
    subname: "White Hat",
    source: ["VSoS", 100],
    features: {
        "subclassfeature3": {
            name: "Lay Down The Law",
            minlevel: 3,
            source: ["VSoS", 100],
            description: desc([
                "As a bonus action, expend a risk die and gain temp hp equal to the roll + my gunslinger level",
                "(twice my gunslinger level at 10th level), dividing it among creatures I can see (not me) within",
                "range of a held firearm. When a creature loses temp hp from an attack, use a reaction to",
                "make 1 ranged firearm attack vs the attacker. The temp hp is lost at the start of my next turn."
            ]),
            action: [["bonus action", "Lay Down The Law (Temp HP)"], ["reaction", "Lay Down The Law (Attack)"]],
        },
        "subclassfeature3.1": {
            name: "Steely-Eyed Aura",
            minlevel: 3,
            source: ["VSoS", 100],
            description: desc([
                "While conscious, I & friendly creatures within 10 ft of me have adv. on saves vs frightened.",
                "This becomes 30 ft when I reach 14th level."
            ]),
            savetxt: { adv_vs: ["fright"] },
            additional: levels.map(function (n) { n < 14 ? "10 foot aura" : "30 foot aura"})
        },
        "subclassfeature7": {
            name: "Reach For The Skies",
            minlevel: 7,
            source: ["VSoS", 100],
            description: desc([
                "As an action, a creature within 30 ft of me that can see or hear me makes a Wis save vs my",
                "Deed save DC or for 1 min become incapacitated & can't willingly move until it takes damage,",
                "repeating the save at end of its turns. Creatures immune to fright auto succeed the save."
            ]),
            action: ["action", ""],
            usages: 1,
            recovery: "short rest"
        },
        "subclassfeature10": {
            name: "Long Arm Of The Law",
            minlevel: 10,
            source: ["VSoS", 101],
            description: desc([
                "Creatures with temp hp from Lay Down The Law resist bludgeoning, piercing, & slashing;",
                "deal half damage. Until the start of my next turn, it can't move until it Disengages."
            ])
        },
        "subclassfeature14": {
            name: "Gold Star Hero",
            minlevel: 14,
            source: ["VSoS", 101],
            description: desc([
                "When a creature has temp hp from Lay Down The Law, it has resistance to bludgeoning,",
                "Steely-Eyed Aura range increases to 30 ft; Regain Reach for the Skies spending a risk die & BA"
            ]),
            action: ["bonus action", "Regain Reach for the Skies"]
        }
    }
});

// * Investigator class
// Investigator SpellList
[
    // 1st level spells
    "alarm", "blood print", "clue", "comprehend languages", "conjure cover", "consecrated armor", "detect evil and good", "detect magic", "detect poison and disease", "disguise self", "find familiar", "floating disk", "heroism", "identify", "illusory script", "memorize", "purify food and drink", "rumor", "speak with animals", "transient bulwark", "unseen servant", "whispering wind",
    // 2nd level spells
    "animal messenger", "arcane lock", "arcanist's magic aura", "augury", "curse ward", "gentle repose", "jethro's instant reload", "knock", "locate animals or plants", "locate object", "magic mouth", "nondescript", "protect threshold", "see invisibility", "silence", "spider climb", "stone bones", "unseen accountant", "zone of truth",
    // 3rd level spells
    "after image", "benign dismemberment", "clairvoyance", "fly", "geomantic discernment", "magic circle", "meld into stone", "phantom steed", "remove curse", "séance", "sending", "speak with plants", "water breathing", "water walk",
    // 4th level spells
    "dire warning", "distort gravity", "divination", "false vision", "invisibility purge", "locate creature", "private sanctum",
    // 5th level spells
    "commune", "commune with nature", "dream", "legend lore", "scrutinize foe", "telepathic bond",
    // 6th level spells
    "find the path", "forbiddance", "game of fate", "instant summons"
].forEach( function (s) {
    if(SpellsList[s] && SpellsList[s].classes && SpellsList[s].classes.indexOf("investigator") === -1) SpellsList[s].classes.push("investigator");
});

ClassList["investigator"] = {
    name : "Investigator",
    regExpSearch : /^(?=.*investigator).*$/i,
    source : ["VSoS", 103],
    primaryAbility : "Intelligence, Strength or Dexterity",
    prereqs : "Intelligence 13",
    die : 8,
    improvements : [0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,5,5],
    saves : ["Dex", "Int"],
    skillstxt : {
        primary : "\n\n" + toUni("MyClass") + ": Choose three from Arcana, Athletics, Deception, History, Insight, Intimidation, Investigation, Medicine, Nature, Perception, Persuasion, Religion, Sleight of Hand, and Stealth."
    },
    toolProfs : {
        primary : ["Gaming Set"]
    },
    armorProfs : {
        primary : [true, false, false, false],
    },
    weaponProfs : {
        primary : [true, false, ["Hand Crossbow", "Heavy Crossbow", "Longsword", "Rapier", "Shortsword"]]
    },
    equipment : "Investigator starting equipment:" + 
    "\n \u2022 Leather Armor" + 
    "\n \u2022 A dagger and longsword or a rapier" +
    "\n \u2022 A heavy crossbow and 20 bolts or a hand crossbow and 20 bolts" +
    "\n \u2022 A dungeoneer's pack or a priest's pack" +
    "\n \u2022 A grimoire and a component pouch",
    subclasses : ["Occult Specializations", []],
    attacks : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    spellcastingAbility : 4,
    spellcastingFactor : 1,
    spellcastingTable : [[0, 0, 0, 0, 0, 0, 0, 0, 0]].concat(levels.map(function (n) {
		return [0,0,0,0,0,0,0,0,0];
	})),
    spellcastingKnown : {
        spells : "book",
        prepared : false
    },
    features : {
        "expertise" : function() {
            var a = {
                name : "Expertise",
                source : ["VSoS", 104],
                minlevel : 1,
                description : desc("I gain expertise with two skills I am proficient with; two more at 6th level"),
                skillstxt : "Expertise with any two skill proficiencies, and two more at 6th level",
                additional : levels.map(function (n) {
                    return "with " + (n < 6 ? 2 : 4) + " skills";
                }),
                extraname : "Expertise",
                extrachoices : ["Acrobatics", "Animal Handling", "Arcana", "Athletics", "Deception", "History", "Insight", "Intimidation", "Investigation", "Medicine", "Nature", "Perception", "Performance", "Persuasion", "Religion", "Sleight of Hand", "Stealth", "Survival"],
                extraTimes : levels.map(function (n) { return n < 6 ? 2 : 4; }),
            }
            for (var i = 0; i < a.extrachoices.length; i++) {
                var attr = a.extrachoices[i].toLowerCase();
                if (a[attr]) continue;
                a[attr] = {
                    name : a.extrachoices[i] + " Expertise",
                    description : "",
                    source : a.source,
                    skills : [[a.extrachoices[i], "only"]],
                    prereqeval : function(v) {
                        return v.skillProfsLC.indexOf(v.choice) === -1 ? false : v.skillExpertiseLC.indexOf(v.choice) === -1 ? true : "markButDisable";
                    }
                }
            }
            return a;
        }(),
        "ritualist" : {
            name : "Ritualist",
            source : ["VSoS", 104],
            minlevel : 1,
            description : desc([
                "I learn four 1st-level ritual spells from any class' spell list; Int is my spellcasting ability", 
                "I can't cast spells in the grimoire except as rituals, unless from other sources",
                "I can copy spells that I find on my adventures to my grimoire (see notes)",
            ]),
            toNotesPage : [{
                name : "Ritualist",
                note : desc([
                    "\u2022 I can add spells I've found to my grimoire as long as it", 
                    "  is on my class's spell list and able to cast it",
                    "\u2022 I treat specific spells as rituals, even w/out the",
                    "  ritual tag (already included in the spell sheet)",
                    "\u2022 For each level of the spell, it takes 2 hrs and 50 gp to copy it", 
                ])
            }],
            additional : levels.map(function(n) {
                return (n < 3 ? 1 : n < 5 ? 2 : n < 7 ? 3 : n < 9 ? 4 : n < 11 ? 5 : 6) + "th level ritual spells";
            }),
            spellcastingBonus : [{
                name : "Ritualist",
                "class" : "any",
                level : [1, 1],
                ritual : true, // glad to know this works
                times : 4,
            }],
            calcChanges : {
                spellAdd : [
                    function(spellKey, spellObj, spName) {
                        if(spName === "investigator") {
                            spellObj.firstCol = 'markedbox';
                            if(!spellObj.ritual) spellObj.ritual = true;
                        }
                    }
                ]
            }
        },
        "myths and legends" : {
            name : "Myths and Legends",
            source : ["VSoS", 105],
            minlevel : 2,
            description : desc([
                "I have adv. on Int checks related to studying crea, spells, and ancient secrets/lore"
            ])
        },
        "rushed incantation" : {
            name : "Rushed Incantation",
            source : ["VSoS", 105],
            minlevel : 2,
            description: levels.map(function(n) {
                var base = [
                    "I can cast a grimoire spell w/ a cast time of 1 action/bns action as a bns action",
                    "If the spell requires \u2264 100 gp of material comp., I can cast it w/out the comp."
                ];
                var uses = Math.floor((n + 3) / 4); // add uses based on level
                base.push("I can use this feature a number of times equal to my Int mod (min 1) + " + uses + " per long rest");
                return desc(base);
            }),
            usages : "Int mod per ",
            usagescalc : "event.value = Math.max(1, Number(What('Int Mod'))) + (classes.known.investigator ? Math.floor((classes.known.investigator.level + 3) / 4) : 0);",
            recovery : "long rest"
        },
        "subclassfeature3" : {
            name : "Occult Specialization",
            source : ["VSoS", 105],
            minlevel : 3,
            description : desc([
                "Choose an Occult Specialization and put in the \"Class\" field",
                "Each specialization comes with trinkets, and I must be holding it to activate it",
                "When I use a trinket, I can't use it again until I finish a short or long rest",
                "I gain an additional trinket use at 5th (2), 11th (3), and 17th level (4)"
            ]),
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest"
        },
        "exploit weakness" : {
            name : "Exploit Weakness",
            source : ["VSoS", 106],
            minlevel : 5,
            description : desc([
                "When I hit a crea w/ a wea atk, the crea is treated as vulnerable to the wea's dmg", 
                "This only applies to my wea dmg roll. I don't apply extra dmg from sources like", 
                "spells like hunter's mark, magic items like extra fire dmg from flame tongue,",
                "feats like Great Weapon Master or Strike of the Giants, or class Features like sneak attack",
                "Until the start of my next turn, this atk, and all atks vs the target, count as magical"
            ]),
            usages : 1,
            recovery : "Turn"
        },
        "opportunistic piety" : {
            name : "Opportunistic Piety",
            source : ["VSoS", 106],
            minlevel : 7,
            description : desc([
                "When I use this feature, I can choose which effect from the 3rd page notes",
            ]),
            action : [["action", "Miracle Healing"], ["action", "Warding"]],
            toNotesPage : [{
                name : "Opportunistic Piety: Effects",
                note : desc([
                    "\u2022 Banish: I cast banishment w/out a SS. If the target is Fey/Fiend/Undead",
                    "  and fails the save, it takes radiant dmg equal to my character level",
                    "\u2022 Miracle Healing: As an action, I can touch a willing crea to restore hp",
                    "  equal to twice my investigator level. This has no effect on Constructs/Undead",
                    "\u2022 Warding: As an action, I trace a holy symbol on a crea w/in 5 ft warding",
                    "  it from Abber/Celest/Fey/Fiends/Undead for 1 min. If a warded crea is touched",
                    "  or hit w/ a melee atk by one of these crea types, it takes 1d12 radiant dmg"
                ]),
                amendTo : "Ritualist"
            }],
            spellcastingBonus : [{
                name : "Opportunistic Piety",
                spells : ["banishment"],
                selection : ["banishment"],
                times : 1,
                firstCol : "markedbox"
            }]
        },
        "supernatural resolve" : {
            name : "Supernatural Resolve",
            source : ["VSoS", 106],
            minlevel : 9,
            description : desc([
                "I can't be possessed or charmed, and gain resistance to necrotic and psychic dmg"
            ]),
            savetxt : { immune : ["charmed", "possessed"] },
            dmgres : ["Necrotic", "Psychic"]
        },
        "finisher" : {
            name : "Finisher",
            source : ["VSoS", 106],
            minlevel : 11,
            description : desc([
                "Once per turn, when I take the Attack action and hit a crea w/ a wea atk",
                "I can deal an extra 2d8 dmg, or 4d8 if the target is below \u00BD of its max hp",
            ]),
            usages : 1,
            recovery : "Turn"
        },
        "enigma arcane" : {
            name : "Enigma Arcane",
            source : ["VSoS", 106],
            minlevel : 13,
            eval : function() {
                CurrentSpells["investigator-enigma arcane"] = {
                    name : "Enigma Arcane (Investigator)",
                    ability : "investigator",
                    list : {spells : []},
                    known : {cantrips : 0, spells : 'list'},
                    bonus : {
                        bon1 : {
                            name : 'Just select "Full List"',
                            spells : []
                        },
                        bon2 : {
                            name : 'on the bottom left',
                            spells : []
                        }
                    },
                    typeList : 4,
                    refType : "class",
                    allowUpcasting : true,
                    firstCol : ""
                };
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
            removeeval : function () {
                delete CurrentSpells['investigator-enigma arcane'];
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
            calcChanges : {
                spellList : [
                    function(spList, spName, spType) {
                        if(spName === 'investigator-enigma arcane') {
                            if(!classes.known.investigator) return;
                            var cLvl = classes.known.investigator.level;
                            if(cLvl > 12) spList.extraspells = spList.extraspells.concat(["mirage arcane", "plane shift", "reverse gravity", "sequester", "teleport"]);
                            if(cLvl > 14) spList.extraspells = spList.extraspells.concat(["antimagic field", "glibness", "maze", "mind blank"]);
                            if(cLvl > 16) spList.extraspells = spList.extraspells.concat(["astral projection", "gate", "weird"]);
                        }
                    }
                ],
                spellAdd : [
                    function(spellKey, spellObj, spName) {
                        if(spName === 'investigator-enigma arcane' && ["mirage arcane", "plane shift", "reverse gravity", "sequester", "teleport", "antimagic field", "glibness", "maze", "mind blank", "astral projection", "gate", "weird"].indexOf(spellKey) !== -1) {
                            spellObj.firstCol = "oncelr";
                        }
                    }
                ]
            },
            description : levels.map(function(n) {
                var base = [
                    "I can cast one of the following spells once per long rest",
                    "   \u2022 mirage arcane, plane shift, reverse gravity, sequester, or teleport",
                ];
            
                if (n > 14) {
                    base.push(
                        "At 15th level, I can also cast one of the following once per long rest",
                        "   \u2022 antimagic field, glibness, maze, or mind blank"
                    );
                }
                if (n > 16) {
                    base.push(
                        "Additionally at 17th level, I can cast one of the following once per long rest",
                        "   \u2022 astral projection, gate, or weird"
                    );
                }
                
                base.push("Casting spells this way doesn't expend a spell slot");
            
                return desc(base);
            }),
            usages : "1 + 1 at CL15/17",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level > 16 ? 2 : (classes.known.investigator.level > 14 ? 1 : 0)) : 0);",
            recovery : "long rest"
        },
        "exorcist" : {
            name : "Exorcist",
            source : ["VSoS", 106],
            minlevel : 18,
            description : desc([
                "I can cast protection from evil and good w/out material comp. or a spell slot",
            ]),
            spellcastingBonus : [{
                name : "Exorcist",
                spells : ["protection from evil and good"],
                selection : ["protection from evil and good"],
                times : 1,
                firstCol : "oncelr"
            }],
            spellchanges : {
                "protection from evil and good" : {
                    components : "",
					compMaterial : "",
                    changes : "I can cast protection from evil and good without expending a spell slot or material components"
                }
            }
        },
        "spellbinder" : {
            name : "Spellbinder",
            source : ["VSoS", 106],
            minlevel : 20,
            description : desc([
                "I can select up to 5 ritual spells from my grimoire w/ a cast time of 1 action",
                "These spells can be cast as a bns action w/out a use of Rushed Incantation",
                "If the spell requires \u2264 100 gp of material comp., I can cast it w/out the comp.",
                "I can also do this w/out my grimoire on hand"
            ])
        }
    }
}

AddSubClass("investigator", "antiquarian", {
    regExpSearch : /\bantiquarian\b/i,
    subname : "Antiquarian",
    source : ["VSoS", 107],
    features : {
        "subclassfeature3" : {
            name : "Artifact Historian",
            source : ["VSoS", 107],
            minlevel : 3,
            description : desc([
                "I add the identify spell to my grimoire",
                "It doesn't require material comp. when I cast it"
            ]),
            spellcastingBonus : [{
                name : "Artifact Historian",
                spells : ["identify"],
                selection : ["identify"],
                times : 1,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "identify" : {
                    components : "",
                    compMaterial : "",
                    changes : "I can cast identify without expending material components"
                }
            }
        },
        "subclassfeature3.1" : {
            name : "Trinkets",
            source : ["VSoS", 107],
            minlevel : 3,
            description : desc([
                "I've collected trinkets to help collect and unravel arcane secrets (page 3 notes)",
            ]),
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest",
            toNotesPage : [{
                name : "Trinkets",
                page3notes : true,
                note : desc([
                    "Spells cast using Trinkets doesn't expend a SS or require spell components",
                    "\u2022 Hateful Arrowhead: I can cast ray of enfeeblement or scorching ray once",
                    "\u2022 Mirrored Prism: I can cast blur or mirror image once, targetting myself",
                    "\u2022 Razortooth Bandages: I can cast cure wounds or inflict wounds once"
                ]),
                amendTo : "Ritualist"
            }],
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["ray of enfeeblement", "scorching ray", "blur", "mirror image", "cure wounds", "inflict wounds"],
                selection : ["ray of enfeeblement", "scorching ray", "blur", "mirror image", "cure wounds", "inflict wounds"],
                times : 6,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "ray of enfeeblement" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast ray of enfeeblement without expending a spell slot or material components"
                },
                "scorching ray" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast scorching ray without expending a spell slot or material components"
                },
                "blur" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast blur without expending a spell slot or material components"
                },
                "mirror image" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast mirror image without expending a spell slot or material components"
                },
                "cure wounds" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast cure wounds without expending a spell slot or material components"
                },
                "inflict wounds" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast inflict wounds without expending a spell slot or material components"
                }
            }
        },
        "subclassfeature6" : {
            name : "Relics",
            source : ["VSoS", 107],
            minlevel : 6,
            description : desc([
                "I can use one of the following relics once per short or long rest:",
                "\u2022 Antediluvian Dynamo: I cast fireball or lightning bolt",
                "\u2022 Lich's Deathmask: I can cast counterspell or dispel magic",
                "\u2022 Mortal Coil: I can cast animate dead or revivify",
                "  Casting animate dead causes Undead from previous castings to revert to lifeless corpses",
                "Spells cast using Relics doesn't expend a SS or require spell components"
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature10" : {
            name : "Magic Item Collection",
            source : ["VSoS", 108],
            minlevel : 10,
            description : desc([
                "When I finish a long rest, I can produce an item from the \"Choose Feature\" above",
            ]),
            usages : 1,
            recovery : "long rest",
            choices : []
        },
        "subclassfeature14" : {
            name : "Phylactery",
            source : ["VSoS", 108],
            minlevel : 14,
            description : desc([
                "I gain a magic item, the lich's phylactery, that is always attuned to me",
                "It doesn't count against my my total number of attuned magic items",
                "It has 5 charges, regaining 1d4+1 at dawn, to expend one or more from the 3rd page notes",
            ]),
            usages : 5,
            recovery : "dawn",
            toNotesPage : [{
                name : "Lich's Phylactery",
                page3notes : true,
                note : desc([
                    "\u2022 1 Charge: I cast false life at 2nd-level w/out a SS or spell comp.",
                    "\u2022 1 Charge: I use my bns action to regain one expended use of my Trinkets",
                    "\u2022 2 Charges: When I'm reduced to 0 hp but not killed outright, I can use",
                    "  my rea to drop to 1 hp instead",
                    "\u2022 3 charges: I make a melee spell atk vs a crea w/in my reach",
                    "  On a hit, it takes 5d6 necrotic dmg and I regain hp equal to the necrotic dmg dealt",
                ]),
                amendTo : "Ritualist"
            }],
        }
    }
})

AddSubClass("investigator", "archivist", {
    regExpSearch : /\barchivist\b/i,
    subname : "Archivist",
    source : ["VSoS", 108],
    features : {
        "subclassfeature3" : {
            name : "Trinket",
            source : ["VSoS", 108],
            minlevel : 3,
            description : desc([
                "I gain Archaic Scroll to enhance my ritual magic",
                "I can perform a ritual spell w/ my Rushed Incantation feature w/out expending a use",
            ]),
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest"
        },
        "subclassfeature3.1" : {
            name : "Thesis",
            source : ["VSoS", 108],
            minlevel : 3,
            description : desc([
                "Use the \"Choose Feature\" to choose a Thesis",
                "Each Thesis has a list of spells that are added to my grimoire",
                "If a spell isn't on my class's spell list, it's considered part of my class's spell list",
                "I can use my Rushed Incantation feature to cast one of my thesis spells",
            ]),
            choices : ["Corpus", "Ignis", "Mortis", "Regis"],
            "corpus" : {
                name : "Corpus",
                source : ["VSoS", 108],
                description : desc([
                    "I can add the following spells to my grimoire:",
                    "   \u2022 jump, longstrider, alter self, heat metal, gaseous form, meld into stone",
                    "If a spell isn't on my class's spell list, it's considered part of my class's spell list",
                    "I can use my Rushed Incantation feature to cast my thesis spells",
                ]),
                spellcastingExtra : ["jump", "longstrider", "alter self", "heat metal", "gaseous form", "meld into stone"],
                spellcastingExtraApplyNonconform : true
            },
            "ignis" : {
                name : "Ignis",
                source : ["VSoS", 108],
                description : desc([
                    "I can add the following spells to my grimoire:",
                    "   \u2022 burning hands, thunderwave, gust of wind, scorching ray, call lightning, wind wall",
                    "If a spell isn't on my class's spell list, it's considered part of my class's spell list",
                    "I can use my Rushed Incantation feature to cast my thesis spells",
                ]),
                spellcastingExtra : ["burning hands", "thunderwave", "gust of wind", "scorching ray", "call lightning", "wind wall"],
                spellcastingExtraApplyNonconform : true,
            },
            "mortis" : {
                name : "Mortis",
                source : ["VSoS", 108],
                description : desc([
                    "I can add the following spells to my grimoire:",
                    "   \u2022 bane, false life, blindness/deafness, darkness, revivify, vampiric touch",
                    "If a spell isn't on my class's spell list, it's considered part of my class's spell list",
                    "I can use my Rushed Incantation feature to cast my thesis spells",
                ]),
                spellcastingExtra : ["bane", "false life", "blindness/deafness", "darkness", "revivify", "vampiric touch"],
                spellcastingExtraApplyNonconform : true,
            },
            "regis" : {
                name : "Regis",
                source : ["VSoS", 108],
                description : desc([
                    "I can add the following spells to my grimoire:",
                    "   \u2022 charm person, hideous laughter, enthrall, suggestion, dispel magic, hypnotic pattern",
                    "If a spell isn't on my class's spell list, it's considered part of my class's spell list",
                    "I can use my Rushed Incantation feature to cast my thesis spells",
                ]),
                spellcastingExtra : ["charm person", "tasha's hideous laughter", "enthrall", "suggestion", "dispel magic", "hypnotic pattern"],
                spellcastingExtraApplyNonconform : true
            },
        },
        "subclassfeature6" : {
            name : "Erudite Spell",
            source : ["VSoS", 109],
            minlevel : 6,
            description : desc([
                "When I cast a spell requiring a crea to make a saving throw to resist its effects",
                "I can give a target of the spell disadv. on its first saving throw vs. the spell",
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature10" : {
            name : "Encyclopedic Expertise",
            source : ["VSoS", 109],
            minlevel : 10,
            description : desc([
                "I can identify any spell I witness being cast or investigate a magical effect",
                "Whether it's a spell, the magic item responsible, or the monster that produced it",
                "This fails if the effect is unique or it's not recorded in arcane texts"
            ])
        },
        "subclassfeature14" : {
            name : "Eidetic Memory",
            source : ["VSoS", 109],
            minlevel : 14,
            description : desc([
                "I can copy any spell I see being cast into my grimoire",
                "If the spell is 5th lvl or lower, have a cast time of 1 action, doesn't require",
                "expensive material comp, and has been cast w/in the last minute, I can use my",
                "action and spend a use of Rushed Incantation to cast the spell myself w/out a SS"
            ]),
            action : ["action", ""]
        }
    }
});

AddSubClass("investigator", "detective", {
    regExpSearch : /\bdetective\b/i,
    subname : "Detective",
    source : ["VSoS", 109],
    features : {
        "subclassfeature3" : {
            name : "Investigator's Hunch",
            source : ["VSoS", 109],
            minlevel : 3,
            description : desc([
                "I can unravel mysteries by studying clues and documents for 10 min",
                "I make Int checks related to these clues with adv."
            ])
        },
        "subclassfeature3.1" : {
            name : "Trinkets",
            source : ["VSoS", 109],
            minlevel : 3,
            description : desc([
                "I collect magical trinkets that help in investigation and tracking (page 3 notes)",
            ]),
            toNotesPage : [{
                name : "Trinkets",
                page3notes : true,
                note : desc([
                    "I can cast the following spells as a bns action w/out a SS or spell components:",
                    "\u2022 Fogstone Periapt: misty step",
                    "\u2022 Glass Medallion: invisibility",
                    "\u2022 Skeletons Key: knock"
                ]),
                amendTo : "Ritualist"
            }],
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest",
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["misty step", "invisibility", "knock"],
                selection : ["misty step", "invisibility", "knock"],
                times : 3,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "misty step" : {
                    components : "",
                    changes : "I can cast misty step as a bns action w/out a SS or spell components"
                },
                "invisibility" : {
                    components : "",
                    compMaterial : "",
                    range : "Self",
                    time : "1 bns",
                    changes : "I can cast invisibility on myself as a bns action w/out a SS or spell components"
                },
                "knock" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast knock as a bns action w/out a SS or spell components"
                }
            }
        },
        "subclassfeature6" : {
            name : "Predictive Intuition",
            source : ["VSoS", 109],
            minlevel : 6,
            description : desc([
                "As a bns action, I can analyze a visible crea's movement w/in 30 ft of me",
                "Choose one of the following effects, lasting until the start of my next turn:",
                "\u2022 I can add 1d6 to my next atk roll vs the crea",
                "\u2022 I can subtract 1d6 from the crea's next atk roll vs me"
            ]),
            action : ["bonus action", ""]
        },
        "subclassfeature10" : {
            name : "Interrogator's Instinct",
            source : ["VSoS", 109],
            minlevel : 10,
            description : desc([
                "I can tell if an audible crea speaking is charmed, possessed, or enchanted",
                "against their will, and I have adv on ability chks to determine if I hear a lie"
            ])
        },
        "subclassfeature14" : {
            name : "Power of Deduction",
            source : ["VSoS", 109],
            minlevel : 14,
            description : desc([
                "As an action, I can analyze a visible crea w/in 30 ft of me",
                "For the next min, I have adv on Int and Cha checks to interact w/ the crea",
                "Additionally, I have adv on atk rolls against it"
            ]),
            usages : 1,
            recovery : "short rest"
        }
    }
});

AddSubClass("investigator", "exterminator", {
    regExpSearch : /\bexterminator\b/i,
    subname : "Exterminator",
    source : ["VSoS", 110],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 110],
            minlevel : 3,
            description : desc([
                "I gain proficiancy with martial weapons and medium armor"
            ]),
            armorProfs : [true, true, false, false],
            weaponProfs : [true, false]
        },
        "subclassfeature3.1" : {
            name : "Trinkets",
            source : ["VSoS", 110],
            minlevel : 3,
            description : desc([
                "I've collected trinkets to eliminate monsters and other threats (page 3 notes)"
            ]),
            toNotesPage : [{
                name : "Trinkets",
                note : desc([
                    "\u2022 Consecrated Whetstone: As a bns action, I can cast magic weapon", 
                    "  w/out a SS or spell comp",
                    "\u2022 Gilded Dragon Scale: As a bns action, I gain resistance to one", 
                    "  dmg type of my choice for 1 min",
                    "\u2022 Wyverntooth Necklace: When I hit a crea w/ a wea atk, I can use my", 
                    "  bns action to deal an extra 2d6 poison dmg to the crea"
                ]),
                amendTo : "Ritualist"
            }],
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["magic weapon"],
                selection : ["magic weapon"],
                times : 1,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "magic weapon" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast magic weapon as a bns action w/out a SS or spell components"
                }
            }
        },
        "subclassfeature6" : {
            name : "Monster Slayer",
            source : ["VSoS", 110],
            minlevel : 6,
            description : desc([
                "When I take the atk action, I can make a wea atk as a bns action",
            ]),
            usages : "Int mod per ",
            usagescalc : "event.value = Math.max(1, Number(What('Int Mod')));",
            recovery : "short rest",
            action : ["bonus action", ""]
        },
        "subclassfeature10" : {
            name : "Silvered Edge",
            source : ["VSoS", 110],
            minlevel : 10,
            description : desc([
                "When I deal dmg to a crea w/ a wea atk, it cant regain hp until",
                "the start of my next turn. If I reduce a crea to 0 hp, it can't",
                "raised as an Undead crea nor be returned to life by any means",
                "short of the wish spell for 7 days"
            ])
        },
        "subclassfeature14" : {
            name : "Killer Instinct",
            source : ["VSoS", 110],
            minlevel : 14,
            description : desc([
                "I can use my Exploit Weakness feature twice on my turn",
                "But I can't use it against the same target more than once"
            ])
        }
    }
});

AddSubClass("investigator", "inquisitor", {
    regExpSearch : /\binquisitor\b/i,
    subname : "Inquisitor",
    source : ["VSoS", 110],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 110],
            minlevel : 3,
            description : desc([
                "I gain proficiancy with medium armor"
            ]),
            armorProfs : [true, true, false, false],
        },
        "subclassfeature3.1" : {
            name : "Exorcist's Doctrines",
            source : ["VSoS", 110],
            minlevel : 3,
            description : desc([
                "I gain proficiency and expertise w/ Religion"
            ]),
            skills : ["Religion", "full"]
        },
        "subclassfeature3.2" : {
            name : "Trinkets",
            source : ["VSoS", 110],
            minlevel : 3,
            description : desc([
                "I've collected trinkets to banish restless spirits and demons (page 3 notes)"
            ]),
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest",
            toNotesPage : [{
                name : "Trinkets",
                note : desc([
                    "I can cast the following spells as a bns action w/out a SS or spell components:",
                    "\u2022 Alabaster Blam: As a bns action, I cast lesser restoration",
                    "   w/out a SS or spell comp",
                    "\u2022 Hallowed Chalice: I produce a cup of holy water to fill 5 flasks, lasting 24 hrs",
                    "\u2022 Reliquary of Doubt: As a bns action, I cast detect thought only detecting",
                    "  thoughts associated with negative emotions",
                ]),
                amendTo : "Ritualist"
            }],
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["lesser restoration", "detect thoughts"],
                selection : ["lesser restoration", "detect thoughts"],
                times : 2,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "lesser restoration" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast lesser restoration as a bns action w/out a SS or spell components"
                },
                "detect thoughts" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast detect thoughts as a bns action w/out a SS or spell components"
                }
            },
            action : ["bonus action", ""]
        },
        "subclassfeature6" : {
            name : "Divine Strike",
            source : ["VSoS", 110],
            minlevel : 6,
            description : desc([
                "Once per turn when I hit a crea w/ a wea atk, I can deal an extra 1d6 radiant dmg"
            ]),
            usages : 1,
            recovery : "Turn",
            calcChanges : {
                atkAdd : [
                    function(fields,v) {
                        if(classes.known.investigator && v.isWeapon) {
                            fields.Description += (fields.Description ? '; ' : '') + "Once per turn +1d6 radiant dmg";
                        }
                    }
                ]
            }
        },
        "subclassfeature10" : {
            name : "Rote Piety",
            source : ["VSoS", 111],
            minlevel : 10,
            description : desc([
                "I can use my Opportunistic Piety feature three times instead of once"
            ]),
            bonusClassExtrachoices : [{
                "class" : "investigator",
                "feature" : "opportunistic piety",
                "bonus" : 2
            }],
        },
        "subclassfeature14" : {
            name : "Excommuncation",
            source : ["VSoS", 111],
            minlevel : 14,
            description : desc([
                "As an action, I can mark a crea w/in 60 ft of me. The crea must make",
                "a Con or Wis saving throw of my choice or be marked for 1 min.",
                "A marked crea cannot regain hp or ave adv on any atk roll or ability chk",
                "Additionally, whenever the crea takes an action, it takes 2d6 radiant dmg"
            ]),
            usages : 1,
            recovery : "short rest",
            action : ["action", ""],
            additional : "Con or Wis save of my choice"
        }
    }
});

AddSubClass("investigator", "medium", {
    regExpSearch : /\bmedium\b/i,
    subname : "Medium",
    source : ["VSoS", 111],
    features : {
        "subclassfeature3" : {
            name : "Fortelling",
            source : ["VSoS", 111],
            minlevel : 3,
            description : desc([
                "When I finish a long rest, I roll two d20s and record the results",
                "I can replace any ability check, atk roll, or saving throw with it",
                "I can choose myself or must be able to see the crea to do so",
                "But must choose before they roll, and only replacing a roll once per turn",
                "As an action, I can use Rushed Incantation to make an extra foretold roll",
                "I can have up to 3 foretold rolls at a time, each only being used once",
                "I lose any unused foretold rolls on a long rest"
            ]),
            additional : "max 3",
            usages : 1,
            recovery : "long rest"
        },
        "subclassfeature3.1" : {
            name : "Trinkets",
            source : ["VSoS", 111],
            minlevel : 3,
            description : desc([
                "I've collected trinkets to help me attune to the afterlife (page 3 notes)"
            ]),
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest",
            toNotesPage : [{
                name : "Trinkets",
                note : desc([
                    "\u2022 Dead Ringer: As an action, I can cast speak with dead once", 
                    "  w/out a SS or spell comp., asking only one question",
                    "\u2022 Heptagonal Spectacles: As a bns action, I can cast see invisibility", 
                    "  once w/out a SS or spell comp.",
                    "\u2022 Lucent Mirror: As a bns action, I can phase into the Ethereal Plane for a min",
                    "  For the duration I can move through crea(s) and obj(s) as if it were", 
                    "  difficult terrain, taking 1d10 forcedmg if I end my turn inside of a crea or obj",
                    "  I also gain resistance to all dmg while like this",
                    "  This effect ends early if I take any dmg",
                ]),
                amendTo : "Ritualist",
            }],
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["speak with dead", "see invisibility"],
                selection : ["speak with dead", "see invisibility"],
                times : 2,
                firstCol : "markedbox"
            }],
            spellChanges : {
                "speak with dead" : {
                    components : "",
                    compMaterial : "",
                    time : "1 action",
                    description : "1 corpse with mouth answers a question with what it knew in life; can cast on same every 10 days",
                    changes : "I can cast speak with dead as an action w/out a SS or spell components. I can only ask the corpse one question."
                },
                "see invisibility" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast see invisibility as a bns action w/out a SS or spell components."
                }
            },
            action : [["action", " (Dead Ringer)"], ["bonus action", " (Heptagonal Spectacles)"], ["bonus action", " (Lucent Mirror)"]]
        },
        "subclassfeautre6" : {
            name : "Forewarning Presence",
            source : ["VSoS", 112],
            minlevel : 6,
            description : desc([
                "I can reroll an atk roll, ability check, or saving throw and must use the new roll",
                "I can do this after I make the roll, but before the GM determines the outcome"
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature10" : {
            name : "Whispers From Beyond",
            source : ["VSoS", 112],
            minlevel : 10,
            description : desc([
                "As an action I receive a one-word hint from the GM for the best course of action",
            ]),
            usages : 1,
            recovery : "long rest"
        },
        "subclassfeature14" : {
            name : "Third Eye",
            source : ["VSoS", 112],
            minlevel : 14,
            description : desc([
                "As a bns action, I can cast true seeing w/out a SS or spell components"
            ]),
            action : ["bonus action", ""],
            spellcastingBonus : [{
                name : "Third Eye",
                spells : ["true seeing"],
                selection : ["true seeing"],
                times : 1,
                firstCol : "oncelr"
            }]
        }
    }
});

AddSubClass("investigator", "occultist", {
    regExpSearch :  /occultist/i,
    subname : "Occultist",
    source : ["VSoS", 112],
    spellcastingTable : [,
        [0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,0,0],
        [2,0,0,0,0,0,0,0,0],
        [2,0,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,2,0,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,2,0,0,0,0,0,0],
        [0,0,0,2,0,0,0,0,0],
        [0,0,0,2,0,0,0,0,0],
    ],
    features : {
        "subclassfeature3" : {
            name : "Trinket",
            source : ["VSoS", 112],
            minlevel : 3,
            description : desc([
                "I've gained the Rune Keeper's Eyeglass",
                "As a bns action, I can activate it to gain the ability to read all writing for 1 hr"
            ]),
            action : ["bonus action", ""],
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest"
        },
        "subclassfeature3.1" : {
            name : "Pact Magic",
            source : ["VSoS", 112],
            minlevel : 3,
            description : desc([
                "I can cast known warlock spells/cantrips using Int as my spellcasting ability",
                "When I gain a lvl in this class, I can replace one of my spells with another warlock spell",
                "I regain expended spell slots on a short/long rest"
            ]),
            eval : function() {
                var lvl = classes.known.investigator && classes.known.investigator.level ? classes.known.investigator.level : 0;
                CurrentSpells["investigator-occultist"] = {
                    name : "Pact Magic (Investigator)",
                    ability : "investigator",
                    level : lvl,
                    typeSp : "known",
                    refType : "class",
                    list : {
                        "class" : "warlock",
                    },
                    known : {
                        cantrips : [0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3], 
                        spells : [0,0,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,11],
                        factor : [6, "warlock"],
                        spellsTable : false,
                    },
                    allowUpcasting : true
                };
            },
            removeeval : function () {
                delete CurrentSpells['investigator-occultist'];
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            }
        },
        "subclassfeature6" : {
            name : "Eldritch Ruin",
            source : ["VSoS", 113],
            minlevel : 6,
            description : desc([
                "I can forgo dealing extra dmg w/ Exploit Weakness to cast a cantrip as a bns action"
            ]),
            action : ["bonus action", " (w/Exploit Weakness)"],
        },
        "subclassfeature10" : {
            name : "Eyes of Another World",
            source : ["VSoS", 113],
            minlevel : 10,
            description : desc([
                "I can see invis. crea. and obj. or if they're on the Ethereal Plane",
                "I can see the true form of shapechangers or crea. whose form has been altered by magic",
                "Additionally, I can immediately detect if a visible crea is possessed"
            ]),
            vision : [["Invis. crea/obj or on Ethereal Plane", 0], ["Shapechangers/crea altered by magic true form", 0], ["Possessed crea.", 0]]
        },
        "subclassfeature14" : {
            name : "Maleficium",
            source : ["VSoS", 113],
            minlevel : 14,
            description : desc([
                "I can cast bestow curse as a bns action when I use Exploit Weakness",
                "This doesn't require a SS, spell components, and the target has disadv. on the save"
            ]),
            usages : 1,
            recovery : "short rest",
            spellcastingBonus : [{
                name : "Maleficium",
                spells : ["bestow curse"],
                selection : ["bestow curse"],
                times : 1,
                firstCol : "oncelr"
            }],
            spellChanges : {
                "bestow curse" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast bestow curse without expending a spell slot or material components as a bonus action"
                }
            }
        }
    }
});

AddSubClass("investigator", "spy", {
    regExpSearch : /spy/i,
    subname : "Spy",
    source : ["VSoS", 113],
    features : {
        "subclassfeature3" : {
            name : "Bravado",
            source : ["VSoS", 113],
            minlevel : 3,
            description : desc([
                "I gain proficiency in Deception, and can use Int instead of Cha for Deception checks"
            ]),
            skills : ["Deception"],
            addMod : {
                type : "skill", field : "Deception", mod : "max(Int-Cha|0)"
            }
        },
        "subclassfeature3.1" : {
            name : "Trinkets",
            source : ["VSoS", 113],
            minlevel : 3,
            description : desc([
                "I've collected trinkets to aid in espionage (page 3 notes)",
            ]),
            action : ["bonus action", ""],
            usages : "1 + 1 at CL5/11/17 ",
            usagescalc : "event.value = 1 + (classes.known.investigator ? (classes.known.investigator.level >= 17 ? 3 : classes.known.investigator.level >= 11 ? 2 : classes.known.investigator.level >= 5 ? 1 : 0) : 0);",
            recovery : "short rest",
            toNotesPage : [{
                name : "Trinkets",
                note : desc([
                    "\u2022 Glass Dust: As a bns action, I throw dust in the air, becoming invisible",
                    "  until the start of my next turn. This ends early if I take dmg",
                    "\u2022 Horn-Rimmed Glasses: As a bns action, I cast disguise self w/out", 
                    "  a SS or spell comp.",
                    "\u2022 Martini Glass: As a bns action, I cast suggestion w/out a SS or spell comp.",
                ]),
                amendTo : "Ritualist"
            }],
            spellcastingBonus : [{
                name : "Trinkets",
                spells : ["disguise self", "suggestion"],
                selection : ["disguise self", "suggestion"],
                times : 2,
                firstCol : "oncelr"
            }],
            spellChanges : {
                "disguise self" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast disguise self without expending a spell slot or spell components as a bonus action"
                },
                "suggestion" : {
                    components : "",
                    compMaterial : "",
                    time : "1 bns",
                    changes : "I can cast suggestion without expending a spell slot or spell components as a bonus action"
                }
            }
        },
        "subclassfeature6" : {
            name : "Cloak and Dagger",
            source : ["VSoS", 113],
            minlevel : 6,
            description : desc([
                "I can roll max dmg on my wea's dmg dice if I make an atk roll vs",
                "a surprised crea or if they haven't taken their turn in combat yet"
            ])
        },
        "subclassfeature10" : {
            name : "Shaken Not Stirred",
            source : ["VSoS", 113],
            minlevel : 10,
            description : desc([
                "I can reroll a failed Deception or Persuasion check, but must use the new roll",
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature14" : {
            name : "Body Double",
            source : ["VSoS", 113],
            minlevel : 14,
            description : desc([
                "If I reduce a Humanoid to 0 hp, I can use my rea to assume their appearance",
                "as per disguise self; All physical evidence of its death becomes invis. for 8 hrs",
                "This also works on Humanoid corpse's if they're dead fewer than 24 hrs",
            ]),
            usages : 1,
            recovery : "long rest"
        }
    }
})

RunFunctionAtEnd(function() {
    if(ClassList["investigator"] && ClassSubList["investigator-antiquarian"]) {
        var subclassFea = ClassSubList["investigator-antiquarian"].features["subclassfeature10"];
        var choices = ["Carpet of Flying", "Cloak of the Bat", "Flame Tongue", "Gauntlets of Ogre Power", "Daern's Instant Fortress", "Ring of Regeneration", "Ring of Telekinesis", "Sun Blade", "Wand of Wonder"];

        for(var i = 0; i < choices.length; i++) {
            var choice = choices[i];
            var cLC = choice.toLowerCase();
            if(!MagicItemsList[cLC]) continue;
            var item = MagicItemsList[cLC];
            // If the magic item has choices
            if(item.choices) {
                for(var j = 0; j < item.choices.length; j++) {
                    var cNameLC = item.choices[j].toLowerCase();
                    var theChoice = item[cNameLC];
                    if(!theChoice.name || subclassFea[theChoice.name.toLowerCase()]) continue;
                    subclassFea[theChoice.name.toLowerCase()] = {
                        name : theChoice.name,
                        source : theChoice.source,
                        description : "",
                        magicitemsAdd : [theChoice.name],
                        additional : theChoice.attunement ? "requires attunement" : undefined,
                    }
                    if (choices.indexOf(theChoice.name) === -1) choices.push(theChoice.name);
                }
                // Remove the original choice, and instead add it's choices
                if(choices.indexOf(choice) === -1) continue;
                choices.splice(choices.indexOf(choice), 1);
                i--;
            } else { //magic item doenst have choices
                var nameLC = item.name.toLowerCase();
                if(subclassFea[nameLC]) continue;
                subclassFea[nameLC] = {
                    name : item.name,
                    source : item.source,
                    description : "",
                    magicitemsAdd : [item.name],
                    additional : item.attunement ? "requires attunement" : undefined,
                }
            }
        }
        subclassFea.choices = choices;
    }
});

// * Martyr class

[
    // 1st level spells
    "bless", "blood print", "boomering", "burnt offering", "command", "cure wounds", "detect evil and good", "detect magic", "detect poison and disease", "guiding bolt", "heroism", "indemnify", "inflict wounds", "instant replay", "protection from evil and good", "purify food and drink", "sanctuary", "shield of faith", "transient bulwark",
    // 2nd level spells
    "aid", "augury", "curse ward", "gentle repose", "halo of flame", "hold person", "lesser restoration", "locate object", "magic weapon", "protection from ballistics", "protection from poison", "stone bones", "warding bond", "zone of truth",
    // 3rd level spells
    "create food and water", "daylight", "dispel magic", "magic circle", "pillar of salt", "polybrachia", "protection from energy", "remove curse", "revivify", "snakestaff", "speak with dead", "tongues",
    // 4th level spells
    "banishment", "death ward", "divination", "locate creature", "stoneskin",
    // 5th level spells
    "commune", "dispel evil and good", "flame strike", "geas", "greater restoration", "hallow", "insect plague", "mass cure wounds", "raise dead"
].forEach( function (s) {
    if(SpellsList[s] && SpellsList[s].classes && SpellsList[s].classes.indexOf("martyr") === -1) SpellsList[s].classes.push("martyr");
});

ClassList["martyr"] = {
    name: "Martyr",
    regExpSearch: /martyr/i,
    source: ["VSoS", 115],
    primaryAbility : "Constitution and Wisdom",
    prereqs : "Constitution 13 and Wisdom 13",
    die : 12,
    armorProfs: {
        primary: [true, true, false, true],
        secondary: [true, true, false, true]
    },
    weaponProfs: {
        primary: [true, true],
        secondary: [true, true]
    },
    saves : ["Wis", "Str"],
    skillstxt: {
        primary: "Choose two from Athletics, History, Insight, Intimidation, Medicine, Persuasion, and Religion",
    },
    equipment: "Alchemist starting equipment: " +
        "\n \u2022 A martial weapon and a shield or two martial weapons;" +
        "\n \u2022 Scale mail or chain mail (if proficient);" +
        "\n \u2022 A light crossbow and 20 bolts or any simple weapon;" +
        "\n \u2022 A priest's pack or (b) an explorer's pack;" +
        "\n \u2022 A holy symbol",
    subclasses : ["Mortal Burden",[]],
    attacks : [1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    improvements: [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5],
    abilitySave : 5,
    spellcastingFactor : 2,
    spellcastingKnown : {
        cantrips : [],
        spells : "list",
        prepared: true,
    },
    spellcastingList: {
        "class": "martyr",
    },
    features : {
        "subclassfeature1" : {
            name : "Mortal Burden",
            source : ["VSoS", 116],
            minlevel : 1,
            description : desc([
                "Choose a Mortal Burden in the \"Class\" field."
            ])
        },
        "ordained death" : {
            name : "Ordained Death",
            source : ["VSoS", 117],
            minlevel : 1,
            description : desc([
                "When I fall to 0 hp and being to make death saving throws, I must fail 5 saving throws to die.",
                "If a creature casts a spell to restore me to life, but not undeath, they don't need material",
                "components to cast the spell on me"
            ])
        },
        "mask of the herald" : {
            name : "Mask of the Herald",
            source : ["VSoS", 117],
            minlevel : 2,
            description : desc([
                "I have adv. on all ability checks to convince creatures to assist me in service of my holy cause"
            ])
        },
        "spellcasting" : {
            name : "Spellcasting",
            source : ["VSoS", 117],
            minlevel : 2,
            description : desc([
                "I can prepare a number of spells equal to my Wisdom mod + \u00BD my martyr level",
                "I can cast martyr spells that I know using Wisdom as my spellcasting ability.",
                "I must sacrifice my hp to cast these spells, and this damage cannot be reduced in anyway.",
                "The amount of hp sacrificed per spell level can be found on 3rd page notes.",
                "I don't make Constitution throws to maintain concentration on spells",
                "as a result of losing hp, and can't regain hp from any spell I cast.",
                "I can use a holy symbol as a spellcasting focus for my martyr spells"
            ]),
            toNotesPage : [{
                name : "Hit Points Spellcasting",
                note : desc([
                    "Spell Level            HP Cost",
                    "     1st                        5",
                    "     2nd                      10",
                    "     3rd                       20",
                    "     4th                       30",
                    "     5th                       45"
                ]),
                page3notes : true
            }]
        },
        "sainted reprisal" : {
            name : "Sainted Reprisal",
            source : ["VSoS", 117],
            minlevel : 2,
            description : desc([
                "When a creature within 5 ft of me hits me with a melee attack, I can use my reaction",
                "to deal 1d6 necrotic or radiant damage to that creature. ",
                "This increases by 1d6 when I reach 5th level (2d6), 11th level (3d6), and 17th level (4d6)."
            ]),
            additional : levels.map(function(n) { 
                return n < 5 ? "1" : n < 11 ? "2" : n < 17 ? "3" : "4" + "d6 radiant or necrotic";
            }),
            action : ["reaction", "Sainted Reprisal"]
        },
        "divine healing" : {
            name : "Divine Healing",
            source : ["VSoS", 117],
            minlevel : 3,
            description : desc([
                "As an action, I can spend HD up to my proficiency bonus to regain hp",
            ]),
            action : ["action", "Divine Healing"]
        },
        "torment" : {
            name : "Torment",
            source : ["VSoS", 118],
            minlevel : 3,
            description : desc([
                "Once per turn, I can sacrifice 5 hp to deal +10 bonus radiant or necrotic damage.",
                "I don't make Constitution throws to maintain concentration on spells when I use this ability.",
                "At 11th level, I can choose to sacrifice 10 hp to deal +20 bonus radiant or necrotic damage.",
            ]),
            additional : levels.map(function(n) { 
                return n < 11 ? "-5 hp, +10 radiant/necro" : "-10 hp, +20 radiant/necro";
            }),
            usages : 1,
            recovery : "Turn",
        },
        "respite" : {
            name : "Respite",
            source : ["VSoS", 118],
            minlevel : 7,
            description : desc([
                "I regain all expended HD when I finish a long rest, instead of only half of them."
            ])
        },
        "undying conviction" : {
            name : "Undying Conviction",
            source : ["VSoS", 118],
            minlevel : 10,
            description : desc([
                "When I am reduced to 0 hp and not killed outright, I can drop to 1 hp instead."
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "march unto destiny" : {
            name : "March Unto Destiny",
            source : ["VSoS", 118],
            minlevel : 15,
            description : desc([
                "I no longer need to eat or drink, and can't be paralyzed, petrified, or stunned.",
            ]),
            savetxt : {
                immune : ["paralyzed", "petrified", "stunned"]
            }
        },
        "final martyrdom" : {
            name : "Final Martyrdom",
            source : ["VSoS", 118],
            minlevel : 20,
            description : desc([
                "As an action, I can become immune to all damage for 10 minutes. For this duration, I can't",
                "be blinded, charmed, deafened, exhausted, frightened, incapacitated, poisoned, restrained, or",
                "rendered unconscious. I have adv. on all ability checks, attack rolls, and saving throws.",
                "I can also cast the wish spell once during the duration without expending a spell slot or hp.",
                "If I use the spell to produce any effect other than duplicating another spell, the stress", 
                "of casting it doesn't reduce my Strength or cause me to take necrotic damage.",
                "When the duration ends, I die. No force short of divine intervention can bring me back to life."
            ]),
        }
    }
};

// * Burden of atonement martyr subclass
AddSubClass("martyr", "burden of atonement", {
    regExpSearch : /atonement/i,
    subname : "Burden of Atonement",
    source : ["VSoS", 119],
    spellcastingExtra : ["cure wounds", "sanctuary", "calm emotions", "lesser restoration", "remove curse", "speak with dead", "death ward", "fire shield", "greater restoration", "mass cure wounds"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 121],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against", 
                "the total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Bonus Proficiency",
            source : ["VSoS", 119],
            minlevel : 1,
            description : desc([
                "I gain proficiency with heavy armor."
            ]),
            armorProfs : [true, true, true, true],
        },
        "subclassfeature1.2" : {
            name : "Self-Sacrifice",
            source : ["VSoS", 119],
            minlevel : 1,
            description : desc([
                "Once per short rest when a friendly creature within 5 ft is targeted by an attack and I am",
                "within the attack's range or reach, I can use my reaction to have it target me instead.",
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature6" : {
            name : "Bloody Reprieve",
            source : ["VSoS", 119],
            minlevel : 6,
            description : desc([
                "When I Torment a hostile crea and is reduced to 0 hp, I take no damage instead."
            ])
        },
        "subclassfeature14" : {
            name : "Draw Aggression",
            source : ["VSoS", 119],
            minlevel : 14,
            description : desc([
                "As a bonus action on my turn, each hostile creature within 5 ft that can see or hear me has",
                "disadv. on attack rolls against creatures other than me, and adv. on attack rolls against me.",
            ]),
            action : ["bonus action", ""]
        },
        "subclassfeature18" : {
            name : "Sin Eater",
            source : ["VSoS", 120],
            minlevel : 18,
            description : desc([
                "I can transfer negative effects from any number of willing creatures within 60 ft to myself.",
                "I can transfer one of the following effects found on 3rd page notes from each creature.",
                "The effect ends for the creature and targets me, with the effect's original duration.",
                "I can transfer multiple effects of the same type to myself, affecting only once."
            ]),
            toNotesPage : [{
                name : "Sin Eater: Effects",
                page3notes : true,
                note : desc([
                    "\u2022 One level of exhaustion",
                    "\u2022 One disease or poison",
                    "\u2022 One curse, including curses caused by attunement",
                    "\u2022 Any reduction to the target's ability scores",
                    "\u2022 One effect reducing the target's hp max",
                    "\u2022 The blinded, charmed, deafened, paralyzed, petrified, poisoned, or stunned condition"
                ])
            }]
        }
    }
});

// * Burden of discord martyr subclass
AddSubClass("martyr", "burden of discord", {
	regExpSearch : /discord/i,
	subname : "Burden of Discord",
	source : ["VSoS", 120],
	spellcastingExtra : ["hideous laughter", "inflict wounds", "knock", "shatter", "lightning bolt", "stinking cloud", "confusion", "polymorph", "animate objects", "passwall"],
	features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 121],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against the total amount of spells I know."
            ])
        },
		"subclassfeature1.1" : {
			name : "Cantrips",
			source : ["VSoS", 120],
			minlevel : 1,
			description : desc([
				"I learn the shocking grasp and thaumaturgy cantrips, and one other cantrip",
				"of my choice from the cleric's spell list."
			]),
			spellcastingBonus : [{
				name : "Cantrips",
				spells : ["shocking grasp", "thaumaturgy"],
				selection : ["shocking grasp", "thaumaturgy"],
                spellcastingAbility : 5,
				times : 2
			}, {
				name : "Cantrips: cleric spell list",
				"class" : "cleric",
				level : [0,0],
                spellcastingAbility : 5,
				times : 1
			}]
		},
		"subclassfeature1.2" : {
			name : "Havoc!",
			source : ["VSoS", 120],
			minlevel : 1,
			additional : "d10",
			description : desc([
				"When I hit a hostile feature with a melee weapon attack, I can roll a d10 trigger an additional",
				"effect from the table found on the page 3 notes. Once I usee this feature, I can't use it again",
				"until I finish a short rest.",
			]),
			usages : 1,
			recovery : "short rest",
			toNotesPage : [{
				name : "Havoc!: Effects",
				page3notes : true,
				note : desc([
					"1	 Me and the target teleport, switching places.",
					"2	 Me and the target take 3d6 lightning damage.",
					"3	 The target vocalizes their innermost thought for 1 minute.",
					"4	 I cast darkness centered on the target.",
					"5	 I become invisible until the end of my next turn, as per the\n   invisibility spell.",
					"6 	 Target takes 1d4+1d4/Turn fire dmg until a creature uses an action\n   to put it out.",
					"7 	 Target's AC is reduced by 3 until the end of its next turn to a minimum of 10.",
					"8	 The target falls prone.",
					"9	 Object of GM's choice explodes dealing 8d6 fire damage to each crea within\n   a 20-ft raidus.",
					"10	 Roll on this table twice and apply both results, rereolling any 10s.",
				])
			}]
		},
		"subclassfeature6" : {
            name : "Bloody Reprieve",
            source : ["VSoS", 121],
            minlevel : 6,
            description : desc([
                "When I Torment a hostile crea and is reduced to 0 hp, I take no damage instead."
            ])
        },
		"subclassfeature14" : {
			name : "Coin of Chaos",
			source : ["VSoS", 121],
			minlevel : 14,
			description : desc([
				"Whenever a creature that I can see, myself included, makes an attack roll, ability check, or",
				"saving throw, I can flip a coin to add a bonus to the roll. The bonus equals +4 on heads or",
				"+1 on tails. Once I use this coin, it goes to the GM, who can use it to enhance any roll made",
				"by an NPC or monster. Once the GM uses the coin it passes back to me, and so on. I regain",
				"the coin on a short rest whether or not the GM has used it."
			])
		},
		"subclassfeature18" : {
			name : "Pandemonium",
			source : ["VSoS", 121],
			minlevel : 18,
			description : desc([
				"I can use my Havoc! feature whenever I make an attack roll or cast a spell targeting a hostile",
				"creature. I don't need to rest between uses."
			]),
			extraLimitedFeatures : [{
				name : "Havoc!",
				usages : "d10",
				additional : 'Spell/Atk vs. Crea',
				recovery : "",
				addToExisting : true
			}]
		}
	}
});

//  * burden of the end martuyr subclass
AddSubClass("martyr", "burden of the end", {
    regExpSearch : /burden of the end/i,
    subname : "Burden of the End",
    source : ["VSoS", 121],
    spellcastingExtra : ["guiding bolt", "protection from evil and good", "blindness/deafness", "darkness", "call lightning", "counterspell", "blight", "control water", "flame strike", "insect plague"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 121],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against the",
                "total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Cantrips",
            source : ["VSoS", 121],
            minlevel : 1,
            description : desc([
                "I know sacred flame, thaumaturgy, and one more cleric cantrip of my choice. Wisdom is my", 
                "spellcasting ability for this."
            ]),
            spellcastingBonus : [{
				name : "Cantrips",
				spells : ["sacred flame", "thaumaturgy"],
				selection : ["sacred flame", "thaumaturgy"],
                spellcastingAbility : 5,
				times : 2
			}, {
				name : "Cantrips: cleric spell list",
				"class" : "cleric",
				level : [0,0],
                spellcastingAbility : 5,
				times : 1
			}]
        },
        "subclassfeature1.2" : {
            name : "Herald of the End",
            source : ["VSoS", 121],
            minlevel : 1,
            description : desc([
                "Once per long rest, when I cast a martyr spell that deals damage, I can choose to reroll", 
                "all of the damage dice and must use the new rolls."
            ]),
            usages : 1,
            recovery : "long rest"
        },
        "subclassfeature6" : {
            name : "Sacrosanct Spell",
            source : ["VSoS", 121],
            minlevel : 6,
            description : desc([
                "Whenever I cast one of my Burden Spells or a spell that only heals a crea, I lost no hp", 
                "from casting it if I cast it at its lowest level. Casting the spell still counts against", 
                "my total number of spell uses."
            ])
        },
        "subclassfeature14" : {
            name : "Embrace the Inevitable",
            source : ["VSoS", 121],
            minlevel : 14,
            description : desc([
                "I can spend additional hp equal up to half the level of a 1st level or higher martyr spell I", 
                "cast that requires a saving throw to give a target of the spell disadv. on the first save", 
                "against the spell."
            ])
        },
        "subclassfeature18" : {
            name : "Halt Apocalypse",
            source : ["VSoS", 121],
            minlevel : 18,
            description : desc([
                "Once per long rest, at the end of my turn, I can choose to immediately take an extra turn."
            ]),
            usages : 1,
            recovery : "long rest"
        }
    }
});

//  * burden of mercy martyr subclass
AddSubClass("martyr", "burden of mercy", {
    regExpSearch : /burden of mercy/i,
    subname : "Burden of Mercy",
    source : ["VSoS", 122],
    spellcastingExtra : ["healing word", "sanctuary", "enhance ability", "lesser restoration", "remove curse", "revivify", "death ward", "freedom of movement", "mass cure wounds", "raise dead"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against the", 
                "total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Cantrips",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "I know spare the dying, thaumaturgy, and one more cleric cantrip of my choice. Wisdom is my", 
                "spellcasting ability for this."
            ]),
            spellcastingBonus : [{
				name : "Cantrips",
				spells : ["spare the dying", "thaumaturgy"],
				selection : ["spare the dying", "thaumaturgy"],
                spellcastingAbility : 5,
				times : 2
			}, {
				name : "Cantrips: cleric spell list",
				"class" : "cleric",
				level : [0,0],
                spellcastingAbility : 5,
				times : 1
			}]
        },
        "subclassfeature1.2" : {
            name : "Balm",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "Oncer per short rest, I can use a bonus action to restore 1 hp to a crea within 60 ft or",
                "remove the blinded, deafened, or poisoned condition from a willing crea I touch."
            ]),
            usages : 1,
            recovery : "short rest",
            action : ["bonus action", ""],
        },
        "subclassfeature6" : {
            name : "Sacrosanct Spell",
            source : ["VSoS", 121],
            minlevel : 6,
            description : desc([
                "Whenever I cast one of my Burden Spells or a spell that only heals a crea, I lost no hp", 
                "from casting it if I cast it at its lowest level. Casting the spell still counts against", 
                "my total number of spell uses."
            ])
        },
        "subclassfeature14" : {
            name : "Blessing of the Broken Bread",
            source : ["VSoS", 122],
            minlevel : 14,
            description : desc([
                "Once per day when I finish a long or short rest, I choose up to 5 crea I can see at the end",
                "of the rest to gain a blessing. This lasts until the crea finished a long or short rest.",
                "While blessed, a crea can reroll any attack roll, ability check, or saving throw.",
                "Doing so will expend the blessing and the crea must use the new roll."
            ]),
            usages : 1,
            recovery : "Day"
        },
        "subclassfeature20" : {
            name : "Annointed Healer",
            source : ["VSoS", 122],
            minlevel : 18,
            description : desc([
                "Whenever I restore hp to a crea, I can add my martyr level to the number of hp restored.",
                "A crea can only benefit from this once everytime I finish a long rest."
            ])
        }
    }
});

// * burden of rebirth martyr subclass
AddSubClass("martyr", "burden of rebirth", {
    regExpSearch : /burden of rebirth/i,
    source : ["VSoS", 122],
    subname : "Burden of Rebirth",
    spellcastingExtra : ["entangle", "goodberry", "pass without trace", "spike growth", "plant growth", "speak with plants", "conjure woodland beings", "hallucinatory terrain", "awaken", "reincarnate"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against the", 
                "total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Cantrips",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "I know spare the dying, thaumaturgy, and one more cleric cantrip of my choice. Wisdom is my", 
                "spellcasting ability for this."
            ]),
            spellcastingBonus : [{
				name : "Cantrips",
				spells : ["druidcraft", "shillelagh"],
				selection : ["druidcraft", "shillelagh"],
                spellcastingAbility : 5,
				times : 2
			}, {
				name : "Cantrips: cleric spell list",
				"class" : "druid",
				level : [0,0],
                spellcastingAbility : 5,
				times : 1
			}]
        },
        "subclassfeature1.2" : {
            name : "Friend of the Forest",
            source : ["VSoS", 122],
            minlevel : 1,
            description : desc([
                "I can cast speak with animals without losing hp. When I do so, I have adv. on Charisma checks",
                "made directed at beasts for the duration. I can do this once per short rest."
            ]),
            usages : 1,
            recovery : "short rest",
            spellcastingBonus : [{
                name : "Friend of the Forest",
                spells : ["speak with animals"],
                selection : ["speak with animals"],
                firstCol : "oncesr",
                times : 1
            }]
        },
        "subclassfeature6" : {
            name : "Sacrosanct Spell",
            source : ["VSoS", 123],
            minlevel : 6,
            description : desc([
                "Whenever I cast one of my Burden Spells or a spell that only heals a crea, I lost no hp", 
                "from casting it if I cast it at its lowest level. Casting the spell still counts against", 
                "my total number of spell uses."
            ])
        },
        "subclassfeature14" : {
            name : "Verdant Resilience",
            source : ["VSoS", 123],
            minlevel : 14,
            description : desc([
                "As a bonus action on my turn I can regenerate for 1 min. At the start of each of my turns, I",
                "regain hp equal to my Wis mod. I also gain resistance to blud/pierce/slash and can't cast",
                "martyr spells. I can end this early as a bonus action. I can do this once per short rest."
            ]),
            action : ["bonus action", ""],
            usages : 1,
            recovery : "short rest",
        },
        "subclassfeature20" : {
            name : "Turn of the Wheel",
            source : ["VSoS", 123],
            minlevel : 18,
            description : desc([
                "I can cast reincarnate without expending material components or losing hp. When I do, I can",
                "choose which race the target reincarnates as, intead of the GM. If I die without using my",
                "Final Martyrdom, I return to life in 24 hours as by the reincarnate spell. Once I do so,",
                "I can't this again for 10 days."
            ]),
            spellcastingBonus : [{
                name : "Turn of the Wheel",
                spells : ["reincarnate"],
                selection : ["reincarnate"],
                times : 1
            }],
            spellchanges : {
                "reincarnate" : {
                    compMaterial : "",
                    components : "V,S\u2020",
                    description : "Brings humanoid that died in last 10 days to life, I choose its new body",
                    changes : "No material components and I can choose what the target reincarnates as."
                }
            },
            usages : 1,
            recovery : "10 days"
        }
    }
});

// * burden of revolution martyr subclass
AddSubClass("martyr", "burden of revolution", {
    regExpSearch : /burden of revolution/i,
    source : ["VSoS", 123],
    subname : "Burden of Revolution",
    spellcastingExtra : ["command", "heroism", "hold person", "magic weapon", "haste", "pillar of salt", "stoneskin", "wall of fire", "hold monster", "telepathic bond"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 123],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against", 
                "the total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Bonus Proficiency",
            source : ["VSoS", 123],
            minlevel : 1,
            description : desc([
                "I gain proficiency with heavy armor."
            ]),
            armorProfs : [true, true, true, true],
        },
        "subclassfeature1.2" : {
            name : "Bulwark of Rebellion",
            source : ["VSoS", 123],
            minlevel : 1,
            description : desc([
                "Once per short rest, I can use a bonus action to gain 1d12 + my martyr level temp hp, which",
                "lasts for an hour."
            ]),
            action : ["bonus action", ""],
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature6" : {
            name : "Bloody Reprieve",
            source : ["VSoS", 123],
            minlevel : 6,
            description : desc([
                "When I Torment a hostile crea and is reduced to 0 hp, I take no damage instead."
            ])
        },
        "subclassfeature14" : {
            name : "Unyielding Banner",
            source : ["VSoS", 123],
            minlevel : 14,
            description : desc([
                "All allies, including me, within 10 ft adds my Wis mod to initative rolls and immune to being",
                "charmed or frightened."
            ]),
            savetxt : {
                immune : ["charmed", "frightened"]
            },
            additional : levels.map(function(n) {
                return n < 14 ? "" : "10 ft";
            })
        },
        "subclassfeature18" : {
            name : "Kingslayer",
            source : ["VSoS", 124],
            minlevel : 18,
            description : desc([
                "When I reduce a hostile crea to 0 hp, I can choose one of the following effects:",
                "\u2022 All of the crea spells and effects immediately end, including all spells with permanent",
                "effects. Additionally, spells that trigger on the crea death don't trigger",
                "\u2022 Each crea allied with the crea within 120 ft and has a lower CR than it must make a Wis",
                "save or be frightened for 1 min. It can repeat the save at the end of each of its turns",
                "\u2022 As a bonus action, I move up to 15 ft and make another melee weapon attack"
            ]),
            action : ["bonus action", " (melee attack)"],
            usages : 1,
            recovery : "short rest"
        }
    }
});

// * burden of truth martyr subclass
AddSubClass("martyr", "burden of truth", {
    regExpSearch : /burden of truth/i,
    source : ["VSoS", 124],
    subname : "Burden of Truth",
    spellcastingExtra : ["charm person", "identify", "augury", "detect thoughts", "sending", "speak with dead", "divination", "freedom of movement", "legend lore", "scrinyg"],
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 124],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against", 
                "the total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Moral Erudition",
            source : ["VSoS", 125],
            minlevel : 1,
            description : desc([
                "I can add my Wis mod instead of Cha for Persuasion checks. Other creatures can always",
                "discern when I am telling the truth."
            ]),
            addMod : { type : "skill", field : "Pers", mod : "max(Wis|0)", text : "I can add my Wisdom modifier to any Charisma (Persuasion) checks I make." }
        },
        "subclassfeature1.2" : {
            name : "Maxim of Truth",
            source : ["VSoS", 125],
            minlevel : 1,
            description : desc([
                "As a bonus action once per short rest, I can cast zone of truth centered on me. This",
                "has a 5 ft rad and duration of 1 min. Wisdom is my spellcasting ability for this."
            ]),
            action : ["bonus action", ""],
            usages : 1,
            recovery : "short rest",
            spellcastingBonus : [{
                name : "Maxim of Truth",
                spells : ["zone of truth"],
                selection : ["zone of truth"],
                spellcastingAbility : 5,
                times : 1,
                firstCol : "oncesr"
            }],
            spellchanges : {
                "zone of truth" : {
                    description : "5 rad all in or enter save or unable to lie; I'm aware if saved or not; crea aware it cannot lie",
                    duration : "1 min",
                    range : "5 ft",
                    changes : "The range becomes 5 ft and the duration is 1 minute."
                }
            },
        },
        "subclassfeature6" : {
            name : "Sacrosanct Spell",
            source : ["VSoS", 125],
            minlevel : 6,
            description : desc([
                "Whenever I cast one of my Burden Spells or a spell that only heals a crea, I lost no hp", 
                "from casting it if I cast it at its lowest level. Casting the spell still counts against", 
                "my total number of spell uses."
            ])
        },
        "subclassfeature14" : {
            name : "Foretold Escape",
            source : ["VSoS", 125],
            minlevel : 14,
            description : desc([
                "When a crea I can see makes an attack roll against me, I can use my reaction to impose",
                "diadvantage on that roll."
            ]),
            action : ["reaction", ""]
        },
        "subclassfeature18" : {
            name : "Eyes of Prophecy",
            source : ["VSoS", 125],
            minlevel : 18,
            description : desc([
                "Once per short rest, I can replace one attack, ability check, or saving throw roll I make",
                "with a 20."
            ])
        }
    }
});

// * burden of tyranny martyr subclass
AddSubClass("martyr", "burden of tyranny", {
    regExpSearch : /burden of tyranny/i,
    source : ["VSoS", 125],
    subname : "Burden of Tyranny",
    spellcastingExtra : ["bane", "command", "find steed", "hold person", "bestow curse", "fear", "banishment", "dominate beast", "dominate person", "geas"],
    abilitySave : 5,
    features : {
        "subclassfeature1" : {
            name : "Burden Spells",
            source : ["VSoS", 125],
            minlevel : 1,
            description : desc([
                "I learn additional spells that is considered always prepared and doesn't count against", 
                "the total amount of spells I know."
            ])
        },
        "subclassfeature1.1" : {
            name : "Bonus Proficiency",
            source : ["VSoS", 125],
            minlevel : 1,
            description : desc([
                "I gain proficiency with heavy armor."
            ]),
            armorProfs : [true, true, true, true],
        },
        "subclassfeature1.2" : {
            name : "Diabolic Ultimatum",
            source : ["VSoS", 125],
            minlevel : 1,
            description : desc([
                "As an action once per short rest, I can choose a crea that I can see within 60 ft to",
                "make Wis save, or the crea is charmed or frightened for 1 min. It can repeat the save",
                "on each of its turns. The DC for this is 8 + Prof. Bonus + Wis mod."
            ]),
            action : ["action", ""],
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature6" : {
            name : "Bloody Reprieve",
            source : ["VSoS", 125],
            minlevel : 6,
            description : desc([
                "When I Torment a hostile crea and is reduced to 0 hp, I take no damage instead."
            ])
        },
        "subclassfeature14" : {
            name : "Crush Resistance",
            source : ["VSoS", 125],
            minlevel : 14,
            description : desc([
                "Once per turn when I hit a hostile crea with a melee weapon attack, I gain 1d8",
                "temp hp. If I reduce a Humanoid to 0 hp with a melee weapon attack, this becomes",
                "4d8 instead."
            ]),
            usages : 1,
            recovery : "Turn"
        },
        "subclassfeature18" : {
            name : "Crush Resistance",
            source : ["VSoS", 125],
            minlevel : 18,
            description : desc([
                "I can cast dominate person without expending hp or counting against my spell uses",
                "once per day. Whenever I cast this spell, the target has disadv on its saving throw",
                "and doesn't make a new save everytime it takes damage. I can cast this once per",
                "long rest without expending hp."
            ]),
            spellcastingBonus : [{
                name : "Crush Resistance",
                spells : ["dominate person"],
                selection : ["dominate person"],
                times : 1,
                firstCol : "Day",
            }],
            usages : 1,
            recovery : "long rest"
        }
    }
});

// * Necromancer class
// Necromancer spell list
[
    // Cantrips (0 Level)
    "acid splash", "caustic blade", "cheat", "chill touch","cryptogram", "dancing lights", "eldritch orb", "eye of anubis", "flesh ripper", "hocuspocus", "light", "lightning surge", "mage hand", "mending", "minor lifesteal", "poison spray", "shocking grasp", "spark of life", "true strike",
    // 1st level
    "alarm", "arcane anomaly", "bane", "blood print", "command", "dead mist lash", "detect evil and good", "detect magic", "exhume", "expeditious retreat", "false life", "flawed reconstruction", "fog cloud", "gahoul's shrieking skull", "grease", "hollowing curse", "identify", "indemnify", "inflict wounds", "mage armor", "memorize", "might of the abyss", "protection from evil and good", "sleep", "unseen servant",
    // 2nd level
    "melf's acid arrow", "blindness/deafness", "curse ward", "darkness", "darkvision", "delay", "detect thoughts", "enlarge/reduce", "gentle repose", "invisibility", "knock", "locate object", "misty step", "nondescript", "pass without trace", "protection from ballistics", "protect threshold", "ray of enfeeblement", "silence", "spider climb", "stone bones", "unseen accountant", "web",
    // 3rd level
    "animate dead", "benign dismemberment", "bestow curse", "call lightning", "clairvoyance", "counterspell", "curse of blades", "dead fog", "dispel magic", "fear", "gaseous form", "glyph of warding", "nondetection", "phantom steed", "remove curse", "revivify", "ruby-eye curse", "rusting grasp", "seance", "speak with dead", "stinking cloud", "vampiric touch",
    // 4th level
    "arcane eye", "blight", "death ward", "dimension door", "dire warning", "distort gravity", "false vision", "gahoul's scapegoat", "grasp of the grave", "greater invisibility", "locate creature", "phantasmal killer", "leomund's secret chest",
    // 5th level
    "antilife shell", "cloudkill", "contagion", "dispel evil and good", "dream", "insect plague", "modify memory", "pharaoh's curse", "scrutinize foe", "scrying", "teleportation circle",
    // 6th level
    "antiballistics field", "circle of death", "contingency", "create undead", "eyebite", "flesh to stone", "frenzy", "gahoul's spectral scythe", "harm", "inexorable sarcophagus", "magic jar",
    // 7th level
    "abduct", "etherealness", "finger of death", "plane shift", "sequester", "teleport",
    // 8th level
    "antimagic field", "clone", "feeblemind", "gahoul's glorious gothic", "mind blank", "power word stun", 
    // 9th level
    "heart of darkness", "imprisonment", "power word kill", "storm of vengeance", "weird"
].forEach( function (s) {
    if(SpellsList[s] && SpellsList[s].classes && SpellsList[s].classes.indexOf("necromancer") === -1) SpellsList[s].classes.push("necromancer");
});

ClassList["necromancer"] = {
    name: "Necromancer",
    regExpSearch: /\bnecromancer\b/i,
    source: ["VSoS", 128],
    primaryAbility: "Intelligence",
    prereqs: "Intelligence 13",
    die: 6,
    improvements: [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
    saves: ["Con", "Int"],
    abilitySave: 4,
    skillstxt: {
        primary: "Choose two from Arcana, Deception, History, Intimidation, Investigation, Medicine, Persuasion, or Religion",
    },
    armorProfs: {
        primary: [false, false, false, false],
        secondary: [false, false, false, false]
    },
    weaponProfs: {
        primary: [true, false],
        secondary: [false, false]
    },
    equipment: "Necromancer starting equipment: " +
        "\n \u2022 a component pouch -or- an arcane focus;" +
        "\n \u2022 A dungeoneer's pack -or- a scholar's pack;" +
        "\n \u2022 A shovel, a dagger, & any simple weapon",
    subclasses: ["Grave Ambition", []],
    attacks: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    spellcastingFactor : 1,
    spellcastingKnown: {
        cantrips: [4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
        spells: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15],
        prepared: false,
    },
    spellcastingList: {
        "class" : "necromancer",
    },
    features: {
        "spellcasting" : {
            name: "Spellcasting",
            source: ["VSoS", 128],
            minlevel: 1,
            description: desc([
                "I can cast necromancer cantrips/spells that I know using Intelligence as my spellcasting ability.",
                "I can use an arcane focus as a spellcasting focus for my necromancer spells.",
                "I can cast necromancer spells as rituals if they have the ritual tag."
            ])
        },
        "charnel touch" : {
            name: "Charnel Touch",
            source: ["VSoS", 129],
            minlevel : 1,
            description: desc([
                "I have a pool of Charnel Touch points. As an action I declare a number of points (max prof",
                "bonus x 5) & make a melee spell attack (willing creatures auto-hit). On hit, I deal necrotic dmg",
                "equal to declared points & expend them (heals Undead, Constructs immune, 2x dmg on crit)."
            ]),
            weaponOptions: [{
                name: "Charnel Touch",
                source: ["VSoS", 129],
                regExpSearch: /\bcharnel touch\b/i,
                type: "Spell",
                ability: 4,
                abilitytodamage: false,
                damage: [0,0, "Necrotic"],
                range: "Melee",
                description: "Damage doubles on crit; Constructs are immune; heals Undead",
                isNotWeapon: true,
                useSpellcastingAbility: true,
                useSpellMod: "necromancer",
                selectNow : true
            }],
            limfeaname: "Charnel Touch Points",
            usages: levels.map(function(n) { return n * 5 }),
            recovery: "long rest",
            calcChanges: {
                atkAdd : [
                    function(fields, v) {
                        if(/charnel touch/i.test(v.WeaponTextName)) {
                            fields.Description += (fields.Description ? "; " : "") + "Max " + How("Proficiency Bonus") * 5 + " necrotic dmg";
                        }
                    }
                ]
            }
        },
        "thralls": {
            name: "Thralls",
            source: ["VSoS", 130],
            minlevel: 2,
            description: desc([
                "I can perform a 10 minute ritual to raise one or more Small or Medium humanoid",
                "corpses/remains within 30 feet of me into undead thralls. See notes for details."
            ]),
            additionaL: levels.map(function(n) { return n < 2 ? "" : ("Thrall CR total: " + (n < 3 ? "1/4" : n < 5 ? "1/2" : n < 9 ? "1" : n < 13 ? "2" : n < 17 ? "3" : "4"))}),
            spellChanges: {
                "animate dead" : {
                    time : "1 a",
                    description: "Turn Small/Medium humanoid corpses into 1+2/SL Skeletons or Zombies, following Thralls rules",
                    changes: "I can cast this spell as an action instead of over the course of 1 minute. undead I create using this spell are treated as my thralls and use the appropriate Undead Thrall stat block."
                }
            }
        },
        "bag of bones" : {
            name: "Bag of Bones",
            minlevel: 2,
            source: ["VSoS", 131],
            description: desc ([
                "I can make a magical bag of bones with a 1 hr ritual while holding a container I can carry.",
                "When I do this, other bags of bones I make are unmade. See magic item entry for details.",
            ]),
            magicitemsAdd : ["Bag of Bones"],
        },
        "subclassfeature3" : {
            name: "Grave Ambition",
            source: ["VSoS", 131],
            minlevel: 3,
            description: desc(["Choose a Grave Ambition in the \"Class\" field."]),
        },
        "black arcana" : {
            name: "Black Arcana",
            source: ["VSoS", 131],
            minlevel: 3,
            description: desc([
                "As a bonus action I can expend a spell slot to regain 1d8 CT points/SS level (up to pool max).",
            ]),
            action: ["bonus action", "Replenish Charnel Touch"]
        },
        "critical spellcasting" : {
            name: "Critical Spellcasting",
            source: ["VSoS", 131],
            minlevel: 5,
            description: desc([
                "Creatures that roll a 1 on a save vs my spells auto-fail and take double damage dice from the",
                "spell, & my spell attacks crit on a roll of 19-20. At 14th level, creatures auto-fail & take double",
                "damage dice from my spells on a roll of 1-2, & my spell attacks crit on a roll of 18-20.",
            ]),
            calcChanges: {
                atkAdd: [
                    function (fields, v){
                        if (v.isSpell){
                            if (v.isDC && v.isSpell && SpellsList[v.thisWeapon[3]] && v.thisWeapon[4].indexOf("necromancer") !== -1){
                                fields.Description += (fields.Description ? "; " : "") + "double dmg dice vs crea rolling " + (classes.known.necromancer.level < 14 ? "1" : "1-2") + " vs save";
                            }
                            if(!v.isDC && v.isSpell && SpellsList[v.thisWeapon[3]] && v.thisWeapon[4].indexOf("necromancer") !== -1){
                                fields.Description += (fields.Description ? "; " : "") + "crit on " + (classes.known.necromancer.level < 14 ? "19-20" : "18-20");
                            }
                        }
                    }, "Creatures that roll a 1 on a save against my spells take double the damage dice as damage, and my spell attacks score a critical hit on a roll of 19-20. At 14th level, Creatures that roll a 1-2 on a save against my spells take double damage dice as damage, and my spell attacks score a critical hit on a roll of 18-20."
                ]
            }
        },
        "enthralling presence" : {
            name: "Enthralling Presence",
            source: ["VSoS", 131],
            minlevel: 7,
            description: desc([
                "Undead I control are immune to effects that turn undead. While I am conscious, my undead",
                "can't be forcefully controlled by another creature."
            ])
        },
        "undying servitude" : {
            name: "Undying Servitude",
            source: ["VSoS", 131],
            minlevel: 18,
            description: desc(["When a thrall drops to 0 hp & not destroyed, I can use reaction to heal it for half its max hp."]),
            usages: 1,
            recovery: "long rest",
            action: ["reaction", ""]
        },
        "lichdom" : {
            name: "Lichdom",
            source: ["VSoS", 132],
            minlevel: 20,
            description: desc([
                "I can undergo a rite to become a lich. See third page & notes pages."
            ]),
            savetxt : {
                immune: ["necrotic damage", "poison", "effects of exhaustion"],
                text: ["I don't need to eat, drink, sleep, or breathe", "Effects that affect undead affect me except turn undead"]
            },
            toNotesPage: [{
                name: "Lichdom",
                note: desc([
                    "I have completed my phylactery and am ready to undergo the rite. To do so, I",
                    "shut myself away for 30 days in an isolated location of my choice, and emerge",
                    "as an immortal lich. Once the rite is completed, I gain extra benefits, as well",
                    "as those dictated by my Grave Ambition."
                ]),
                amendTo: "Animate Dead"
            }, {
                name: "Phylactery Form and Weakness",
                note: desc([
                    "A lich's phylactery has a unique form and critical flaw by which it can be",
                    "destroyed. Examples of forms include a family heirloom, prized possession, a",
                    "sword, piece of armor, or entire castle. Examples of weaknesses include dipping",
                    "it in the lava of an active volcano, or performing a 24 hour ritual to destroy it.",
                    "Discuss with your GM the form and weaknesses your phylactery possesses."
                ]),
                amendTo: "Lichdom"
            }],
            "phylactery": {
                name: "Phylactery",
                source: ["VSoS", 132],
                description: desc([
                    "If I drop to 0 hit points, my body crumbles to dust, but my soul escapes to my phylactery.",
                    "After 1d4 + 1 days, a new body forms in a space closest to my phylactery, and I return to life.",
                    "When my body reforms, I gain the benefits of a long rest. The new body is identical to the",
                    "one that was destroyed."
                ]),
            },
            "undead traits" : {
                name: "Undead Resilience & Traits",
                source: ["VSoS", 132],
                description: desc([
                    "I have immunity to necrotic & poison damage, & the poisoned condition. I am also immune",
                    "to the effects of exhaustion and I don't need to eat, drink, sleep, or breathe. I must still rest",
                    "for 4 hours to gain the benefits of a long rest. Spells and effects that typically affect Undead",
                    "affect me as well. I am immune to any effect that turns Undead."
                ]),
            },
            autoSelectExtrachoices: [{
                extrachoice: "phylactery",
            }, {
                extrachoice: "undead traits",
            }]
        }
    }
};

// * Blood Ascendant necromancer subclass
AddSubClass("necromancer","blood ascendant",{
    regExpSearch: /\bblood ascendant\b/i,
    subname: "Blood Ascendant",
    source: ["VSoS", 132],
    features: {
        "subclassfeature3" : {
            name: "Ascendant Spells",
            minlevel: 3,
            source: ["VSoS", 132],
            description: desc ([
                "I learn additional spells, which do not count towards the number of spells I know.",
            ]),
            spellcastingExtra: ["charm person", "sleep", "enthrall", "suggestion", "hypnotic pattern", "vampiric touch", "phantasmal killer", "private sanctum", "dominate person", "modify memory"],          
        },
        "subclassfeature3.1" : {
            name: "Charnel Drain",
            minlevel: 3,
            source: ["VSoS", 133],
            description: desc([
                "I regain hit points equal to my Intelligence modifier + my necromancer level (min 3) when I",
                "reduce a hostile creature to 0 hit points using Charnel Touch."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "Drain (heal " + Math.max((parseInt(What('Int Mod')) + classes.known.necromancer.level), 3) + " hp)";
                            fields.Description_Tooltip = "Charnel Drain: When you reduce a hostile creature to 0 hit points with your Charnel Touch, you regain hit points equal to your Intelligence modifier + your necromancer level (minimum 3)."
                        }
                    }, "I regain hit points equal to my Intelligence modifier + my necromancer level (min 3) when I reduce a hostile creature to 0 hit points using Charnel Touch."
                ]
            }
        },
        "subclassfeature6" : {
            name: "Vampiric Transformation",
            minlevel: 6,
            source: ["VSoS", 133],
            description: desc([
                "I can use my action and 15 Charnel Touch points to transform into a bat or cloud of mist for 1",
                "hour, or until I drop to 0 hit points or revert as an action. Anything I'm wearing transforms",
                "with me, but objects I carry fall to the ground. See third page for transformation options."
            ]),
            action: ["action", "(15 CT)"],
            "bat" : {
                name: "Bat",
                source: ["VSoS", 133],
                description: desc([
                    "I transform into a Tiny bat. While in bat form, I have all the senses of a bat, I can't speak, my",
                    "walk speed is 5 ft, and I have a fly speed of 30 ft.  My other statistics are unchanged."
                ])
            },
            "mist" : {
                name: "Mist",
                source: ["VSoS", 133],
                description: desc([
                    "I transform into a Medium cloud of mist. While in this form, I can't speak, manipulate objects",
                    "or take any actions other than to revert. I am weightless, have a fly speed of 20 ft, can hover",
                    "and can enter and occupy the space of another creature. I can pass through any space air can",
                    "pass through, except water. I have advantage on Strength, Dexterity, and Constitution saves,",
                    "and gain resistance to bludgeoning, piercing, and slashing damage."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "bat",
            }, {
                extrachoice: "mist",
            }],
            vision: ["Blindsight (undeafened Bat form)", 60],
            dmgres: [["Bludgeoning", "Bludgeon. (as Mist)"],
                     ["Piercing", "Pierce. (as Mist)"],
                     ["Slashing", "Slash. (as Mist)"]],
            savetxt: {
                adv_vs: ["Str/Dex/Con saves as mist"]
            }
        },
        "subclassfeature10": {
            name: "Children of the Night",
            minlevel: 10,
            source: ["VSoS", 133],
            description: desc([
                "When I perform my Animate Thralls ritual, I can summon wolves, swarms of bats, and swarms",
                "of rats as my thralls. When these thralls are reduced to 0 hit points, they vanish in mist.",
                "Use the \"Race\" drop down menu on the companion page to select these."
            ]),
            creatureOptions: [{
                name: "Wolf",
                source:["SRD", 159],
                size: 3,
                type: "Beast",
                companion: "undead thrall",
                companionApply: "undead thrall",
                alignment: "Unaligned",
                ac: 13,
                hp: 11,
                hd:[2,8],
                speed: "40 ft",
                proficiencyBonus: 2,
                challengeRating: "1/4",
                scores: [12,15,12,3,12,6],
                senses: "",
                attacksAction: 1,
                attacks: [{
                    name: "Bite",
                    ability: 2,
                    damage: [2,4, "piercing"],
                    range: "Melee",
                    abilitytodamage : true,
                    description: "If target is creature, must Strength save DC 11 or be knocked prone",
                    modifiers: ["(oInt+oProf)-(Dex+Prof)", ""],
                }],
                skills: {
                    "Perception" : 3,
                    "Stealth" : 4,
                },
                traits: [{
                    name: "Keen Hearing and Smell",
                    description: "The wolf has advantage on Wisdom (Perception) checks that rely on hearing or smell."
                }, {
                    name: "Pack Tactics",
                    description: "The wolf has advantage on attack rolls against a creature if at least one of the wolf's allies is within 5 feet of the creature and the ally isn't incapacitated."
                }]
            }, {
                name: "Swarm of Bats",
                source:["SRD", 154],
                size: 3,
                type: "Beast",
                subtype: "swarm",
                companion: "undead thrall",
                companionApply: "undead thrall",
                alignment: "Unaligned",
                ac: 12,
                hp: 22,
                hd:[5,8],
                speed: "fly 30 ft",
                proficiencyBonus: 2,
                challengeRating: "1/4",
                scores: [5, 15, 10, 2, 12, 4],
                senses: "Blindsight 60 ft",
                attacksAction: 1,
                damage_resistances: "bludgeoning, piercing, slashing",
                condition_immunities: "charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned",
                attacks: [{
                    name: "Bite",
                    ability: 2,
                    damage: [2,4, "piercing"],
                    range: "Melee",
                    abilitytodamage : true,
                    description: "reduce damage die to 1d4 if the swarm has less than half its max hit points",
                    modifiers: ["(oInt+oProf)-(Dex+Prof)", ""],
                }],
                traits: [{
                    name: "Echolocation",
                    description: "The swarm can't use its blindsight while deafened."
                },{
                    name: "Keen Hearing",
                    description: "The swarm has advantage on Wisdom (Perception) checks that rely on hearing."
                }, {
                    name: "Swarm",
                    description: "The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny bat. The swarm can't regain hit points or gain temporary hit points."
                }],
            }, {
                name: "Swarm of Rats",
                source:["SRD", 155],
                size: 3,
                type: "Beast",
                subtype: "swarm",
                companion: "undead thrall",
                companionApply: "undead thrall",
                alignment: "Unaligned",
                ac: 10,
                hp: 24,
                hd:[7,8],
                speed: "30 ft",
                proficiencyBonus: 2,
                challengeRating: "1/4",
                scores: [9, 11, 9, 2, 10, 3],
                senses: "Darkvision 60 ft",
                attacksAction: 1,
                damage_resistances: "bludgeoning, piercing, slashing",
                condition_immunities: "charmed, frightened, grappled, paralyzed, petrified, prone, restrained, stunned",
                attacks: [{
                    name: "Bite",
                    ability: 2,
                    damage: [2,6, "piercing"],
                    range: "Melee",
                    abilitytodamage : true,
                    description: "reduce damage die to 1d6 if the swarm has less than half its max hit points",
                    modifiers: ["(oInt+oProf)-(Dex+Prof)", ""],
                }],
                traits: [{
                    name: "Keen Smell",
                    description: "The swarm has advantage on Wisdom (Perception) checks that rely on smell."
                }, {
                    name: "Swarm",
                    description: "The swarm can occupy another creature's space and vice versa, and the swarm can move through any opening large enough for a Tiny rat. The swarm can't regain hit points or gain temporary hit points."
                }]
            }]
        },
        "subclassfeature20": {
            name: "Lichdom: Nosferatu",
            minlevel: 20,
            source: ["VSoS", 133],
            description: desc([
                "I gain extra features when I undertake the rite to become a lich, found on the third page."
            ]),
            "phylactery": {
                name: "Coffin Phylactery",
                source: ["VSoS", 133],
                description: desc([
                    "My phylactery is a coffin filled with grave dirt. When I drop to 0 hit points, I reform in this",
                    "coffin in 1 hour, gaining the benefits of a long rest. Until I spend 24 hours resting in the coffin,",
                    "my hit point maximum is reduced to 1, and I drop to 0 hit points if I begin my turn in sunlight.",
                    "My new body is identical to the one that was destroyed."
                ])
            },
            "regeneration" : {
                name: "Regeneration",
                source: ["VSoS", 133],
                description: desc([
                    "At the start of each of my turns, if I have more than 0 hit points and I am not in direct",
                    "sunlight, I regain 10 hit points."
                ])
            },
            "vampiric agility" : {
                name: "Vampiric Agility",
                source: ["VSoS", 133],
                description: desc([
                    "My speed is doubled, and I can climb difficult surfaces, including upside down on ceilings,",
                    "without needing to make an ability check."
                ]),
                speed: { allModes: "*2" }
            }, 
            autoSelectExtrachoices: [{
                extrachoice: "phylactery"
            }, {
                extrachoice: "regeneration"
            }, {
                extrachoice: "vampiric agility"
            }],
            
        }
    }
});

// * Death Knight necromancer subclass
AddSubClass("necromancer","death knight",{
    regExpSearch: /\bdeath knight\b/i,
    subname: "Death Knight",
    source: ["VSoS", 133],
    attacks: [1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    features: {
        "subclassfeature3": {
            name: "Intensive Combat Research",
            minlevel: 3,
            source: ["VSoS", 134],
            description: desc([
                "I gain proficiency with light & medium armor, shields, martial weapons. I can perform somatic",
                "components of spells while holding weapons and shields in both hands."
            ]),
            armorProfs: [true, true, false, true],
            weaponProfs: [false, true]
        },
        "subclassfeature3.1" : {
            name: "Charnel Strike",
            minlevel: 3,
            source: ["VSoS", 134],
            description: desc([
                "Once per turn I can spend CT points & apply CT damage to a target I hit with a melee",
                "weapon attack I made as part of an Attack action. When I deal damage using Charnel Touch",
                "or Charnel Strike, I gain temp hp equal to the necrotic damage dealt, up to my hit point total.",
            ]),
            calcChanges: {
                atkAdd: [
                    function (fields, v) {
                        if (v.isMeleeWeapon && !v.isSpell && !SpellsList[v.thisWeapon[3]]) {
                            fields.Description += (fields.Description ? "; " : "") + "Charnel Strike: +" + (parseInt(What('Proficiency Bonus')) * 5) + " necrotic dmg & temp hp)"; 
                        }
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "gain temp hp equal to dmg";
                        }
                    }, "Once per turn I can spend CT points & apply CT damage to a target I hit with a melee weapon attack I made as part of an Attack action. When I deal damage using Charnel Touch or Charnel Strike, I gain temp hp equal to the necrotic damage dealt, up to my hit point max."
                ]
            }
        },
        "subclassfeature6" : {
            name: "Extra Attack",
            minlevel: 6,
            source: ["VSoS", 134],
            description: desc([
                "I can attack twice instead of once when I take the Attack action on my turn. My melee",
                "weapon attacks score a crit on a roll of 19-20."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (v.isMeleeWeapon && !/\bcrit on\b/i.test(fields.Description)){
                            fields.Description += (fields.Description ? "; " : "") + "; crit on 19-20";
                        }
                    }, "My melee weapon attacks score a critical hit on a roll of 19-20."
                ]
            }
        },
        "subclassfeature10" : {
            name: "Overcharged Thralls",
            minlevel: 10,
            source: ["VSoS", 134],
            description: desc([
                "When 1 of my thralls dies/is released by me, I regain CT points equal to my necromancer level",
            ])
        }, 
        "subclassfeature20" : {
            name: "Lichdom: Imperator",
            minlevel: 20,
            source: ["VSoS", 134],
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            armorProfs: [true, true, true, true],
            dmgres: ["Bludgeoning", "Piercing", "Slashing"],
            "completedcombatresearch" : {
                name: "Completed Combat Research",
                source: ["VSoS", 134],
                description: desc(["I gain proficiency with heavy armor & resistance to bludgeoning, piercing, and slashing dmg."])
            },
            "peerlesscharnelstrike" : {
                name: "Peerless Charnel Strike",
                source: ["VSoS", 134],
                description: desc([
                    "Necrotic damage dealt by Charnel Touch ignores resistance and immunity to necrotic",
                    "damage. The amount of temporary hit points I gain from Charnel Strike is no longer limited",
                    "by half my total hit points."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "completedcombatresearch"
            }, {
                extrachoice: "peerlesscharnelstrike"
            }]
        }
    }
});

// * Overlord necromancer subclass
AddSubClass("necromancer","overlord",{
    regExpSearch: /\boverlord\b/i,
    subname: "Overlord",
    source: ["VSoS", 134],
    features: {
        "subclassfeature3" : {
            name: "Overlord Spells",
            minlevel: 3,
            source: ["VSoS", 134],
            description: desc ([
                "I learn additional spells, which do not count towards the number of spells I know.",
            ]),
            spellcastingExtra: ["bane", "command", "detect thoughts", "hold person", "haste", "slow", "compulsion", "confusion", "dominate person", "geas"],          
        },
        "subclassfeature3.1": {
            name: "Charnel Boon",
            minlevel: 3,
            source: ["VSoS", 134],
            description: desc([
                "As a bonus action, I can expend 5 or more Charnel Touch points to empower all my thralls",
                "within 30 ft of me. Until the end of my next turn, those thralls gain a +1 bonus to their attack",
                "rolls, damage rolls, and AC per 5 points expended, up to +3."
            ]),
            action: ["bonus action", ""],
        },
        "subclassfeature6":{
            name: "Despotic Discourse",
            minlevel: 6,
            source: ["VSoS", 134],
            description: desc([
                "I gain proficiency in Deception, Intimidation, or Persuasion. I can use my Intelligence modifier",
                "instead of Charisma when making Deception/Intimidation/Persuasion checks."
            ]),
            skillstxt: "Choose one from Deception, Intimidation, or Persuasion",
            addMod: [
                {type: "skill", field: "Deception", mod: "max(Int-Cha|Cha)", text: "I can use my Intelligence modifier instead of Charisma when making Deception, Intimidation, and Persuasion checks."},
                {type: "skill", field: "Intimidation", mod: "max(Int-Cha|Cha)", text: "I can use my Intelligence modifier instead of Charisma when making Deception, Intimidation, and Persuasion checks."},
                {type: "skill", field: "Persuasion", mod: "max(Int-Cha|Cha)", text: "I can use my Intelligence modifier instead of Charisma when making Deception, Intimidation, and Persuasion checks."},        
            ]
        },
        "subclassfeature10":{
            name: "Sacrificial Thralls",
            minlevel: 10,
            source: ["VSoS", 135],
            description: desc([
                "When I am targeted by an attack, I can use my reaction to change the target of the attack to",
                "one of my thralls that is in range/reach of the attack."
            ]),
            action: ["reaction", "Sacrifice Thrall"],
            usages: 1,
            recovery: "short rest",
        },
        "subclassfeature20": {
            name: "Lichdom: Tyrant",
            minlevel: 20,
            source: ["VSoS", 135],
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            action: [["action", "Dominate Beast/Person/Monster (CT)"]],
            spellcastingBonus: [{
                spells: ["dominate beast"],
                name: "Lichdom: Tyrant",
                selection: ["dominate beast"],
                firstCol: "25",
                allowUpCasting: false,
            }, {
                spells: ["dominate person"],
                name: "Lichdom: Tyrant",
                selection: ["dominate person"],
                firstCol: "30",
                allowUpCasting: false,
            }, {
                spells: ["dominate monster"],
                name: "Lichdom: Tyrant",
                selection: ["dominate monster"],
                firstCol: "60",
                allowUpCasting: false,
            }],
            "immortalrule": {
                name: "Immortal Rule",
                source: ["VSoS", 135],
                description: desc([
                    "If I drop to 0 hit points, I can choose an unconscious Humanoid or a corpse of one that has",
                    "died within the last minute that is within 120 ft of me to possess. A creature warded by a",
                    "protection from evil and good or magic circle spell can't be possessed. Once I possess a body",
                    "I control it. My game stats are replaced by the stats of the creature, except my alignment,",
                    "Intelligence, Wisdom, and Charisma scores. If the body has 0 hit points when I possess it, its",
                    "type becomes Undead and it regains 50 hit points, up to its hit point max. I retain the benefit",
                    "of my own class features, and I cannot use any class features the creature has. If I possess the",
                    "body of an unconsious creature, that creature makes a Charisma save vs my spell save DC",
                    "after 8 hours, repeating the save every 8 hours. On a success, I am ejected from the body and",
                    "begin the process of reforming at my phylactery. Once I have possessed a creature this way, I",
                    "cannot possess it again using this feature."
                ])
            },
            "tyrantsinfluence" : {
                name: "Tyrant's Influence",
                source: ["VSoS", 135],
                description: desc([
                    "I can expend Charnel Touch points to cast the following spells without expending a spell slot:",
                    "dominate beast (25 points), dominate person (30 points), dominate monster (60 points)."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "immortalrule"
            }, {
                extrachoice: "tyrantsinfluence"
            }]
        }
    }
});

// * Pale Master necromancer subclass
AddSubClass("necromancer","pale master",{
    regExpSearch: /\bpale master\b/i,
    subname: "Pale Master",
    source: ["VSoS", 135],
    features: {
        "subclassfeature3" : {
            name: "Pale Master Spells",
            minlevel: 3,
            source: ["VSoS", 135],
            description: desc ([
                "I learn additional spells, which do not count towards the number of spells I know.",
            ]),
            spellcastingExtra: ["exhume", "inflict wounds", "invisibility", "ray of enfeeblement", "animate dead", "fear", "evard's black tentacles", "blight", "cloudkill", "scrying"],          
        },
        "subclassfeature3.1": {
            name: "Charnel Empower",
            minlevel: 3,
            source: ["VSoS", 135],
            description: desc([
                "When I deal damage with a 1st level or higher necromancy spell, I can expend Charnel Touch",
                "points (up to my necromancer level + my Intelligence modifier) to deal extra necrotic damage",
                "to one of the spell's targets equal to the points expended."
            ])
        },
        "subclassfeature6": {
            name: "Frightening Gaze",
            minlevel: 6,
            source: ["VSoS", 135],
            description: desc([
                "I gain proficiency in Intimidation. As a bonus action, I can spend 10 Charnel Touch points to",
                "force a creature I can see within 60 ft of me to make a Wisdom save vs my spell save DC or",
                "be frightened of me for 1 min, repeating the save at the end of each of its turns to end it."
            ]),
            action: ["bonus action", ""],
            skills: ["Intimidation"]
        },
        "subclassfeature10" : {
            name: "Thrall Rush",
            minlevel: 10,
            source: ["VSoS", 136],
            description: desc([
                "If I roll initiative and am not surprised, each thrall can move up to its speed or make 1 attack.",
            ])
        },
        "subclassfeature20" : {
            name: "Lichdom: Archlich",
            minlevel: 20,
            source: ["VSoS", 136],
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            "devoursoul" : {
                name: "Devour Soul",
                source: ["VSoS", 136],
                description: desc([
                    "When I reduce a hostile creature to 0 hit points, I can roll a d8 and regain expended spell slots",
                    "of my choice whose combined level is no greater than the number rolled. A creature whose",
                    "soul is devoured can't be restored to life by means short of a true resurrection or wish spell."
                ]),
                usages: 1,
                recovery: "long rest"
            },
            "paralyzingtouch" : {
                name: "Paralyzing Touch",
                source: ["VSoS", 136],
                description: desc([
                    "When I hit with a Charnel Touch attack and expend 20 or more points, the target must",
                    "succeed on a Constitution save vs my spell save DC or be paralyzed for 1 minute, repeating",
                    "the save at the end of each of its turns to end the condition."
                ])
            },
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "Paralyze (20 CT)";
                            fields.Description_Tooltip = "Paralyzing Touch: When you hit with a Charnel Touch attack and expend 20 or more points, the target must succeed on a Constitution saving throw against your spell save DC or be paralyzed for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.";
                        }
                    }, "When I hit with a Charnel Touch attack and expend 20 or more points, the target must succeed on a Constitution save vs my spell save DC or be paralyzed for 1 minute, repeating the save at the end of each of its turns to end the condition.",
                ]
            },
            autoSelectExtrachoices: [{
                extrachoice: "devoursoul"
            }, {
                extrachoice: "paralyzingtouch"
            }]
        }
    }
});

// * Pharaoh necromancer subclass
AddSubClass("necromancer","pharaoh",{
    regExpSearch: /\bpharaoh\b/i,
    subname: "Pharaoh",
    source: ["VSoS", 136],
    features: { 
        "subclassfeature3" : {
            name: "Pharaoh Spells & Holy Symbol",
            source: ["VSoS", 136],
            minlevel: 3,
            description: desc ([
                "I learn additional spells, which do not count towards the number of spells I know.",
                "I can also use a holy symbol as a spellcasting focus for my necromancer spells."
            ]),
            spellcastingExtra: ["bless", "guiding bolt", "halo of flame", "lesser restoration", "revivify", "snakestaff", "death ward", "divination", "greater restoration", "insect plague"],
        },
        "subclassfeature3.1" : {
            name: "Channel Divinity",
            source: ["VSoS", 137],
            minlevel: 3,
            description: desc([
                "I have 1 use of Channel Divinity. I can expend 15 Charnel Touch points to regain 1 use.",
            ]),
            usages: 1,
            altResource: "15 CT",
            recovery: "short rest"
        },
        "subclassfeature3.2" : {
            name: "Channel Divinity: Ankh of Radiance",
            source: ["VSoS", 137],
            minlevel: 3,
            description: desc([
                "As an action, I bless a number of willing creatures up to my Intelligence modifier that I can",
                "see within 60 ft of me. For 1 minute. The first time a blessed creature takes damage, it has",
                "resistance to that damage. If it took damage from a melee weapon attack, the attacker takes",
                "1d6 radiant damage. This damage increases by 1d6 at 5th, 11th, and 17th level."
            ]),
            additional: levels.map(function (n) { return (n < 5 ? "1d6" : n < 11 ? "2d6" : n < 17 ? "3d6" : "4d6"); }),
            action: ["action", ""]
        },
        "subclassfeature6" : {
            name: "Mock Divinity",
            source: ["VSoS", 137],
            minlevel: 6,
            description: desc([
                "I can create new effects when using the thaumaturgy cantrip:",
                "- Within an open area within 120 feet of me, changing darkness to dim light, dim",
                "   light to bright light, and vice versa. I can also change bright light to cause disadvantage on",
                "   Wisdom (Perception) checks which rely on sight, or darkness to limit darkvision to 30 ft (not",
                "   affecting creatures who can see in magical darkness).",
                "- Create a Huge illusory avatar of a deity at a point I can see within 120 ft of me, mimicking",
                "   my movement and projecting my speech in a booming voice for 1 minute."
            ]),
            spellcastingExtraApplyNonconform: true,
            spellcastingExtra: ["thaumaturgy", "bless", "guiding bolt", "halo of flame", "lesser restoration", "revivify", "snakestaff", "death ward", "divination", "greater restoration", "insect plague"],
            spellChanges: {
                "thaumaturgy": {
                    changes: "I can create additional effects using this cantrip: \n\u2022 You can brighten or darken the sun or moon, affecting the area within 120 feet of you for up to 1 minute. You can change darkness to dim light and dim light to bright light, or vice versa. Additionally, you can heighten bright light to a blazing radiance, which causes disadvantage on Wisdom (Perception) checks which rely on sight, or you can deepen darkness to a pitch black, which limits darkvision to a 30-foot radius. This deeper darkness has no effect on creatures that can see in magical darkness.\n\u2022 You manifest a Huge illusory avatar of a deity at a point you can see within 120 feet of you, which mimics your movements and projects your speech in a booming voice for 1 minute."
                }
            }
        },
        "subclassfeature10": {
            name: "Channel Divinity: Scarab of Judgement",
            source: ["VSoS", 137],
            minlevel: 10,
            description: desc([
                "As an action, I destroy an Undead I control within my reach, and a willing Humanoid I choose",
                "that I can see within 60 ft of me regains hit points equal to the Undead's hit points. A creature",
                "that regains hit points this way cannot do so this way again until it finishes a long rest."
            ]),
            action: ["action", ""]
        },
        "subclassfeature20" : {
            name: "Lichdom: God-King",
            source: ["VSoS", 137],
            minlevel: 20,
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            "canopicphylacteries": {
                name: "Canopic Phylacteries",
                source: ["VSoS", 137],
                description: desc([
                    "I gain four canopic jars containing my stomach, lungs, intestines, and liver. Each jar has a",
                    "weakness (discussed with my GM), and my immortality is stopped when all four jars are",
                    "destroyed. When I am reduced to 0 hit points, I reform at my sarcophagus."
                ]),
            },
            "mummyrot": {
                name: "Mummy Rot",
                source: ["VSoS", 137],
                description: desc([
                    "When I hit with a Charnel Touch attack and expend 20 or more points, the target must make",
                    "a Constitution save vs my spell save DC or be cursed. Cursed targets can't regain hit points,",
                    "and their hit point maximums decrease by 3d6 every 24 hours. If the curse reduces a target's",
                    "hit point maximum to 0, the target dies, & its body turns to dust. The curse lasts until",
                    "removed by the remove curse spell or similar magic."
                ])
            },
            "whirlwindofsand": {
                name: "Whirlwind of Sand",
                source: ["VSoS", 137],
                description: desc([
                    "As an action, I can transform into a whirlwind of sand, move up to 60 ft, and revert to my",
                    "normal form. While in whirlwind form, I am immune to all damage, can't be grappled,",
                    "petrified, knocked prone, restrained, or stunned. I retain all equipment in my possession."
                ]),
                action: ["action", ""]
            },
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "Mummy Rot (20 CT)";
                            fields.Description_Tooltip = "Mummy Rot: When you hit with a Charnel Touch attack and expend 20 or more points, the target must succeed on a Constitution saving throw against your spell save DC or be cursed with mummy rot. The cursed target can't regain hit points, and its hit point maximum decreases by 3d6 for every 24 hours that elapse. If the curse reduces the target's hit point maximum to 0, the target dies, and its body turns to dust. The curse lasts until removed by the remove curse spell or other magic."
                        }
                    }, "When I hit with a Charnel Touch attack and expend 20 or more points, the target must succeed on a Constitution saving throw against my spell save DC or be cursed with mummy rot."
                ]
            },
            autoSelectExtrachoices: [{
                extrachoice: "canopicphylacteries"
            }, {
                extrachoice: "mummyrot"
            }, {
                extrachoice: "whirlwindofsand"
            }]
        }
    }
});

// * Plague Lord necromancer subclass
AddSubClass("necromancer","plague lord",{
    regExpSearch: /\bplague lord\b/i,
    subname: "Plague Lord",
    source: ["VSoS", 137],
    features: { 
        "subclassfeature3": {
            name: "Charnel Toxin",
            minlevel: 3,
            source: ["VSoS", 138],
            description: desc([
                "When I hit with Charnel Touch and expend 5 or more points, the target must make a",
                "Constitution save vs my spell DC or be poisoned until the start of my next turn."
            ]),
            calcChanges: {
                atkAdd: [
                    function (fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "Toxin (5 CT)";
                            fields.Description_Tooltip += "Charnel Toxin: When you hit with a Charnel Touch attack and expend 5 or more points, the target must succeed on a Constitution saving throw against your spell save DC or be poisoned until the start of your next turn.";
                        }
                    }, "When I hit with Charnel Touch and expend 5 or more points, the target must make a Constitution save vs my spell DC or be poisoned until the start of my next turn."
                ]
            }
        },
        "subclassfeature3.1": {
            name: "Vile Congregation",
            minlevel: 3,
            source: ["VSoS", 138],
            description: desc([
                "When a hostile creature within 5 ft of me makes an attack roll or save, I can roll a d4 and",
                "subtract the result from the roll. This ability does not affect Constructs or Undead."
            ])
        },
        "subclassfeature6": {
            name: "Projectile Spew",
            minlevel: 6,
            source: ["VSoS", 138],
            description: desc([
                "My Charnel Touch, and my spells with a range of touch, now have a reach of 15 feet."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName))
                        {
                            fields.Range = "Melee 15 ft"
                        }
                    }, "I can reach creatures up to 15 feet away with my Charnel Touch feature."
                ],
                spellAdd: [
                    function (spellKey, spellObj, spName, isDuplicate){
                        if (spellObj.range == "Touch"){
                            spellObj.range = "15 ft";
                            return true;
                        }
                    }, "I can reach creatures up to 15 feet away with spells that have a range of Touch."
                ]
            },
        },
        "subclassfeature10": {
            name: "Bloated Thralls",
            minlevel: 10,
            source: ["VSoS", 138],
            description: desc ([
                "When a thrall dies or I release it, I can choose for each creature within 5 ft of it to make a",
                "Dexterity save vs my spell save DC, taking 4d6 poison damage and getting poisoned until the",
                "start of my next turn. On a save, creatures take half damage and are not poisoned."
            ]),
            weaponOptions: [{
                name: "Thrall Burst",
                source: ["VSoS", 138],
                regExpSearch: /\bthrall burst\b/i,
                type: "AlwaysProf",
                ability: 4,
                abilitytodamage: false,
                damage: [4,6, "Poison"],
                range: "5 ft rad",
                description: "On thrall death/release; All crea Dex save, targets poisoned until end of my next turn; save halves & no poison",
                dc: true,
                isNotWeapon: true,
                selectNow : true
            }]
        },
        "subclassfeature20": {
            name: "Lichdom: Corpulent Lich",
            minlevel: 20,
            source: ["VSoS", 138],
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            "goreburst": {
                name: "Gore Burst",
                source: ["VSoS", 138],
                description: desc([
                    "When I drop to 0 hit points, each creature within 20 ft of me must make a Dexterity save vs",
                    "my spell save DC or take 5d10 poison damage and be poisoned until the start of my next",
                    "turn. On a save, a creature takes half damage and isn't poisoned."
                ]),
            },
            "masterofdisease" : {
                name: "Master of Disease",
                source: ["VSoS", 138],
                description: desc([
                    "When I use my Charnel Toxin feature and expend 25 or more points, the target is poisoned",
                    "and cursed for up to 1 minute on a failed save. Choose two of the following effects to occur",
                    "while the target is cursed:",
                    "- The target has disadvantage on the checks and saves of one ability of my choice.",
                    "- The target can only see out to a radius of 10 feet.",
                    "- The target falls prone at the end of each of its turns.",
                    "- The target loses an extra 1d6 hit points whenever it takes damage.",
                    "- The target can only babble nonsense and can't perform verbal components of spells.",
                    "The target may repeat the save at the end of each of its turns to end the curse and the",
                    "poisoned condition."
                ])
            },
            calcChanges: {
                atkAdd: [
                    function (fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "Curse (25 CT)";
                            fields.Description_Tooltip += "\nMaster of Disease: When you use your Charnel Toxin feature and expend 25 or more points, the creature is poisoned and cursed for up to 1 minute on a failed save. Choose two of the following effects which afflict the target while it is cursed:\n\u2022 Choose one ability score. The target has disadvantage on ability checks and saving throws made with that ability score.\n\u2022 The target can only see out to a radius of 10 feet.\n\u2022 The target falls prone at the end of each of its turns.\n\u2022 The target loses an extra 1d6 hit points whenever it takes damage.\n\u2022 The target can speak only in a babblingnonsense language and can't perform the verbal components of spells.\nAt the end of each of its turns, the target makes a Constitution saving throw against your spell save DC, ending the curse and the poisoned condition on a success.";
                        }
                    }, "When I use my Charnel Toxin feature and expend 25 or more points, the target is poisoned and cursed with two effects of my choice (on the third page) for up to 1 minute on a failed save."
                ]
            },
            weaponOptions: [{
                name: "Gore Burst",
                source: ["VSoS", 138],
                regExpSearch: /\bgore burst\b/i,
                type: "AlwaysProf",
                ability: 4,
                abilitytodamage: false,
                damage: [10,10, "Necrotic"],
                range: "20 ft rad",
                description: "On drop to 0 hp; all crea Dex save, targets poisoned until end of my next turn; 5d10 is poison type; save halves & no poison",
                dc: true,
                isNotWeapon: true,
                selectNow : true
            }],
            autoSelectExtrachoices: [{
                extrachoice: "goreburst"
            }, {
                extrachoice: "masterofdisease"
            }]
        }
    }
});

// * Reanimator necromancer subclass
AddSubClass("necromancer","reanimator",{
    regExpSearch: /\breanimator\b/i,
    subname: "Reanimator",
    source: ["VSoS", 138],
    features: { 
        "subclassfeature3": {
            name: "Skilled Surgeon",
            minlevel: 3,
            source: ["VSoS", 138],
            description: desc([
                "I gain proficiency in Medicine. I can use Intelligence instead of Wisdom for Medicine checks."
            ]),
            skills: ["Medicine"],
            addMod: [
                {type: "skill", field: "Medicine", mod: "Int-Wis", text: "I can use my Intelligence modifier instead of Wisdom when making Medicine checks."},       
            ]
        },
        "subclassfeature3.1" : {
            name: "Mad Science",
            minlevel: 3,
            source: ["VSoS", 138],
            description: desc([
                "I spend 10 min installing a monsterous graft on one of my non-incorporeal thralls. My thralls",
                "don't lose hp when I install/remove grafts, & they don't need to recover from attachment.",
            ]),
			choices : ["Amphibious Adaptation (Donor: has Amphibious trait)", 
			"Arcane Synapses (Donor: has Spellcasting/Innate Spellcasting)", 
			"Beast's Hide (Donor: Large or larger Beast)", 
			"Bestial Weapons (Arms) (Donor: Bst/Drgn/Mons with Claw attack)", 
			"Bestial Weapons (Head) (Donor: Bst/Drgn/Mons with Bite attack)", 
			"Charging Hooves (Donor: has Charge trait or Gore/Hooves attack)", 
			"Climbing Apparatus (Donor: Bst/Humn/Mons with climb speed)", 
			"Doppel-Blooded (Donor: has shapechanger tag)", 
			"Draconis Fundamentum (Donor: Drgn/Humn/Mons with a Breath Weapon)", 
			"Dragon's Hide (Donor: Large or larger Dragon)", 
			"Energetic Suture (Acid) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to acid damage)",
			"Energetic Suture (Cold) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to cold damage)",
			"Energetic Suture (Fire) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to fire damage)",
			"Energetic Suture (Poison) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to poison damage)",
			"Energetic Suture (Thunder) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to thunder damage)",    
			"Fiend's Hide (Donor: Medium or larger Fiend)", 
			"Heart of Steel (Donor: Construct)", 
			"Horns (Donor: has Gore/Horns/Ram/Tusk attack)", 
			"Indiscernible Anatomy (Donor: Medium or larger Aberration)", 
			"Leaping Legs (Donor: has the Pounce/Standing Leap trait)", 
			"Olfactory Implants (Donor: has Keen Smell/Keen Hearing and Smell trait)", 
			"Oversized Arms (Donor: Giant)", 
			"Prehensile Tail (Donor: has a Tail attack)", 
			"Regenerating Marrow (Donor: has the Regeneration trait)", 
			"Replacement (Donor: any creature)", 
			"Stench (Donor: has the Stench trait)", 
			"Tentacles (Donor: has a Tentacles/Tendrils attack)", 
			"Venom Sac (Donor: has a natural weapon/trait that deals poison/poisoned condition)", 
			"Voice Box (Donor: has the Mimicry trait)", 
			"Webspinner Apparatus (Donor: has a Web action)"],
			times : 1,
			"amphibious adaptation (donor: has amphibious trait)" : {
				name: "Amphibious Adaptation",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Amphibious Adaptation: The undead thrall can breathe both air and water.");
						aFnc(prefix + "Comp.Use.Speed", ",\nswim 30 ft");
					},
					"My alchemy undead thrall gains the Monsterous Graft: Amphibious Adaptation."]
				}
			},
			"arcane synapses (donor: has spellcasting/innate spellcasting)" : {
				name: "Arcane Synapses",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Arcane Synapses: The undead thrall knows 1 wizard cantrip. If a second creature is harvested and grafted, it knows 2 wizard cantrips.");
					},
					"My undead thrall gains the Monsterous Graft: Arcane Synapses."]
				},
				spellcastingBonus: [{
					name: "Arcane Synapses (undead thrall)",
					firstCol: "AG",
					times: 2,
					spellcastingAbility: 4,
					"class": ["wizard"],
					level: [0,0],
				}]
			},
			"beast's hide (donor: large or larger beast)" : {
				name: "Beast's Hide",
				source: ["VSoS", 370],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", "13+Dex");
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					},
					"My undead thrall's AC is equal to 13 + its Dexterity Modifier, if its worn armor isn't higher. It may benefit from a shield."]
				},
			},
			"bestial weapons (arms) (donor: bst/drgn/mons with claw attack)" : {
				name: "Bestial Weapons (Arms)",
				source: ["VSoS", 370],
				submenu: "[Arms Grafts]",
				description: "",                  
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;         
						if (bAdd) { 
							AddWeapon("Bestial Weapon: Claws", "", prefix);
                            if(GetFeatureChoice('classes', 'necromancer', 'subclassfeature3.1', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
                            }
						}
						else {
							for (i = 1; i < 3; ++i){
								if (/bestial weapon: claws/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My undead thrall gains the Monsterous Graft: Bestial Weapons (Arms).",
					900],
				},
			},
			"bestial weapons (head) (donor: bst/drgn/mons with bite attack)" : {
				name: "Bestial Weapons (Head)",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;           
						if (bAdd) { 
							AddWeapon("Bestial Weapon: Teeth", "", prefix); 
                            if(GetFeatureChoice('classes', 'necromancer', 'subclassfeature3.1', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
                            }
                        }
						else {
							for (i = 1; i < 3; ++i){
								if (/bestial weapon: teeth/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My undead thrall gains the Monsterous Graft: Bestial Weapons (Head).",
					900],
				},
			},
			"charging hooves (donor: has charge trait or gore/hooves attack)" : {
				name: "Charging Hooves",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Charging Hooves: Once on each of its turns, if the undead thrall moves 15 ft in straight line, it can move +10 ft in that direction");
					}]
				}
			},
			"climbing apparatus (donor: bst/humn/mons with climb speed)" : {
				name: "Climbing Apparatus",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Speed", ",\nclimb 30 ft");
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Climbing Apparatus: The undead thrall gains a climb speed equal to its walking speed.");
					}]
				}
			},
			"doppel-blooded (donor: has shapechanger tag)" : {
				name: "Doppel-Blooded",
				source: ["VSoS", 370],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Doppel-Blooded: Once per long rest, The undead thrall can transform its appearance for 1 hr. it can change its height, weight, face, voice, hair, & race. It cannot become a different size, and its basic shape remains.");
					}]
				}
			},
			"draconis fundamentum (donor: drgn/humn/mons with a breath weapon)" : {
				name: "Draconis Fundamentum",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
				creatureCallback: [function(prefix, oCrea, bAdd) {
					if (!/undead thrall/i.test(oCrea.companion)) return;             
					if (bAdd) { 
						AddWeapon("Draconis Fundamentum", "", prefix); 
                        if(GetFeatureChoice('classes', 'necromancer', 'subclassfeature3.1', true).indexOf("oversized arms (donor: giant)") !== -1) {
                            CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
                        }
					}
					else {
						for (i = 1; i < 3; ++i){
							if (/Draconis Fundamentum/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
								Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My undead thrall gains the Monsterous Graft: Draconis Fundamentum.",
					900],
				}
			},
			"dragon's hide (donor: large or larger dragon)" : {
				name: "Dragon's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", 17);
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					}, "My undead thrall's AC is equal to 17, if its worn armor isn't higher. It may benefit from a shield."]
				}
			},
			"energetic suture (acid) (donor: clst/drgn/elem/fey/fnd with imm/res to acid damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, acid") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", acid", ".") );
					}]
				}
			},
			"energetic suture (cold) (donor: clst/drgn/elem/fey/fnd with imm/res to cold damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, cold") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", cold", ".") );
					}]
				}
			},
			"energetic suture (fire) (donor: clst/drgn/elem/fey/fnd with imm/res to fire damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, fire") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", fire", ".") );
					}]
				}
			},
			"energetic suture (poison) (donor: clst/drgn/elem/fey/fnd with imm/res to poison damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, poison") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", poison", ".") );
					}]
				}
			},
			"energetic suture (thunder) (donor: clst/drgn/elem/fey/fnd with imm/res to thunder damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace("adamantine.", "adamantine, thunder") );
						else Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(", thunder", ".") );
					}]
				}
			},
			"fiend's hide (donor: medium or larger fiend)" : {
				name: "Fiend's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if (bAdd) Value(prefix + "Comp.Use.AC", "15+min(Dex|2)");
						else Value(prefix + "Comp.Use.AC", "14+Dex");
					}, "My undead thrall's AC is equal to 15 + its Dexterity Modifier, max 2, if its worn armor isn't higher. It may benefit from a shield."]
				}
			},
			"heart of steel (donor: construct)" : {
				name: "Heart of Steel",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Heart of Steel: The undead thrall ignores effects of 1 level of exhaustion & finishes a long rest in 4 hours.");
					}]
				}
			},
			"horns (donor: has gore/horns/ram/tusk attack)" : {
				name: "Horns",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;           
						if (bAdd) { 
							AddWeapon("Horns", "", prefix);
                            if(GetFeatureChoice('classes', 'necromancer', 'subclassfeature3.1', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
                            }
						}
						else {
							for (i = 1; i < 3; ++i){
								if (/horns/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My undead thrall gains the Monsterous Graft: Horns.",
					900],
				},        
			},
			"indiscernible anatomy (donor: medium or larger aberration)" : {
				name: "Indiscernible Anatomy",
				source: ["VSoS", 372],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Indiscernible Anatomy: Critical hits against the undead thrall become normal hits.");
					}]
				}
			},
			"leaping legs (donor: has the pounce/standing leap trait)" : {
				name: "Leaping Legs",
				source: ["VSoS", 372],
				submenu: "[Legs Grafts]",
				description: " My jump distance doubles. I can jump my full distance without a running start.",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Leaping Legs: The undead thrall's jump distance is doubled. It can jump its full distance without a running start.");
					}]
				}
			},
			"olfactory implants (donor: has keen smell/keen hearing and smell trait)" : {
				name: "Olfactory Implants",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Senses", "Keen Smell");
					}]
				}
			},
			"oversized arms (donor: giant)" : {
				name: "Oversized Arms",
				source: ["VSoS", 372],
				submenu: "[Arms Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;
						if(bAdd) {
							CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
						}
						if(!bAdd) {
							CompanionList["undead thrall"].commonremoveeval(prefix, oCrea, bAdd);
						}
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits.", "\n\u25C6 Oversized Arms: The undead thrall's reach increases by 5 ft, unless the weapon used has Reach. It has advantage on saves made to maintain grip on objects.")
					},
					"My undead thrall's reach increases by 5 ft, unless the weapon it is using has Reach.", 1000]	
				}
			},
			"prehensile tail (donor: has a tail attack)" : {
				name: "Prehensile Tail",
				source: ["VSoS", 372],
				submenu: "[External Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;            
						if (bAdd) { 
							AddWeapon("Prehensile Tail", "", prefix);
							AddString(prefix + "Comp.Use.Features", "\n\u25C6 Prehensile Tail: The undead thrall's tail can hold and manipulate objects, but cannot use weapons/shields");
                            if(GetFeatureChoice('classes', 'necromancer', 'subclassfeature3.1', true).indexOf("oversized arms (donor: giant)") !== -1) {
                                CompanionList["undead thrall"].commoneval(prefix, oCrea, bAdd);
                            }
						}
						else {
							for (i = 1; i < 3; ++i){
								if (/Prehensile Tail/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
							RemoveString(prefix + "Comp.Use.Features", "\n\u25C6 Prehensile Tail: The undead thrall's tail can hold and manipulate objects, but cannot use weapons/shields");
						}
					},
					"My undead thrall gains the Monsterous Graft: Prehensile Tail.",
					900], 
				}
			},
			"regenerating marrow (donor: has the regeneration trait)" : {
				name: "Regenerating Marrow",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Regenerating Marrow: Once per short rest, the undead thrall can use a bonus action to regain hit points equal to 1d10 + Constitution modifier.");
					}]
				}
			},
			"replacement (donor: any creature)" : {
				name: "Replacement",
				source: ["VSoS", 373],
				submenu: "[Any Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Replacement: A replacement limb or organ functions the same as the missing one. It takes up the most relevant body slot.");
					}]
				}
			},
			"stench (donor: has the stench trait)" : {
				name: "Stench",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Stench: Once per short rest, as a bonus action, each creature within 10 ft of the undead thrall must make a Con save, DC 15, or be poisoned until the end of their next turn.");
					}]
				}
			},
			"tentacles (donor: has a tentacles/tendrils attack)" : {
				name: "Tentacles",
				source: ["VSoS", 373],
				submenu: "[Arms Grafts]",
				description: "",
				calcChanges : {
					creatureCallback: [function(prefix, oCrea, bAdd) {
						if (!/undead thrall/i.test(oCrea.companion)) return;           
						if (bAdd) { AddWeapon("Tentacles", "", prefix); } // * no need to call commoneval
						else {
							for (i = 1; i < 3; ++i){
								if (/tentacles/i.test(What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")))
									Value(prefix + "Comp.Use.Attack." + i + ".Weapon Selection", "");
							}
						}
					},
					"My undead thrall gains the Monsterous Graft: Tentacles.",
					900],   
				}
			},
			"venom sac (donor: has a natural weapon/trait that deals poison/poisoned condition)" : {
				name: "Venom Sac",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Venom Sac: Once per short rest, as a bonus action, the undead thrall can coat a weapon in basic poison. The save DC for this poison is 15.");
					}]
				}
			},
			"voice box (donor: has the mimicry trait)" : {
				name: "Voice Box",
				source: ["VSoS", 373],
				submenu: "[Head Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Traits", "\n\u25C6 Voice Box: The undead thrall can mimic any sound it has heard, including voices. Creatures can tell they are mimicries if they succeed on an Insight check contested by my Deception check.");
					}]
				}
			},
			"webspinner apparatus (donor: has a web action)" : {
				name: "Webspinner Apparatus",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				description: "",
				calcChanges: {
					creatureCallback: [function(prefix, oCrea,bAdd){
						if (!/undead thrall/i.test(oCrea.companion)) return;
						var aFnc = bAdd ? AddString : RemoveString;
						aFnc(prefix + "Comp.Use.Features", "\n\u25C6 Webspinner Apparatus: Once per short rest, the undead thrall can cast the web spell without using a spell slot or components.");
					}]
				},
				spellcastingBonus : [{
					spells: ["web"],
					name: "Webspinner Apparatus",
					selection: ["web"],
					firstCol: "AG",
					spellcastingAbility : 3,
					allowUpCasting: false
				}]
			}
            
        },
        "subclassfeature3.2" : {
            name: "Charnel Voltage",
            minlevel: 3,
            source: ["VSoS", 139],
            description: desc([
                "I can deal lightning damage using my Charnel Touch. When I do this and spend 5 or more CT",
                "points, another creature within 5 ft of the target makes a Dex save vs my spell save DC, taking",
                "lightning damage equal to half the points spent on failure.",
            ]),
            calcChanges: {
                atkAdd: [
                    function (fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "") + "; Voltage (5 CT)";
                            fields.Description_Tooltip += "Charnel Voltage: You can choose to deal lightning damage instead of necrotic damage with your Charnel Touch. When you hit with a Charnel Touch attack that deals lightning damage and expends 5 or more points, you can cause the energy to arc to a second creature within 5 feet of the target. The second creature must make a Dexterity saving throw against your spell save DC, taking lightning damage equal to half the number of Charnel Touch points expended on a failed save."
                        }
                    }, "I can choose to deal lightning damage instead of necrotic damage with my Charnel Touch. When I hit with a Charnel Touch attack that deals lightning damage and expends 5 or more points, you can cause the energy to arc to a second creature within 5 feet of the target. The second creature must make a Dexterity saving throw against your spell save DC, taking lightning damage equal to half the number of Charnel Touch points expended on a failed save."
                ]
            },                
        },
        "subclassfeature6": {
            name: "Lazarus Bolt",
            minlevel: 6,
            source: ["VSoS", 139],
            description: desc ([
                "As an action, I can touch a creature that has died within the last min that doesn't lack vital",
                "organs or has died from old age. The creature gains 1 hit point. For 1 min, I can restore hit",
                "points to it using my Charnel Touch feature as if it was Undead."
            ]),
            action: ["action", ""]
        },
        "subclassfeature10": {
            name: "Arcane Stitching",
            minlevel: 10,
            source: ["VSoS", 139],
            description: desc([
                "I can spend 1 min and 10 Charnel Touch points to apply a stitch to 1 of my thralls. Only 1",
                "thrall can be stitched, and a thrall can only have 1 type of stitch. A stitch lasts until activated,",
                "the thrall is killed, or I finish a long rest. See third page."
            ]),
            "augmentedincision": {
                name: "Augmented Incision",
                source: ["VSoS", 139],
                description: desc([
                    "The thrall can activate this stitch to gain advantage on attack rolls and ability checks until the",
                    "end of its next turn."
                ])
            },
            "bulwarkbackstitch": {
                name: "Bulwark Backstitch",
                source: ["VSoS", 139],
                description: desc(["The thrall can activate this stitch to cast the shield spell when it is hit by an attack."])
            },
            "fleetthreads": {
                name: "Fleet Threads",
                source: ["VSoS", 139],
                description: desc(["The thrall can activate this stitch to triple its speed until the end of its next turn."])
            },
            "voltaicsuture": {
                name: "Voltaic Suture",
                source: ["VSoS", 139],
                description: desc([
                    "When the thrall hits a creature with an attack, it can activate this stitch to deal an extra 3d6",
                    "lightning or necrotic damage (my choice)."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "augmentedincision"
            }, {
                extrachoice: "bulwarkbackstitch"
            }, {
                extrachoice: "fleetthreads"
            }, {
                extrachoice: "voltaicsuture"
            }]
        },
        "subclassfeature20": {
            name: "Lichdom: Patchwork Golem",
            minlevel: 20,
            source: ["VSoS", 139],
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            scoresOverride: [20,20,20,0,0,0],
            dmgres: [["Bludgeoning", "Bludg. (nonmagical)"], ["Piercing", "Pierc. (nonmagical)"], ["Slashing", "Slash. (nonmagical)"]],
            savetxt: { adv_vs : ["spells", "magical effects"], },
            toNotesPage: [{
                name: "Golem Form",
                source: ["VSoS", 139],
                note: desc([
                    "My Strength, Dexterity & Constitution scores become 20 if they weren't already higher. I gain",
                    "resistance to bludgeoning, piercing, and slashing damage from nonmagical attacks that aren't",
                    "adamantine. I don't lose hit points or hit dice from installing/removing monsterous grafts, and",
                    "I take no time to recover from the attachment of a monsterous graft."
                ]),
                page3notes: true
            }, {
                name: "Magic Resistance",
                source: ["VSoS", 139],
                note: desc(["I have advantage on saves against spells and other magical effects."]),
                page3notes: true
            }],
			choices : ["Amphibious Adaptation (Donor: has Amphibious trait)", 
							"Arcane Synapses (Donor: has Spellcasting/Innate Spellcasting)", 
							"Beast's Hide (Donor: Large or larger Beast)", 
							"Bestial Weapons (Arms) (Donor: Bst/Drgn/Mons with Claw attack)", 
							"Bestial Weapons (Head) (Donor: Bst/Drgn/Mons with Bite attack)", 
							"Charging Hooves (Donor: has Charge trait or Gore/Hooves attack)", 
							"Climbing Apparatus (Donor: Bst/Humn/Mons with climb speed)", 
							"Darkvision (Donor: has Darkvision)", 
							"Doppel-Blooded (Donor: has shapechanger tag)", 
							"Draconis Fundamentum (Donor: Drgn/Humn/Mons with a Breath Weapon)", 
							"Dragon's Hide (Donor: Large or larger Dragon)", 
							"Energetic Suture (Acid) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to acid damage)",
							"Energetic Suture (Cold) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to cold damage)",
							"Energetic Suture (Fire) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to fire damage)",
							"Energetic Suture (Lightning) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to lightning damage)",
							"Energetic Suture (Poison) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to poison damage)",
							"Energetic Suture (Thunder) (Donor: Clst/Drgn/Elem/Fey/Fnd with imm/res to thunder damage)",    
							"Fiend's Hide (Donor: Medium or larger Fiend)", 
							"Heart of Steel (Donor: Construct)", 
							"Horns (Donor: has Gore/Horns/Ram/Tusk attack)", 
							"Indiscernible Anatomy (Donor: Medium or larger Aberration)", 
							"Leaping Legs (Donor: has the Pounce/Standing Leap trait)", 
							"Olfactory Implants (Donor: has Keen Smell/Keen Hearing and Smell trait)", 
							"Oversized Arms (Donor: Giant)", 
							"Prehensile Tail (Donor: has a Tail attack)", 
							"Regenerating Marrow (Donor: has the Regeneration trait)", 
							"Replacement (Donor: any creature)", 
							"Stench (Donor: has the Stench trait)", 
							"Tentacles (Donor: has a Tentacles/Tendrils attack)", 
							"Venom Sac (Donor: has a natural weapon/trait that deals poison/poisoned condition)", 
							"Voice Box (Donor: has the Mimicry trait)", 
							"Webspinner Apparatus (Donor: has a Web action)"],
            times : 1,
			"amphibious adaptation (donor: has amphibious trait)" : {
				name: "Amphibious Adaptation",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I can breathe both air and water. I gain a swim speed equal to my walking speed.",
				speed : {
					swim : { spd : "walk", enc : "walk" }
				}
			},
			"arcane synapses (donor: has spellcasting/innate spellcasting)" : {
				name: "Arcane Synapses",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I learn 1 wizard cantrip of my choice. Int is my spellcasting ability for this cantrip."+
								"\n   I can harvest a second creature to learn 1 more wizard cantrip.",
				spellcastingBonus: [{
					name: "Arcane Synapses",
					firstCol: "atwill",
					times: levels.map(function(n) {return n < 2 ? 0 : 1; }),
					spellcastingAbility: 4,
					"class": ["wizard"],
					level: [0,0],
				}]
			},
			"beast's hide (donor: large or larger beast)" : {
				name: "Beast's Hide",
				source: ["VSoS", 370],
				submenu: "[External Grafts]",
				description: "\n   My AC is 13 + Dex mod, if higher than the armor I am wearing. Shields may still apply.",
				armorAdd: "Beast's Hide",
				armorOptions: [{
					name : "Beast's Hide",
					source: ["VSoS", 370],
					regExpSearch: /\bbeast's hide\b/i,
					ac: "13",
					selectNow : true
				}]
			},
			"bestial weapons (arms) (donor: bst/drgn/mons with claw attack)" : {
				name: "Bestial Weapons (Arms)",
				source: ["VSoS", 370],
				submenu: "[Arms Grafts]",
				description: desc("I gain claws I can use to make unarmed strikes: Finesse, 1d6+Str/Dex slashing damage."),
				weaponOptions: [{
					name: "Claws",
					source: ["VSoS", 370],
					regExpSearch: /\bclaws\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "slashing"],
					range: "Melee",
					description: "Finesse",
					list: "melee",
					selectNow : true
				}]
			},
			"bestial weapons (head) (donor: bst/drgn/mons with bite attack)" : {
				name: "Bestial Weapons (Head)",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: "\n   I gain teeth I can use to make unarmed strikes: Finesse, 1d6+Str/Dex piercing damage.",
				weaponOptions: [{
					name: "Teest",
					source: ["VSoS", 370],
					regExpSearch: /\bteeth\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "slashing"],
					range: "Melee",
					description: "Finesse",
					list: "melee",
					selectNow : true
				}]
			},
			"charging hooves (donor: has charge trait or gore/hooves attack)" : {
				name: "Charging Hooves",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "\n   Once on each of my turns, if I move 15 ft in straight line, I can move +10 ft in that direction.",
			},
			"climbing apparatus (donor: bst/humn/mons with climb speed)" : {
				name: "Climbing Apparatus",
				source: ["VSoS", 370],
				submenu: "[Legs Grafts]",
				description: "\n    I gain a climb speed equal to my walking speed.",
				speed : {
					climb : { spd : "walk", enc : "walk" }
				}
			},
			"darkvision (donor: has darkvision)" : {
				name: "Darkvision",
				source: ["VSoS", 370],
				submenu: "[Head Grafts]",
				description: " I gain 60 ft darkvision.",
				vision: [["Darkvision", 60]]
			},
			"doppel-blooded (donor: has shapechanger tag)" : {
				name: "Doppel-Blooded",
				source: ["VSoS", 370],
				submenu: "[Internal Grafts]",
				additional: "1 x long rest",
				description: "\n   I can transform my appearance for 1 hr. I can change my height, weight, face, voice, "+
								"\n   hair, & race. I cannot become a different size, and my basic shape remains.",
				extraLimitedFeatures: [{
					name: "Shape Change",
					usages: 1,
					recovery: "long rest",
				}]
			},
			"draconis fundamentum (donor: drgn/humn/mons with a breath weapon)" : {
				name: "Draconis Fundamentum",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n   As an action, each creature in a 15 ft cone makes a Dex save against 8+Con+Prof."+
								"\n   Each creature takes (Prof)d6 damage or half on save, same damage type as donor's.",
				weaponOptions: [{
					name: "Draconis Fundamentum",
					source: ["VSoS", 371],
					regExpSearch: /\bdraconis fundamentum\b/i,
					type: "Natural",
					ability: 3,
					abilitytodamage: false,
					damage: [1, 6, ""],
					range: "15 ft cone",
					description: "\u00BD on Dex save",
					dc: true
				}],
				calcChanges: {
					atkAdd : [function (fields, v) {
						if (/\bdraconis fundamentum\b/i.test(v.WeaponTextName)){
							fields.Damage_Die = How("Proficiency Bonus") + "d6";
						}
					},
					"My Draconis Fundamentum attack deals 1d6 damage for each point of my proficiency bonus."
				]},
				action: ["action", "Draconis Fundamentum"],
				extraLimitedFeatures: {
					name: "Draconis Fundamentum",
					usages: 1,
					recovery: "short rest",
				}
			},
			"dragon's hide (donor: large or larger dragon)" : {
				name: "Dragon's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "\n   My AC is 17, if higher than the armor I am wearing. Shields may still apply."+
							 "\n   I gain resistance to acid/cold/fire/lightning/poison damage if the"+
							 "\n   donor was immune to it. I only gain resistance if I am proficient with"+
							 "\n   heavy armor.",
				armorOptions: [{
					name : "Dragon's Hide",
					source: ["VSoS", 31],
					regExpSearch: /\bdragon's hide\b/i,
					dex: -10,
					ac: "17",
					selectNow : true
				}]
			},
			"energetic suture (acid) (donor: clst/drgn/elem/fey/fnd with imm/res to acid damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to acid damage.",
				dmgres: ["Acid"],                    
			},
			"energetic suture (cold) (donor: clst/drgn/elem/fey/fnd with imm/res to cold damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to cold damage.",
				dmgres: ["Cold"],                    
			},
			"energetic suture (fire) (donor: clst/drgn/elem/fey/fnd with imm/res to fire damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to fire damage.",
				dmgres: ["Fire"],                    
			},
			"energetic suture (lightning) (donor: clst/drgn/elem/fey/fnd with imm/res to lightning damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to lightning damage.",
				dmgres: ["Lightning"],                    
			},
			"energetic suture (poison) (donor: clst/drgn/elem/fey/fnd with imm/res to poison damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to poison damage.",
				dmgres: ["Poison"],                    
			},
			"energetic suture (thunder) (donor: clst/drgn/elem/fey/fnd with imm/res to thunder damage)" : {
				name: "Energetic Suture",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: " I gain resistance to thunder damage.",
				dmgres: ["Thunder"],                    
			},
			"fiend's hide (donor: medium or larger fiend)" : {
				name: "Fiend's Hide",
				source: ["VSoS", 371],
				submenu: "[External Grafts]",
				description: "\n   My AC is 15 + Dex (max 2) if higher than the armor I am wearing. Shields may still apply.",
				armorOptions: [{
					name : "Fiend's Hide",
					source: ["VSoS", 31],
					regExpSearch: /\bfiend's hide\b/i,
					dex: 2,
					ac: "15",
					selectNow : true
				}]
			},
			"heart of steel (donor: construct)" : {
				name: "Heart of Steel",
				source: ["VSoS", 371],
				submenu: "[Internal Grafts]",
				description: "\n    I may ignore the effects of 1 level of exhaustion & finish a long rest in 4 hours.",
				savetxt: {
					immune: ["1st level exhaustion"]
				}
			},
			"horns (donor: has gore/horns/ram/tusk attack)" : {
				name: "Horns",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "\n   I gain horns I can use to make unarmed strikes: 1d6+Str damage of same type as donor."+
								"\n   If I move in a straight line for 10 ft immediately before making a horn attack, I can force "+
								"\n   the target into a Strength contest to knock them prone.",
				weaponOptions: [{
					name: "Horns",
					source: ["VSoS", 372],
					regExpSearch: /\bHorns\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee",
					selectNow : true
				}],             
			},
			"indiscernible anatomy (donor: medium or larger aberration)" : {
				name: "Indiscernible Anatomy",
				source: ["VSoS", 372],
				submenu: "[Internal Grafts]",
				description: "\n    Critical hits against me become normal hits.",
			},
			"leaping legs (donor: has the pounce/standing leap trait)" : {
				name: "Leaping Legs",
				source: ["VSoS", 372],
				submenu: "[Legs Grafts]",
				description: "\n    My jump distance doubles. I can jump my full distance without a running start.",
			},
			"olfactory implants (donor: has keen smell/keen hearing and smell trait)" : {
				name: "Olfactory Implants",
				source: ["VSoS", 372],
				submenu: "[Head Grafts]",
				description: "\n   I gain advantage on Wisdom (Perception) checks that rely on smell.",
				vision : [["Keen Smell", 0]]
			},
			"oversized arms (donor: giant)" : {
				name: "Oversized Arms",
				source: ["VSoS", 372],
				submenu: "[Arms Grafts]",
				description: desc([
					"+5 ft Melee reach, unless the weapon used has Reach. If Small, I can use heavy weapons",
					"without penalty. I have adv. on Str checks and saves I make to maintain my grip on objects."
				]),
				savetxt: {
					adv_vs: ["keeping grip on an object"]
				},
				calcChanges: {
					atkAdd: [ 
						function (fields, v) 	{
							if(v.isMeleeWeapon && (/\d+\s?(ft|m)/i).test(fields.Range) && !/reach/i.test(fields.Description)) { // * Checks for "Melee (x ft)"
								var rNum = fields.Range.match(/\d+\s?(ft|m)/i);
								var unit = rNum[2];
								var curRange = parseInt(rNum[1], 10);
								fields.Range = fields.Range.replace(/\d+\s?(ft|m)/i, (curRange + 5) + " " + unit);
							}
							if(v.isMeleeWeapon && !(/\(\d+\s?(ft|m)\)/i).test(fields.Range) && !/reach/i.test(fields.Description)) {
								fields.Range = "Melee (10 ft)";
								fields.Description += (fields.Description ? "; " : "") + "Reach"
							}
						},
						"My melee reach increases by 5 ft, unless the weapon I am using has Reach."
					]
				}
			},
			"prehensile tail (donor: has a tail attack)" : {
				name: "Prehensile Tail",
				source: ["VSoS", 372],
				submenu: "[External Grafts]",
				description: "\n   I gain a tail I can use to make unarmed strikes: Finesse, 1d6+Str/Dex bludgeoning damage."+
								"\n   I can hold and manipulate objects with the tail, but it cannot use weapons/shields.",
				weaponOptions: [{
					name: "Tail",
					source: ["VSoS", 372],
					regExpSearch: /\btail\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee",
					description: "Finesse",
					selectNow : true
				}],    
			},
			"regenerating marrow (donor: has the regeneration trait)" : {
				name: "Regenerating Marrow",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    I can use a bonus action to regain hit points equal to 1d10 + Constitution modifier.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Regenerating Marrow",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"replacement (donor: any creature)" : {
				name: "Replacement",
				source: ["VSoS", 373],
				submenu: "[Any Grafts]",
				description: desc("A replacement limb/organ functions identically. It takes up the most relevant body slot.")
			},
			"stench (donor: has the stench trait)" : {
				name: "Stench",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    As a bonus action, each creature within 10 ft of me must Con save, DC (8+Prof+Con)"+
								"\n    or be poisoned until the end of their next turn.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Stench",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"tentacles (donor: has a tentacles/tendrils attack)" : {
				name: "Tentacles",
				source: ["VSoS", 373],
				submenu: "[Arms Grafts]",
				description: desc([
					"I gain a tentacle I can use to make unarmed strikes: Finesse, 10 ft, 1d6+Str/Dex bludgeoning.",
					"When I hit with this attack, I may use my bonus action to attempt to grapple the target."
				]),
				weaponOptions: [{
					name: "Tentacle",
					source: ["VSoS", 373],
					regExpSearch: /\btentacle\b/i,
					type: "Natural",
					ability: 1,
					abilitytodamage: true,
					damage: [1, 6, "Bludgeoning"],
					range: "Melee (10 ft)",
					description: "Finesse, Reach, on hit, may use bonus action to attempt a grapple on target",
					selectNow : true
				}],    
			},
			"venom sac (donor: has a natural weapon/trait that deals poison/poisoned condition)" : {
				name: "Venom Sac",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    As a bonus action, I can coat a weapon in basic poison. the save DC = 8+Prof+Con mod.",
				action: ["bonus action", ""],
				extraLimitedFeatures: [{
					name: "Venom Sac",
					usages: 1,
					recovery: "short rest"
				}]
			},
			"voice box (donor: has the mimicry trait)" : {
				name: "Voice Box",
				source: ["VSoS", 373],
				submenu: "[Head Grafts]",
				description: "\n   I can mimic any sound I have heard, including voices. Creatures can tell they are mimicries"+
								"\n   if they succeed on an Insight check contested by my Deception check.",
			},
			"webspinner apparatus (donor: has a web action)" : {
				name: "Webspinner Apparatus",
				source: ["VSoS", 373],
				submenu: "[Internal Grafts]",
				additional: "1 x short rest",
				description: "\n    I can cast the web spell without using a spell slot or components: DC 8+Prof+Con mod.",
				extraLimitedFeatures: [{
					name: "Webspinner Apparatus",
					usages: 1,
					recovery: "short rest"
				}],
				spellcastingBonus : [{
					spells: ["web"],
					name: "Webspinner Apparatus",
					selection: ["web"],
					firstCol: "oncesr",
					spellcastingAbility: 3,
					allowUpCasting: false,
				}]
			}
        }
    }
});

// * Reaper necromancer subclass
AddSubClass("necromancer","reaper",{
    regExpSearch: /\breaper\b/i,
    subname: "Reaper",
    source: ["VSoS", 139],
    features: { 
        "subclassfeature3": {
            name: "Reaper Spells",
            source: ["VSoS", 139],
            minlevel: 3,
            description: desc ([
                "I learn additional spells, which do not count towards the number of spells I know."
            ]),
            spellcastingExtraApplyNonconform: true,
            spellcastingExtra: ["false life", "inflict wounds", "invisibility", "silence", "fear", "speak with dead", "greater invisibility", "phantasmal killer", "mislead", "passwall"],
        },
        "subclassfeature3.1": {
            name: "Charnel Veil",
            source: ["VSoS", 139],
            minlevel: 3,
            description: desc([
                "When I hit with Charnel Touch and expend 5 or more points, I become invisible until the start",
                "of my next turn. This effect ends early if I move 15 feet or more."
            ]),
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += "; Veil (5 CT)";
                            fields.Description_Tooltip += "Charnel Veil: When you hit with a Charnel Touch attack and expend 5 or more points, you become invisible until the start of your next turn. This effect ends early if you move 15 feet or more.";
                        }
                    }
                ]
            }
        },
        "subclassfeature6" : {
            name: "Umbral Form",
            source: ["VSoS", 139],
            minlevel: 6,
            description: desc([
                "As an action, I become a shadow on a surface; my movement speed doubles, I gain a climb",
                "speed equal to my move speed, I can move across difficult surfaces without an ability check,",
                "and I can't jump or fly. As a shadow, attacks against me have disadv, and in darkness, I am",
                "invisible to any creature that would need darkvision to see me in that darkness. I can't take",
                "actions as a shadow. My equipment merges with me and has no effect until I leave the form. I",
                "can leave the form as a bonus action or when I start my turn (no action required)."
            ]),
            action: [["action", "Enter Umbral Form"], ["bonus action", "Exit Umbral Form"]],
        },
        "subclassfeature10": {
            name: "Wraith Flight",
            source: ["VSoS", 140],
            minlevel: 10,
            description: desc(["Thrall fly speeds double, and while flying, opportunity attacks against them have disadv."]),
            calcChanges: {
                companionCallback: [
                    function(prefix, oCrea, bAdd, sCompType) {
                        if (sCompType !== "undead thrall" && !(/fly ?(\d+)/i).test(oCrea.speed)) return;
                        if(bAdd && (/fly ?(\d+)/i).test(oCrea.speed)) {
                            var spd = oCrea.speed.match(/fly ?(\d+)/i)
                            var newSpd = parseInt(spd[1]) * 2;
                            Value(prefix + "Comp.Use.Speed", What(prefix + "Comp.Use.Speed").replace(/fly ?(\d+)/i, "fly " + newSpd));
                        }
                        else Value(prefix + "Comp.Use.Speed", oCrea.speed);
                    }
                ]
            }
        },
        "subclassfeature20" : {
            name: "Lichdom: Grim Reaper",
            source: ["VSoS", 140],
            minlevel: 20,
            description: desc(["I gain extra features when I undertake the rite to become a lich, found on the third page."]),
            "deathtouch": {
                name: "Death's Touch",
                source: ["VSoS", 140],
                description: desc([
                    "When I use Charnel Touch and roll and 11 or higher on the attack roll, I hit the target,",
                    "regardless of its AC."
                ])
            },
            "fellflight": {
                name: "Fell Flight",
                source: ["VSoS", 140],
                description: desc(["I gain a flying speed of 60 feet."])
            },
            "grimharvest": {
                name: "Grim Harvest",
                source: ["VSoS", 140],
                description: desc([
                    "When I kill a Humanoid using Charnel Touch, I animate them as a visage under my control,",
                    "which counts as one of my thralls."
                ])
            },
            autoSelectExtrachoices: [{
                extrachoice: "deathtouch"
            }, {
                extrachoice: "fellflight"
            }, {
                extrachoice: "grimharvest"
            }],
            calcChanges: {
                atkAdd: [
                    function(fields, v){
                        if (/\bcharnel touch\b/i.test(v.WeaponTextName)){
                            fields.Description += (fields.Description ? "; " : "" ) + "hit on >10; Grim Harvest";
                            fields.Description_Tooltip += (fields.Description_Tooltip ? "\n" : "" ) + "Death's Touch: When you use your Charnel Touch against a creature you can see and roll an 11 or higher on the d20 for the attack roll, you hit the target, regardless of its AC.\nGrim Harvest: When you kill a Humanoid using Charnel Touch, you rip their soul from their body, which animates as a visage under your control, which counts as one of your thralls.";
                        }
                    }, "When I use my Charnel Touch against a creature I can see and roll an 11 or higher on the d20 for the attack roll, I hit the target, regardless of its AC. Additionally, When I kill a Humanoid using Charnel Touch, I rip their soul from their body, which animates as a visage under my control, which counts as one of my thralls."             
                ]
            },
            speed: { fly: { spd: 60 } }
        }
    }
});

// * Warden class
ClassList["warden"] = {
	regExpSearch : /warden/i,
	name : "Warden",
	source : ["VSoS", 145],
	primaryAbility : "Strength",
	improvements : [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4],
	die : 10,
	saves : ["Str", "Con"],
    skillstxt : {
		primary : "Choose two from Animal Handling, Athletics, Nature, Perception, and Survival"
	},
	armorProfs : {
		primary : [true, true, false, true],
		secondary : [true, true, false, true]
    },
	weaponProfs : {
		primary : [true, true],
		secondary : [true, true]
    },
	equipment : "Warden starting equipment:" 
    + "\n \u2022 A shield and any martial weapon;" 
    + "\n \u2022 A chain shirt, leather armor and a spear, or chain mail (if proficient);" 
    + "\n \u2022 Two light hammers or any simple melee weapon;" 
    + "\n \u2022 A dungeoneer's pack or an explorer's pack;"
    + "\n\nAlternatively, choose 5d4 \xD7 10 gp worth of starting equipment instead of both the class' and the background's starting equipment.",
	subclasses : ["Champion's Call", []],
	attacks : [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
	features : {
		"sentinel's stand" : {
			name : "Sentinel's Stand",
			source : ["VSoS", 146],
			minlevel : 1,
			description :  desc([
				"Wardens are towers that cannot easily be felled. Use the \"Choose Features\" button above to select an option."
			]),
			extraname : "Sentinel's Stand options",
			choices : ["Armor Proficiency", "Primal Toughness", "Stalwart Spirit"],
			"armor proficiency" : {
				name : "Armor Proficiency",
				source : ["VSoS", 146],
				description : desc([
					"I gain proficiency with heavy armor."
				]),
				armor : [false, false, true, false],
			},
			"primal toughness" : {
				name : "Primal Toughness",
				source : ["VSoS", 146],
				description : desc([
					"My hit point maximum increases by 1 + my Con. modifier, and it increases " + 
                    "by 1 every time I gain a level in this class."
				]),
				calcChanges : {
					hp : function (totalHD, HDobj, prefix) {
						if (classes.known.warden) {
							return [classes.known.warden.level + HDobj.conMod, "Primal Toughness (Warden)"];
						}
					}
				}
			},
			"stalwart spirit" : {
				name : "Stalwart Spirit",
				source : ["VSoS", 146],
				description : desc([
					"I gain proficiency in one saving throw of my choice."
				]),
			},
		},
		"warden's grasp" : {
			name : "Warden's Grasp",
			source : ["VSoS", 147],
			minlevel : 1,
			description : desc([
                "As a bonus action I can ensnare nearby enemies. Until the start of my next turn, I " +
                "can't move, and each Large or smaller crea I choose within 5 ft can't willingly move away " +
                "from me unless it first takes the Disengage action. ", 
                "At 14th level, the range of this ability increases to 10 feet."
            ]),
            additional : levels.map(function (n) {
                return n < 14 ? "5 ft" : "10 ft"
            }),
			action : ["bonus action", ""],
		},
		"fighting style" : {
			name : "Fighting Style",
			source : ["VSoS", 147],
			minlevel : 2,
			description : desc([
                "I adopt a style of fighting as my specialty. I can't take a Fighting Style option more than once, even " +
                "if I later get to choose again. Use the \"Choose Features\" button above to select a Fighting Style."
            ]),
			extraname: "Fighting Style",
			choices : ["Crippling", "Great Weapon Fighting", "Protection", "Titan Fighting"],
			"crippling" : {
				name : "Fighting Style: Crippling",
				source : ["VSoS", 147],
				description : desc([
					"When I hit a creature with a melee weapon attack, its speed is reduced by 10 feet, to a minimum " +
                    "of 0, until the end of its next turn, and it can't take the Dash action until the end of its turn."
				]),
                calcChanges : {
                    atkAdd : [
                        function(fields, v) {
                            if (v.isMeleeWeapon && !/crippling/i.test(fields.Description)) {
                                fields.Description += (fields.Description ? "; " : "") + "Crippling";
                            }
                        }
                    ]
                }
			},
			"great weapon fighting" : FightingStyles.two_weapon,
			"protection" : FightingStyles.protection,
			"titan fighting" : {
				name : "Fighting Style: Titan Fighting",
				source : ["VSoS", 147],
				description : desc([
					"I gain a +2 bonus to melee weapon attack rolls I make against Large or larger creatures."
				]),
            },
		},
		"warden's mark" : {
			name : "Warden's Mark",
			source : ["VSoS", 147],
			minlevel : 2,
			description : desc([
                "As a bonus action, I can mark a crea I can see within 30 ft. While within 5 feet of me, it " +
                "has disadv. on any attack roll that doesn't target me. This lasts for 1 minute, until I mark " +
                "another creature, or become incapacitated.", 
                "At 11th level, I can make an additional attack vs. the marked crea."
            ]),
			action : ["bonus action", ""]
		},
        "subclassfeature3" : {
            name : "Champion's Call",
            source : ["VSoS", 148],
            minlevel : 3,
            description : desc([
                "Choose a Champion's Call and put it in the \"Class\" field."
            ])
        },
		"warden's resolve" : {
			name : "Warden's Resolve",
			source : ["VSoS", 148],
			minlevel : 3,
			description : desc([
                "When my hp is less than half my max, I have resistance to blud/pierce/slash", 
                "At 11th level, this becomes all damage but psychic."
            ])
		},
		"font of life" : {
			name : "Font of Life",
			source : ["VSoS", 148],
			minlevel : 4,
			description : desc([
                "As an action, I end one disease or condition afflicting me. The condition " +
                "can be blinded, charmed, deafened, frightened, paralyzed, or poisoned. I can do so even if the " + 
                "condition would prevent me otherwise.", 
                "At 15th level, 1/Day when I use " +
                "this ability, my hit points are restored to half my max, if they're lower."
            ]),
			action : ["action", ""],
			recovery : "short rest",	
			usages : 1,
		},
		"sentinel's step" : {
			name : "Sentinel's Step",
			source : ["VSoS", 148],
			minlevel : 7,
			description : desc([
                "Wardens are faultless trackers, which can navigate hazardous terrain with ease. " +
                "Use the \"Choose Feature\" button to choose one of the Sentinel's Step."
            ]),
			extraname: "Sentinel's Step",
			choices : ["Earthstrength", "Thundering Charge", "Wildblood"],
			"earthstrength" : {
				name : "Sentinel's Step: Earthstrength",
				source : ["VSoS", 148],
				description : desc([
					"My carrying capacity doubles, and I have " +
                    "adv. on ability checks and saving throws against being pushed against my will or knocked prone."
				]),
                carryingCapacity : 2,
                savetxt : {
                    adv_vs : ["pushed","knocked prone"]
                }
            },
			"thundering charge" : {
				name : "Sentinel's Step: Thundering Charge",
				source : ["VSoS", 148],
				description : desc([
					"On my first round of combat, my speed increases by 30 feet and I have advantage on the first melee weapon attack I make."
				]),
            },
			"wildblood" : {
				name : "Sentinel's Step: Wildblood",
				source : ["VSoS", 148],
				description : desc([
					"My reflexes have been honed by the perils of nature. I can't be surprised while I am conscious. " +
                    "Additionally, I have a +5 bonus to my passive Wisdom (Perception) and passive Intelligence (Investigation) scores."
				]),
                addMod : { type : "skill", field : "passive perception", mod : 5, text : "I have a +5 bonus to my passive Wisdom (Perception) and passive Intelligence (Investigation) scores." }
            },
		},
		"undying" : {
			name : "Undying",
			source : ["VSoS", 148],
			minlevel : 9,
			description : desc([
				"When I am reduced to 0 hp and are not killed outright, I can choose to drop to 1 hp instead."
			]),
			recovery : "long rest",	
			usages : 1
		},
		"interrupt" : {
			name : "Interrupt",
			source : ["VSoS", 148],
			minlevel : 10,
			description : desc([
				"As a reaction when a crea hits me with an attack, I can punctuate its strikes. " +
                "The crea can now make one fewer attack than normal on this turn, if it could make additional attacks on this turn."
			]),
			action : ["reaction", ""],
		},
		"sentinel's soul" : {
			name : "Sentinel's Soul",
			source : ["VSoS", 148],
			minlevel : 18,
			description : desc([
                "Wardens are unshakable guardians that cannot be bowed. At 18th level, choose one of the following features from the \"Choose Feature\" button."
            ]),
			extraname: "Sentinel's Soul",
			choices : ["Ageless Guardian", "Eyes of the Mountain", "Impenetrable Mind"],
			"ageless guardian" : {
				name : "Sentinel's Soul: Ageless Guardian",
				source : ["VSoS", 148],
				description : desc([
					"I am immune to poison and disease, no longer need food or water, suffer none of the frailty of old age, and can't be aged magically. I can still die of old age, however. Additionally, I have advantage on Constitution saving throws."
				]),
                savetxt : {
                    immune : ["poison", "disease", "magical aging effects"],
                },
                advantages : [
                    ["Constitution", true]
                ],
            },
			"eyes of the mountain" : {
				name : "Sentinel's Soul: Eyes of the Mountain",
				source : ["VSoS", 148],
				description : desc([
					"I gain tremorsense with a range of 15 feet, and can detect the presence of hidden or invisible creatures within 30 feet. Additionally, I have advantage on Dexterity saving throws"
				]),
                advantages : [
                    ["Dexterirty", true]
                ],
            },
			"impenetrable mind" : {
				name : "Sentinel's Soul: Impenetrable Mind",
				source : ["VSoS", 148],
				description : desc([
					"My thoughts can't be read, and I can't be charmed or frightened. Additionally, I have advantage on Wisdom saving throws."
				]),
                savetxt : {
                    immune : ["charmed", "frightened"],
                },
                advantages : [
                    ["Wisdom", true]
                ],
            },
		},
	}
};

// * Bloodwrath guardian warden subclass
AddSubClass("warden", "bloodwrath guardian", {
    regExpSearch : /bloodwrath guardian/i,
    subname : "Bloodwrath Guardian",
    source : ["VSoS", 149],
    features : {
        "subclassfeature3" : {
            name : "Feral Trance",
            source : ["VSoS", 149],
            minlevel : 3,
            description : desc([
                "As a bonus action, I can enter/exit a trance for 1 min and gain the following:",
                "\u2022 Adv. on Strength checks and saving throws",
                "\u2022 My walking speed is increased by 10 ft",
                "\u2022 I have adv. on melee attack rolls using Strength vs. a crea I have marked",
                "\u2022 Attacks against me have advantage",
                "This ends if I am knocked unconscious, if I haven't attacked a hostile crea. since my last turn or taken damage since then, or if I end it as a bonus action."
            ]),
            action : ["bonus action", ""],
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature6" : {
            name : "Predator's Scent",
            source : ["VSoS", 149],
            minlevel : 6,
            description : desc([
                "A crea. can remained marked for up to 24 hrs. Additionally, I know the direction and distance to the crea. while it's on the same plane."
            ]),
            vision : [["Know Marked Crea. Direct/Distance"]]
        },
        "subclassfeature13" : {
            name : "Evasion",
			source : [["VSoS", 149], ["T", 144]],
			minlevel : 13,
			description: desc(["My Dexterity saves vs. areas of effect negate damage on success and halve it on failure."]),
            savetxt : { text : "Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg" }
        },
        "subclassfeature20" : {
            name : "Form of the Primal Beast",
            source : ["VSoS", 149],
            minlevel : 20,
            description : desc([
                "I tranform into a beast for 1 min and gain the following found on 3rd page notes.",
            ]),
            usages : 1,
            recovery : "long rest",
            toNotesPage : [{
                name : "Form of the Primal Beast: Features",
                source : [["VSoS", 149]],
                note : desc([
                    "Once per long rest when I transfrom into a primal beast, I gain the following:",
                    "\u2022 All benefits from Feral Trance",
                    "\u2022 40 temporary hp",
                    "\u2022 Every crea. I hit with a melee attack receives a bleeding wound. A crea. loses 1d8 hp at the start of each of its turns per each wound, unless it uses its action to stop the bleeding of all of its wounds." + 
                    "While a crea. is bleeding, it can't regain hp. A crea can have a number of bleeding wounds up to my prof. bonus.",
                    "Constructs, Oozes, and undead can't receive bleeding wounds."
                ])
            }]
        }
    }
});

// * gray watchman warden subclass
AddSubClass("warden", "grey watchman", {
	regExpSearch : /grey watchman/i,
	subname : "Grey Watchman",
	source : ["VSoS", 150],
    abilitySave : 1,
    abilitySaveAlt : 2,
	features : {
		"subclassfeature3" : {
			name : "Battle Tactics",
			source : ["VSoS", 150],
			minlevel : 3,
			description :  desc([
                "I gain 2 Battle Dice, which I regain on a short rest or when I roll initiative, and" +
                " gain more at higher levels. Once per turn, I can perform a maneuver (see page 3 notes)." +
                " My save for my maneuvers is 8 + Prof. Bonus + Str/Dex (my choice)"
			]),
            limfeaname : "Battle Dice",
			recovery : "short rest",
			usages : [0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4],
			additional : levels.map(function (n) {
				return n < 3 ? "" : n < 13 ? "d8" : n < 19 ? "d10" : "d10";
			}),
            extrachoices : ["Bull Rush", "Bulwark", "Cleave", "Heel-Cutter", "Reckless Assault", "Staggering Strike (Warden)"],
            choicesNotInMenu : true,
            "bull rush" : {
                name : "Bull Rush",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                description : desc([
                    "As a bonus action whenever I move at least 10 ft in a straight line and after I immediately make a " + 
                    " melee weapon attack vs. a crea, I can expend a battle die to shove the target 10 ft away" + 
                    " or knock them prone. I Add the result from the battle die to the Athletics check to shove the target."
                ]),
                action : ["bonus action", ""]
            },
            "bulwark" : {
                name : "Bulwark",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                descripton : desc([
                    "As a bonus action when I hit a crea with a melee attack, I can expend a battle die" +
                    " to reduce the damage from that crea the next time they damage me before the start of my next turn" + 
                    " The damage reduced is equal to the battle die result"
                ]),
                action : ["bonus action", ""]
            },
            "cleave" : {
                name : "Cleaave",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                description : desc([
                    "Once per turn, when I reduce a hostile crea to 0 hp or score a critical hit with a melee weapon" + 
                    " attack, I can expend a battle die to move up to 15 ft and make another melee weapon attack" + 
                    " as part of the same action. I add the result from the battle die to the attack's damage."
                ])
            },
            "heel-cutter" : {
                name : "Heel-Cutter",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                description : desc([
                    "When I make an opportunity attack vs. a crea, I can expend a battle die to prevent it from escaping." +
                    " I add the battle die to the attack roll, and on a hit, the crea must make a Strength save or" + 
                    " its speed is reduced to 0 until the end of its turn." 
                ])
            },
            "reckless assault" : {
                name : "Reckless Assault",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                description : desc([
                    "When I make an attack vs. a crea, I can expend a battle die to make it a reckless attack." + 
                    " I gain advantage on the attack roll, but all attacks vs. me have advantage until" + 
                    " the start of my next turn."
                ])
            },
            "staggering strike (warden)" : {
                name : "Stargering Strike",
                extraname : "Battle Tactics: Maneuvers",
                source : ["VSoS", 151],
                description : desc([
                    "As a bonus action when I make a weapon attack vs. a Large or smaller crea, I can expend a battle die" + 
                    " to daze the taarget. On a hit, the target must make a Con. save or be incapacitated until the" + 
                    " start of my next turn."
                ]),
                action : ["bonus action", ""]
            },
            autoSelectExtrachoices : [{
                extrachoice : "bull rush"
            }, {
                extrachoice : "bulwark"
            }, {
                extrachoice : "cleave"
            }, {
                extrachoice : "heel-cutter"
            }, {
                extrachoice : "reckless assault"
            }, {
                extrachoice : "staggering strike (warden)"
            }]
		},
        "subclassfeature3.1" : {
            name : "Hold the Line",
            source : ["VSoS", 151],
            minlevel : 3,
            description :  desc([
                "When I use Warden's Grasp, I can choose a crea, not myself, to gain a +1 bonus to AC and saving throws while they remain in range of the effect's area until the start of my next turn."
            ])
        },
        "subclassfeature6" : {
            name : "Fortification Expert",
            source : ["VSoS", 151],
            minlevel : 6,
            description :  desc([
                "I have advantage on ability checks to make fortifications, examine walls and other defenses for weak points and entry" + 
                " ways, and climb constructed walls. When I have \u00BE cover, I'm considered to have full cover."
            ])
        },
        "subclassfeature13" : {
            name : "Mettle",
            source : ["VSoS", 151],
            minlevel : 13,
            description :  desc([
                "Whenever I make a Con. save for \u00BD damage, I take no damage on a success and" + 
                " \u00BD on a fail."
            ]),
            savetxt : { text : ["Con save vs. effects: fail \u2015 half dmg, success \u2015 no dmg"] }
        },
        "subclassfeature20" : {
            name : "Unbreakable Sentinel",
            source : ["VSoS", 151],
            minlevel : 20,
            description :  desc([
                "As an action 1/LR, I can transform into a paragon of battle and gain the following:", 
                "\u2022 +2 bonus to AC" ,
                "\u2022 I regain an expended battle die whenever I hit a marked crea with an attack",
                "\u2022 I can take 1 additional reaction during each round of combat. I can't take",
                " more than 1 reaction in a single turn",
            ]),
            action : ["action",""],
            recovery : "long rest",
            usages : 1,
        },
	}
});

// * nightgaunt warden subclass
AddSubClass("warden", "nightgaunt", {
	regExpSearch : /nightgaunt/i,
	subname : "Nightgaunt",
	source : ["VSoS", 152],
    abilitySave : 3,
	features : {
		"subclassfeature3" : {
			name : "Darkvision",
			source : ["VSoS", 152],
			minlevel : 3,
            description : desc([
                "I gain dark vision with a range of 60 ft or +30 ft if I already have it.",
                "At 13th level, I can see through magical and non-magical darkness."
            ]),
            vision : [["Darkvision", "fixed 60"], ["Darkvision", "+30"]]
		},
		"subclassfeature3.1" : {
			name : "Marked for Death",
			source : ["VSoS", 152],
			minlevel : 3,
            description : desc([
                "When I deal damage to a marked crea with a melee weapon attack and its remaining hp is lower than the damage I dealt to it with that attack, it drops to 0 hp instead."
            ])
		},
		"subclassfeature6" : {
			name : "Undead Empathy",
			source : ["VSoS", 152],
			minlevel : 6,
            description : desc([
                "Whenever an undead attacks me, it must make a Wis save or it misses. If it's Int is lower than 4, it becomes friendly to my allies and I. The save DC is 8 + Prof. Bonus + Con. mod."
            ])
		},
		"subclassfeature13" : {
			name : "Evasion",
			source : ["VSoS", 152],
			minlevel : 13,
			description: desc(["My Dexterity saves vs. areas of effect negate damage on success and halve it on failure."]),
            savetxt : { text : ["Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg"] }
		},
		"subclassfeature20" : {
			name : "Gravelord",
			source : ["VSoS", 152],
			minlevel : 20,
            description : desc([
                "As a bonus action, I can divorce myself from life. For 1 min, I gain following benefits for",
                "\u2022 I am immune to poison damage and being poisoned",
                "\u2022 I can use my Undying feature up to three times without expending a use of the feature",
                "\u2022 Once per turn when I deal damage to a hostile crea with a melee weapon attack, I deal an extra 4d6 necrotic damage and gain temp hp equal to the necrotic damage dealt, which last until the start of my next turn"
            ]),
			recovery : "long rest",
			usages : 1,
		},
	},
});

// * soulblood shaman warden subclass
AddSubClass("warden", "soulblood shaman", {
	regExpSearch : /soulblood shaman/i,
	subname : "Soulblood Shaman",
	source : ["VSoS", 153],
	spellcastingList : {
        "class" : "druid",
        level : [1,5],
        school : ["Evoc", "Trans"]
    },
    abilitySave : 5,
	spellcastingKnown : {
		spells : [0, 0, 2, 3, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9],
		cantrips : [0, 0, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	},
    spellcastingFactor : 3,
	spellcastingTable : [ 
		[0, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 0
		[0, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 1
		[0, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 2
		[2, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 3
		[3, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 4
		[3, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 5
		[3, 0, 0, 0, 0, 0, 0, 0, 0], //lvl 6
		[4, 2, 0, 0, 0, 0, 0, 0, 0], //lvl 7
		[4, 2, 0, 0, 0, 0, 0, 0, 0], //lvl 8
		[4, 2, 0, 0, 0, 0, 0, 0, 0], //lvl 9
		[4, 3, 0, 0, 0, 0, 0, 0, 0], //lvl10
		[4, 3, 0, 0, 0, 0, 0, 0, 0], //lvl11
		[4, 3, 0, 0, 0, 0, 0, 0, 0], //lvl12
		[4, 3, 2, 0, 0, 0, 0, 0, 0], //lvl13
		[4, 3, 2, 0, 0, 0, 0, 0, 0], //lvl14
		[4, 3, 2, 0, 0, 0, 0, 0, 0], //lvl15
		[4, 3, 3, 0, 0, 0, 0, 0, 0], //lvl16
		[4, 3, 3, 0, 0, 0, 0, 0, 0], //lvl17
		[4, 3, 3, 0, 0, 0, 0, 0, 0], //lvl18
		[4, 3, 3, 1, 0, 0, 0, 0, 0], //lvl19
		[4, 3, 3, 1, 0, 0, 0, 0, 0] //lvl20
	],
	features : {
		"subclassfeature3" : {
			name : "Spellcasting",
            source : ["VSoS", 153],
			minlevel : 3,
			description :  desc([
                "I can cast known druid cantrips/spells, using Wisdom as my spellcasting ability",
                "These spells must be Transmutation or Evocation, unless it is the spell gained at",
                "3rd, 8th, 14th, and 20th level"
            ]),
            spellcastingBonus : [{
                name : "any school",
                "class" : ["druid"],
                level : [1,4],
                times : levels.map(function(n) {
                    return n < 3 ? 0 : n < 8 ? 1 : n < 14 ? 2 : n < 20 ? 3 : 4
                })
            }]
		},
		"subclassfeature3.1" : {
			name : "Soulblood",
            source : ["VSoS", 153],
			minlevel : 3,
			description :  desc(["When a crea within 5 ft of me deals damage to me, I can use my reaction to mark the crea."]),
			action : ["reaction", ""],
		},
		"subclassfeature6" : {
			name : "Whispers of Beyond",
            source : ["VSoS", 153],
			minlevel : 6,
			description :  desc([
                "I can spend one minute to think when I make an Intelligence or Wisdom check, to gain adv. on the roll." + 
                " However, the GM can decline to give I adv. on this check if the spirits would not possess appropriate guidance of knowledge."
            ]),
		},
		"subclassfeature13" : {
			name : "Spell Resistance",
            source : ["VSoS", 153],
			minlevel : 13,
            description : desc(["I have advantage on saves against spells and other magical effects."]),
            savetxt : {
                adv_vs : ["spells", "magic"]
            }
		},
		"subclassfeature20" : {
			name : "Ethereal Watcher",
            source : ["VSoS", 154],
			minlevel : 20,
			description :  desc([
                "As an action 1/LR, I can become an ethereal watcher. For the next minute, I gain the following benefits:" ,
                "\u2022 As a bonus action on my turn, I can become ethereal" ,
                "\u2022 I can return from being ethereal as a bonus action when I cast a spell, or when I use my Warden's Mark or Grasp feature on my turn",
                "\u2022 When I return from being ethereal, each crea I choose within 10 feet takes 4d10 force damage",
                "\u2022 I can cast 1st and 2nd-level druid spells I know without expending spell slots"
            ]),
            action : ["action", ""],
			recovery : "long rest",
			usages : 1,
		},
	},
});

// * stoneheart defender warden subclass
AddSubClass("warden", "stoneheart defender", {
	regExpSearch : /stoneheart defender/i,
	subname : "Stoneheart Defender",
    source : ["VSoS", 154],
    abilitySave : 1,
	features : {
		"subclassfeature3" : {
			name : "Roots of Rock",
            source : ["VSoS", 154],
			minlevel : 3,
            description : desc([
                "Whenever I use my Warden's Grasp ability, I gain a +2 bonus to AC until the start of my next turn." + 
                " Additionally, until I move, I can't be shoved or pushed from where I am standing." + 
                " I have adv on Str saves vs. knocked prone, can't slip or fall from ledges, and immune to fly, levitate, and telekinesis."
            ])
		},
		"subclassfeature6" : {
			name : "Earthshatter",
            source : ["VSoS", 154],
			minlevel : 6,
			description :  desc([
                "I can use Warden's Grasp as an action instead of a bonus action." +
                " When I do so, each crea affected must make a Str saving throw or be knocked prone." + 
                " I can this a number of times equal to my Str mod per long rest."
            ]),
            usages : "Str mod per ",
            usagescalc : "event.value = What('Str mod');",
			action : ["action", ""],
		},
		"subclassfeature13" : {
			name : "Mettle",
            source : ["VSoS", 154],
			minlevel : 13,
            description :  desc([
                "Whenever I make a Con. save for \u00BD damage, I take no damage on a success and" + 
                " \u00BD on a fail."
            ]),
            savetxt : { text : ["Con save vs. effects: fail \u2015 half dmg, success \u2015 no dmg"] }
        },
		"subclassfeature20" : {
			name : "Immortal Mountain",
            source : ["VSoS", 154],
			minlevel : 20,
			description :  desc([
                "As an action 1/LR, I can summon the power of true earth. For 1 min, I gain the following benefits:",
                "\u2022 Bludgeoning, piercing, and slashing damage I take is reduced by 5." ,
                "\u2022 I gain the effects of my Roots of Rock ability for the entire duration.",
                "\u2022 As I move, I can leave behind a 5 ft wide trail of difficult terrain behind me.", 
            ]),
			recovery : "long rest",
			usages : 1,
		},
	},
});

// * storm sentinel warden subclass
AddSubClass("warden", "storm sentinel", {
	regExpSearch : /storm sentinel/i,
	subname : "Storm Sentinel",
    source : ["VSoS", 154],
	features : {
		"subclassfeature3" : {
			name : "Flash from Above",
            source : ["VSoS", 155],
			minlevel : 3,
			description :  desc([
                "Whenever I am standing under the open sky, I can use my action to conjure a harmless, but impressive, bolt of lightning or peal of thunder. I can do so even without clouds."
            ]),
		},
		"subclassfeature3.1" : {
			name : "Thunderblast",
			source : ["VSoS", 155],
			minlevel : 3,
			description :  desc([
                "Whenever I hit a marked crea with a melee weapon attack, each crea I choose within 5 ft of the target takes 1d8 lightning damage."
            ]),
			additional : "1d8 lightning",
		},
		"subclassfeature6" : {
			name : "Static Blast",
			source : ["VSoS", 155],
			minlevel : 6,
			description :  desc([
                "When I use Warden's Grasp as a bonus action, each creature affected can't take reactions until the start of my next turn."
            ]),
		},
		"subclassfeature13" : {
            name: "Evasion",
            source: ["VSoS", 155],
            minlevel: 11,
            description: desc("My Dexterity saves vs. areas of effect negate damage on success and halve it on failure"),
            savetxt: { text: ["Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg"] }
		},
		"subclassfeature20" : {
			name : "Stormlord",
			source : ["VSoS", 155],
			minlevel : 20,
			description :  desc([
                "I gain a fly speed equal to my movement speed", 
                "1/LR I can also use my action to summon a bolt of lightning to strike me. For 1 minute, I gain the following benefits" ,
                "\u2022 My flight speed is doubled",
                "\u2022 I can cast call lightning as a bonus action without using a spell slot, and can call a bolt of lightning on subsequent turns as a bonus action"]),
            action : ["action", ""],
            recovery : "long rest",
			usages : 1,
            spellcastingBonus : [{
                name : "Stormlord",
                spells : ["call lightning"],
                selection : ["call lightning"],
                times : 1
            }],
            speed : {
				fly : { spd : "walk", enc : "walk" }
			},
            spellChanges : {
                "call lightning": {
                    description : "60-ft rad 10-ft high cloud; 1 ba all in 5-ft rad under cloud 3d10+1d10/SL Lightning dmg; save half",
                    descriptionShorter : "60-ft rad 10-ft high cloud; 1 ba all in 5-ft rad under it 3d10+1d10/SL Lightn. dmg; save half",
                    descriptionFull : "A storm cloud appears in the shape of a cylinder that is 10 feet tall with a 60-foot radius, centered on a point you can see within range directly above you. The spell fails if you can't see a point in the air where the storm cloud could appear (for example, if you are in a room that can't accommodate the cloud)." + "\n   " + "When you cast the spell, choose a point you can see under the cloud. A bolt of lightning flashes down from the cloud to that point. Each creature within 5 feet of that point must make a Dexterity saving throw. A creature takes 3d10 lightning damage on a failed save, or half as much damage on a successful one. On each of your turns until the spell ends, you can use your bonus action to call down lightning in this way again, targeting the same point or a different one." + "\n   " + "If you are outdoors in stormy conditions when you cast this spell, the spell gives you control over the existing storm instead of creating a new one. Under such conditions, the spell's damage increases by 1d10." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher level, the damage increases by 1d10 for each slot level above 3rd.",
                    changes : "I can keep casting as a bonus action instead of an action."
                }
            }
		},
	},
});

// * verdant protector warden subclass
AddSubClass("warden", "verdant protector", {
	regExpSearch : /verdant protector/i,
	subname : "Verdant Protector",
	source : ["VSoS", 155],
	features : {
		"subclassfeature3" : {
			name : "Green Mark",
			source : ["VSoS", 155],
			minlevel : 3,
			description :  desc([
                "While a marked crea is within 30 ft of me, the ground it walks on is difficult terrain."
            ]),
		},
		"subclassfeature6" : {
			name : "Verdant Skin",
			source : ["VSoS", 155],
			minlevel : 6,
			description :  desc([
                "I gain proficiency in Stealth. Additionally, I can use my action to gain adv on Stealth checks I make to hide among vegetation."
            ]),
			skills : ["Stealth"],
			action : ["action", ""],
		},
		"subclassfeature113" : {
			name : "Mettle",
            source : ["VSoS", 154],
			minlevel : 13,
            description :  desc([
                "Whenever I make a Con. save for \u00BD damage, I take no damage on a success and" + 
                " \u00BD on a fail."
            ]),
            savetxt : { text : ["Con save vs. effects: fail \u2015 half dmg, success \u2015 no dmg"] }
        },
		"subclassfeature20" : {
			name : "Form of the Oak Sentinel",
			source : ["VSoS", 155],
			minlevel : 20,
			description :  desc([
                "As an action 1/LR, I can transform into an oak sentinel. For 1 min, I gain the following:",
                "\u2022 My AC becomes 20, if it was lower.", 
                "\u2022 My attacks have Reach, if they did not have it before.",
                "\u2022 I can use Warden's Grasp as an action, instead of a bonus action. When I do so, I can make an attack against each crea affected, with a separate attack roll for each target."]),
			recovery : "long rest",
			usages : 1,
		},
	},
});

// * witch class

[
    // Cantrips
    "acid splash", "candy blast", "card trick", "cheat", "chill touch", "cryptogram", "dancing lights", "eldritch orb", "eye of anubis", "hocus pocus", "mage hand", "message", "minor illusion", "minor lifesteal", "prestidigitation", "produce flame", "resistance", "spare the dying", "true strike",
    // 1st level spells
    "accursed act", "action", "animal friendship", "arcane anomaly", "bane", "blood print", "charm person", "clue", "comprehend languages", "curse of chains", "detect magic", "disguise self", "expeditious retreat", "faerie fire", "flawed reconstruction", "hideous laughter", "hollowing curse", "prehensile hair", "protection from evil and good", "psychedelics", "rumor", "silent image", "sleep", "speak with animals", "thunderwave", "unseen servant", "whispering wind",
    // 2nd level spells
    "aberrate", "aerial alacrity", "animal messenger", "blindness/deafness", "calm emotions", "curse ward", "darkness", "darkvision", "delay", "detect thoughts", "enthrall", "hold person", "intrusive thought", "invisibility", "jam weapon", "knock", "levitate", "locate object", "misty step", "nondescript", "petal storm", "protect threshold", "ray of enfeeblement", "see invisibility", "shatter", "spider climb", "suggestion", "swift flight",
    // 3rd level spells
    "benign dismemberment", "bestow curse", "clairvoyance", "counterspell", "curse of blades", "dispel magic", "fear", "fly", "glitterdust", "hypnotic pattern", "magic circle", "major image", "nondetection", "phantasmal beauty", "remove curse", "ruby-eye curse", "rusting grasp", "séance", "sending", "slow", "speak with dead", "speak with plants", "stinking cloud", "tongues",
    // 4th level spells
    "arcane eye", "banishment", "black tentacles", "compulsion", "confusion", "dimension door", "dire charm", "dominate beast", "false vision", "gahoul's scapegoat", "greater invisibility", "hallucinatory terrain", "invisibility purge", "locate creature", "mandy's enchanted carriage", "mandy's feral follower", "mandy's marvelous dress", "phantasmal killer", "polymorph",
    // 5th level spells
    "contagion", "dispel evil and good", "dominate person", "dream", "frolicking fountain", "geas", "hold monster", "insect plague", "mislead", "modify memory", "pharaoh's curse", "planar binding", "scrying", "seeming", "telekinesis",
    // 6th level spells
    "corruption curse", "demand", "elemental curse", "eyebite", "flesh to stone", "frenzy", "guards and wards", "mass suggestion", "programmed illusion", "true seeing",
    // 7th level spells
    "abduct", "curse of binding", "etherealness", "mirage arcane", "plane shift", "project image", "sequester", "symbol", "teleport",
    // 8th level spells
    "antipathy/sympathy", "dominate monster", "feeblemind", "glibness", "mind blank", "power word stun",
    // 9th level spells
    "astral projection", "foresight", "identity curse", "imprisonment", "true polymorph", "weird"
].forEach( function (s) {
    if(SpellsList[s] && SpellsList[s].classes && SpellsList[s].classes.indexOf("witch") === -1) SpellsList[s].classes.push("witch");
});

ClassList["sorcerer"].regExpSearch = /sorcerer/i
ClassList["witch"] = { 
	regExpSearch : /witch/i, 
	name : "Witch", 
	source : ["VSoS", 174], 
	primaryAbility : "Charisma",
	abilitySave : 6,
    prereqs : "Charisma 13",
    die : 8,
    improvements : [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
    saves : ["Cha", "Wis"],
    skillstxt : {
        primary : "Choose two from Arcana, Deception, Insight, Intimidation, Persuasion, Nature, Religion, and Survival."
    },
    toolProfs : {
        primary : [["Alchemist supplies"], ["Poisoner's kit"]],
    },
    armorProfs : {
        primary : [true, false, false, false],
        secondary : [true, false, false, false],
    },
    weaponProfs : {
        primary : [true, false, ["blowgun", "shortsword", "whip"]],
        secondary : [true, false],
    },
    equipment : "Witch starting equipment:" +
        "\n \u2022 A whip and a blowgun -or- a light crossbow and 20 bolts -or- any simple weapon;" + 
        "\n \u2022 A component pouch -or- an arcane focus;" + 
        "\n \u2022 A scholar's pack -or- a dungeoneer's pack;" +
		"\n \u2022 Leather armor, any simple weapon, and a dagger.",
    subclasses : ["Witch's Craft", []],
	attacks : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	spellcastingFactor : 1,
    spellcastingKnown : {
		cantrips : [4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
		spells : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15]
	},
	features : { 
		"spellcasting" : {
			name : "Spellcasting",
			source : ["VSoS", 175],
			minlevel : 1,
			description : desc([
                "I can cast witch cantrips/spells that I know, using Charisma as my spellcasting ability",
                "I can use an arcane focus as a spellcasting focus for my witch spells",
                "I can cast my known witch spells as rituals if they have the ritual tag"
            ]),
			additional : levels.map(function (n, idx) {
				var cantr = [4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6][idx];
				var splls = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15][idx];
				return cantr + " cantrips \u0026 " + splls + " spells known";
			}),
		},
		"witch's curse" : {
			name : "Witch's Curse",
			source : ["VSoS", 175],
			minlevel : 1,
			description : desc([
                "Chose a Witch's Curse using the \"Choose Feature\" button above"
            ]),
			choices : ["Burned", "Drowned", "Feral", "Hideous", "Hollow", "Infested", "Loveless", "Possessed", "Starving", "Visions", "Whispers"],
			"burned" : {
				name : "Burned",
                source : ["VSoS", 175],
				description : desc(["I have resistance to fire damage, and I know produce flame as a witch cantrip"]),
				dmgres : ["Fire"],
				spellcastingBonus : [{
					name : "Burned (Produce Flame)",
					spells : ["produce flame"],
					selection : ["produce flame"],
                    times : 1
				}]
			},
			"drowned" : {
				name : "Drowned",
                source : ["VSoS", 176],
				description : desc(["I can breathe air and water and I have a swim speed equal to my walking speed"]),
				speed : { swim : { spd : "walk", enc : "walk"} }
			},
			"feral" : {
				name : "Feral",
				description : desc(["I gain proficiency in Survival and an AC of 13 + Dex without armor or a shield"]),
				skills : ["Survival"],
				armorOptions : [{
                    regExpSearch : /feral/i,
                    name : "Feral",
                    source : ["VSoS", 176],
                    ac : 13,
                    selectNow : true
                }]
			},
			"hideous" : {
				name : "Hideous",
                source : ["VSoS", 176],
				description : desc([
                    "I'm proficient in Intimidation. When I roll initiative, I can scare a humanoid I can see",
                    "They must make a Wisdom save or be frightened until the end of my next turn"
                ]),
				skills : ["Intimidation"]
			},
			"hollow" : {
				name : "Hollow",
                source : ["VSoS", 176],
				description : levels.map(function (n) {
					return desc([
						"When I or my familiar reduce an enemy to 0 HP, I gain " + n + " + Cha mod (min 1) temp HP"
					]);
				}),
			},
			"infested" : {
				name : "Infested",
                source : ["VSoS", 176],
				description : levels.map(function (n) {
					if (n < 7) {
						var descr = ["I am immune to disease, my familiar can be a swarm of rats"];
					} else {
						var descr = ["I am immune to disease, my familiar can be a swarm of rats or insects"];
					}
					return desc(descr);
				}),
				savetxt : { immune : ["disease"] }	
			},
			"loveless" : {
				name : "Loveless",
                source : ["VSoS", 176],
				description : desc(["I am immune to being charmed"]),
				savetxt : { immune : ["charmed"] }	
			},
			"possessed" : {
				name : "Possessed",
                source : ["VSoS", 176],
				description : desc(["I learn additional witch spells at levels 1, 4, 8, and 12"]),
				additional : levels.map(function (n) { 
					return n < 2 ? "1 additional spell" : (n < 5 ? "2" : n < 9 ? "3" : "4") + " additional spells";
				}),
				spellcastingBonus : [{
					name : "Possessed",
					times : [1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                    "class" : "witch",
					level : [1, 9]
				}]
			},
			"starving" : {
				name : "Starving",
                source : ["VSoS", 176],
				description : desc(["I don't need to eat or drink and I am immune to being poisoned"]),
				savetxt : { immune : ["poisoned"] }				
			},
			"visions" : {
				name : "Visions",
                source : ["VSoS", 176],
				description : desc(["I can add my Charisma modifier to initiative rolls"]),
				addMod : { type : "skill", field : "Init", mod : "max(Cha|0)", text : "I can add my Charisma modifier to initiative rolls." }
			},
            "whispers" : {
                name : "Whispers",
                source : ["VSoS", 176],
                description : desc([
                    "I can speak telepathically to a creature within 30 ft that I can see if",
                    "they can at least understand one language."
                ]),
                languageProfs : ["Telepathy (30 ft)"],
            }
		},
		"hexes" : {
			name : "Hexes",
			source : ["VSoS", 176],
			minlevel : 1,
			description : desc([
                "Use the \"Choose Feature\" button above to add Hexes to the third page",
                "Hexes uses my spell attack and saves unless stated otherwise.",
                "All Hexes require verbal or somatic components, my choice when I cast",
                "Hexes take concentration, but I can concentrate on both a hex and a spell",
                "Whenever I gain a witch level, I can replace a hex I know with another"
            ]),
			additional : levels.map(function(n) { 
				return (n < 2 ? 2 : n < 5 ? 3 : n < 9 ? 4 : n < 13 ? 5 : n < 17 ? 6 : 7) + " hexes known";
			}),
			extraname : "Hexes",
			extrachoices : ["Abate", "Apathy", "Beckon Familiar (prereq: level 2 witch)", "Bleeding", "Charm", "Dire Familiar (prereq: level 2 witch)", "Disorient", "Doomward", "Duplicity", "Evil Eye", "Fortune", "Go Unseen", "Hobble", "Knowing", "Mire", "Misfortune", "Obfuscate", "Peacebond", "Pox", "Ruin", "Scurry", "Shriek", "Slumber", "Slur", "Tremors", "Ward"],
			extraTimes : levels.map(function(n) {
				return n < 2 ? 2 : n < 5 ? 3 : n < 9 ? 4 : n < 13 ? 5 : n < 17 ? 6 : 7;
			}),
			action : ["action", "Hex"],
			"abate" : {
				name : "Abate",
                source : ["VSoS", 178],
				description : desc([
                    "I can force a crea I can see within 60 ft to make a Charisma save.",
                    "On a failed save, they can't take reactions until the end of my next turn."
                ]),
			},
			"apathy" : {
				name : "Apathy",
                source : ["VSoS", 178],
				description : desc([
                    "I can force a crea I can see within 60 ft to make a Charisma save.",
                    "On a failed save, they become indifferent towards one of their enemies of my choice."
                ]),
			},
			"beckon familiar (prereq: level 2 witch)" : {
				name : "Beckon Familiar",
				description : desc([
                    "I can cast the find familiar spell without using a spell slot or components",
                    "Once I cast it in this way, I can't again for 1 minute"
                ]),
				source : ["VSoS", 178],
                calcChanges : {
                    spellAdd : [
                        function(spellKey, spellObj, spName) { 
                            if( spName == "witch" && spellKey == "find familiar" ) {
                                spellObj.time = "1 a"
                            }
                        }
                    ]
                },
				prereqeval : function(v) { return classes.known.witch.level >= 2; }
			},
			"bleeding" : {
				name : "Bleeding",
				description : desc([
                    "I can force one creature within 60 ft to make a Constituion save",
                    "On a failed save, they take an extra 1d4 dmg when damaged until the end of my next turn"
                ]),
				source : ["VSoS", 178],
			},
			"charm" : {
				name : "Charm",
				description : desc([
                    "I can force one creature within 60 ft to make a Wisdom save",
                    "On a failed save, they are charmed by me until the end of my next turn",
                    "When the hex ends, they know they were charmed by me",
                ]),
				source : ["VSoS", 178],
			},
			"dire familiar (prereq: level 2 witch)" : {
				name : "Dire Familiar",
				description : desc([
                    "I can empower my familiar for 1 minute; it adds my Cha mod to its dmg rolls",
                    "And its current and max HP increases by twice my witch level",
                    "I can't cast this hex again until my familiar is dismissed or the duration expires",
                ]),
				source : ["VSoS", 178],
				prereqeval : function(v) { return classes.known.witch.level >= 2; }
			},
			"disorient" : {
				name : "Disorient",
				description : desc([
                    "I can force one creature within 60 ft to make a Constitution save",
                    "On a failed save, until the end of my next turn they must subtract",
                    "a d6 from their next attack roll",
                ]),
				source : ["VSoS", 178],
			},
			"doomward" : {
				name : "Doomward",
				description : desc([
                    "I can choose a friendly creature within 60 ft, not including myself",
                    "The next time they would drop to 0 HP and not die they drop to 1 HP instead",
                    "This hex then ends, and can't be used on the same target until a long or short rest",
                ]),
                usages : 1,
                additional : "Cannot target 2\xD7",
                recovery : "short rest",
				source : ["VSoS", 178],
			},
			"duplicity" : {
				name : "Duplicity",
				description : desc([
                    "I create a duplicate self to confuse enemies",
                    "When I am attacked, I roll any die, on an odd number the attack misses",
                    "This lasts until the end of my next turn, or until I attack or cast a spell",
                ]),
				source : ["VSoS", 179],
			},
			"evil eye" : {
				name : "Evil Eye",
				description : desc([
                    "I can force one creature within 60 ft to make a Wisdom save",
                    "On a failed save, they are frightened of me until the end of my next turn",
                ]),
				source : ["VSoS", 179],
			},
			"fortune" : {
				name : "Fortune",
				description : desc([
                    "I can choose another friendly creature within 60 ft, not myself",
                    "They have advantage of saving throws until the end of my next turn",
                ]),
				source : ["VSoS", 179],
			},
			"go unseen" : {
				name : "Go Unseen",
				description : desc([
                    "My familiar and I become invisible",
                    "This lasts until the end of my next turn, or until I or my familiar attacks or casts a spell",
                    "I can't cast this hex again for 1 minute",
                ]),
                usages : 1,
                recovery : "Minute",
				source : ["VSoS", 179],
			},
			"hobble" : {
				name : "Hobble",
				description : desc([
                    "I can choose one creature I can see within 60 ft to make a Strength save.",
                    "On a failed save, the target's speed is reduced to 10 ft until the end of",
                    "my next turn. If the target is flying, it falls, unless it can hover or",
                    "is being held up by magic."
                ]),
				source : ["VSoS", 179],
			},
			"knowing" : {
				name : "Knowing",
				description : desc([
                    "I gain adv. on Insight until my next turn. I learn one of the following from each crea in 30 ft", 
                    "\u2022 If they can speak",
                    "\u2022 If they are at half or less max HP",
                    "\u2022 Their lowest ability score",
                    "I can only learn one of these things per creature, even if I cast the hex more than once",
                ]),
				source : ["VSoS", 179],
			},
			"mire" : {
				name : "Mire",
                source : ["VSoS", 179],
				description : desc([
                    "I create a 30 ft radius of difficult terrain until the end of my next turn",
                    "I can move freely in this area"
                ])
			},
			"misfortune" : {
				name : "Misfortune",
				description : desc([
                    "I choose one creature within 60 ft",
                    "Until the end of my next turn, whenever the creature rolls a 20 it instead becomes a 1",
                ]),
				source : ["VSoS", 179],
			},
			"obfuscate" : {
				name : "Obfuscate",
				description : desc([
                    "I create a 20 ft radius sphere of fog centered around myself",
                    "The fog spreads around corners and heavily obscures the area",
                    "This lasts until the end of my next turn or until a wind of at least 10 mph disperses it",
                ]),
				source : ["VSoS", 179],
			},
			"peacebond" : {
				name : "Peacebond",
				description : desc([
                    "The weapons and ammo of creatures within 30 ft are locked in their retainers",
                    "They can use an action to free the weapon with a Strength check vs my spell save DC",
                    "This lasts until the end of my next turn",
                ]),
				source : ["VSoS", 179],
			},
			"pox" : {
				name : "Pox",
				description : desc([
                    "I can force one creature within 5 ft to make a Constitution save",
                    "On a failed save, they are poisoned until the end of my next turn",
                ]),
				source : ["VSoS", 179],
			},
			"ruin" : {
				name : "Ruin",
				description : desc([
                    "I can force one creature within 60 ft to make a Constitution save",
                    "On a failed save, their AC is lowered by 3, to a minimum of 10, until the end of my next turn",
                ]),
				source : ["VSoS", 179],
			},
			"scurry" : {
				name : "Scurry",
				description : desc([
                    "A nonmagical object less than 10 lbs within 30 ft sprouts legs and runs away",
                    "This object cannot be held in hand or worn by a creature, and gains a minimum AC of 10",
                    "Upon casting this hex it moves 20 ft in a direction of my choice",
                    "It remains animated until the end of my next turn or until it is picked up",
                ]),
				source : ["VSoS", 180],
			},
			"shriek" : {
				name : "Shriek",
				description : desc([
                    "As a bonus action, each large or smaller creature within 5 ft is pushed 5 ft away from you"
                ]),
				source : ["VSoS", 180],
				action : ["bonus action", " (Hex)"]
			},
			"slumber" : {
				name : "Slumber",
				description : desc([
                    "I can force one creature within 60 ft to make a Wisdom save",
                    "On a failed save, they fall unconscious until they take damage or the end of my next turn",
                    "Targets that are undead, can't be charmed, or have current HP > 5 \xD7 witch level are immune",
                ]),
				source : ["VSoS", 180],
			},
            "slur" : {
                name : "Slur",
                descripton : desc([
                    "I can choose a creature within 60 ft to make a Charisma save",
                    "On a failed saved, they can't speak coherently until the end of my next turn.",
                    "If they attempt to cast a spell with verbal components, roll a d20. On an odd roll, it fails."
                ])
            },
			"tremors" : {
				name : "Tremors",
				description : desc([
                    "Each creature within 10 ft must make a Dexterity save or be knocked prone",
                ]),
				source : ["VSoS", 180],
			},
			"ward" : {
				name : "Ward",
				description : desc([
                    "I can choose another friendly creature within 60 ft",
                    "Until the end of my next turn, each time it takes damage it reduces that damage by 3",
                ]),
				source : ["VSoS", 180],
			}
		},
		"cackle" : {
			name : "Cackle",
			source : ["VSoS", 176],
			minlevel : 2,
			description : desc([
                "As a bonus action, my hex extends by 1 round for each hexed creature within 60 feet",
            ]),
			action : [["bonus action", ""]]
		},
		"familiar" : {
			name : "Familiar",
			source : ["VSoS", 177],
			minlevel : 2,
			description : desc([
                "I learn Find Familiar, it can also be a death snail, flying book, homunculus, mock, moon jelly,",
                "pet rock, pseudodragon, rag doll, sprite, tin soldier, winter wolf pup, or yarn golem",
                "Each turn I can use my action or bonus action to make my familiar to attack with its reaction", 
            ]),
			additional : "See Companion page",
			spellcastingBonus : [{
				name : "Familiar",
				spells : ["find familiar"],
				selection : ["find familiar"],
                times : 1
			}],
			spellChanges : {
				"find familiar" : {
					components : "V,S",
					compMaterial : "",
					description : "Gain the services of a familiar; can see through its eyes; it can deliver spells; see B",
					descriptionFull :  "You gain the service of a familiar, a spirit that takes an animal form you choose - bat, cat, crab, frog (toad), hawk, lizard, octopus, owl, poisonous snake, fish (quipper), rat, raven, sea horse, spider, or weasel. Appearing in an unoccupied space within range, the familiar has the statistics of the chosen form, though it is a celestial, fey or fiend (your choice) instead of a beast." + "\n   " + "Your familiar acts independently of you, but it always obeys your commands. In combat, it rolls its own initiative and acts on its own turn. A familiar can't attack on its turn, but it can take other actions as normal." + "\n   " + "When the familiar drops to 0 hit points, it disappears, leaving behind no physical form. It reappears after you cast this spell again. While your familiar is within 100 feet of you, you can communicate with it telepathically. Additionally, as an action, you can see through your familiar's eyes and hear what it hears until the start of your next turn, gaining the benefits of any special senses that the familiar has. During this time, you are deaf and blind with regard to your own senses." + "\n   " + "Once per turn, as an action or a bonus action I can command the familiar to attack with its reaction." +"\n   " + "As an action, you can temporarily dismiss your familiar. It disappears into a pocket dimension where it awaits you summons. Alternatively, you can dismiss it forever. As an action while it is temporarily dismissed, you can cause it to reappear in any unoccupied space within 30 feet of you." + "\n   " + "You can't have more than one familiar at a time. If you cast this spell while you already have a familiar, you instead cause it to adopt a new form. Choose one of the forms from the above list. Your familiar transforms into the chosen creature." + "\n   " + "Finally, when you cast a spell, your familiar can deliver the spell as if it had cast the spell. Your familiar must be within 100 feet of you, and it must use its reaction to deliver the spell when you cast it. If the spell requires an attack roll, you use your attack modifier for the roll.",
					changes : "I can cast Find Familiar without requiring material components, the familiar can deliver any spell I cast."
				}
			}
		},
		"subclassfeature3" : {
			name : "Witch's Craft",
			source : ["VSoS", 177],
			minlevel : 3,
			description : desc([
                "Choose your Craft, a learned variety of magic, and put it in the \"Class\" field"
            ])
		},
		"insidious spell" : {
			name : "Insidious Spell",
			source : ["VSoS", 177],
			minlevel : 5,
			description : desc([
                "If an enemy is the sole target of my hex, it has disadv. on the first save of my witch spells"
            ])
		},
		"improved familiar" : {
			name : "Improved Familiar",
			source : ["VSoS", 177],
			minlevel : 7,
			description : desc([
                "My familiar's attacks count as magical. I add the following to the forms I can summon:",
                "Brass Dragon Wyrmling (without breath weapons), Fright, Grep, Imp, or Quasit",
            ])
		},
		"dying curse" : {
			name : "Dying Curse",
			source : ["VSoS", 177],
			minlevel : 9,
			description : desc([
                "When I am reduced to 0 HP by a creature, but don't die I can curse that creature for 24 hrs",
                "While cursed they have disadv. on attacks, ability checks, and saves.",
                "This curse ends when I regain conciousness, or with the remove curse spell",
            ]),
			usages : 1,
			recovery : "long rest",
		},
		"grand hex" : {
			name : "Grand Hex",
			source : ["VSoS", 177],
			minlevel : 11,
			description : desc([
                "Use the \"Choose Feature\" button above to add Grand Hexes to the Notes page",
            ]),
			toNotesPage : [{
				name : "Grand Hex",
				source : ["VSoS", 177],
				popupname : "Grand Hex",
				note : [
					"My Grand Hexes are described as below"
				]
			}],
			additional : levels.map(function (n) {
				return (n < 11 ? "" : (n < 13 ? 1 : n < 15 ? 2 : n < 18 ? 3 : 4) + " grand hexes known");
			}),
			extraname : "Grand Hex",
			extrachoices : ["Cauldron", "Coven", "Dual Hex", "Forceful Personality", "Hybrid", "Poison Apple", "Possession", "War Hex", "Witch's Broom", "Witch's Hut"],
			extraTimes : levels.map(function (n) {
				return (n < 11 ? 0 : n < 13 ? 1 : n < 15 ? 2 : n < 18 ? 3 : 4);
			}),
			"cauldron" : {
				toNotesPage : [{
					name : "Cauldron",
					source : ["VSoS", 180],
					popupname : "Cauldron",
					note : [
						"I gain a pool of alchemy points equal to half my witch level, rounded down",
						"I regain these points after a long rest",
						"I can spend 10 minutes and use any number of alchemy points to brew potions",
						"These potions use your spell save DC, and last for 24 hours",
						"I can make the following potions:",
						"\u2022 Potion of Animal Friendship\t\u2015 1 Point",
						"\u2022 Potion of Growth\t\t\u2015 1 Point",
						"\u2022 Potion of Healing\t\t\u2015 1 Point",
						"\u2022 Potion of Water Breathing\t\u2015 1 Point",
						"\u2022 Oil of Slipperiness\t\t\u2015 2 Points",
						"\u2022 Philter of Love\t\t\u2015 2 Points",
						"\u2022 Potion of Greater Healing\t\u2015 2 Points",
						"\u2022 Potion of Heroism\t\t\u2015 2 Points",
						"\u2022 Potion of Resistance\t\u2015 2 Points",
						"\u2022 Potion of Clairvoyance\t\u2015 3 Points",
						"\u2022 Potion of Diminution\t\u2015 3 Points",
						"\u2022 Potion of Gaseous Form\t\u2015 3 Points"
					],
					amendTo : "Grand Hex"
				}],
				limfeaname : "Alchemy Points",
				usages : levels.map(function (n) { return n < 11 ? "" : Math.floor(n/2); }),
				recovery : "long rest"
			},
			"coven" : {
				toNotesPage : [{
					name : "Coven",
					source : ["VSoS", 180],
					popupname : "Coven",
					note : [
						"I can induct up to two willing spellcasters into my coven with an 8 hour ritual",
						"This ritual can be done during a long rest",
						"While at least two of your coven are within 30 ft they can cast Coven Spells",
						"The coven has a shared pool of spell slots, one of each level from 1st to 5th",
						"These slots can be used to cast any spell known to the members",
						"These slots are regained after all members finish a long rest",
						"My coven can cast the following spells, in addition to their own:",
						"\u2022 1st\tBane, Hideous Laughter",
						"\u2022 2nd\tInvisibility, Ray of Enfeeblement",
						"\u2022 3rd\tBestow Curse, Counterspell",
						"\u2022 4th\tBanishment, Polymorph",
						"\u2022 5th\tContagion, Scrying"
					],
					amendTo : "Grand Hex"
				}],
				spellcastingBonus : {
					name : "Coven Spells",
					spells : ["bane", "tasha's hideous laughter", "invisibility", "ray of enfeeblement", "bestow curse", "counterspell", "banishment", "polymorph", "contagion", "scrying"],
					selection : ["bane", "tasha's hideous laughter", "invisibility", "ray of enfeeblement", "bestow curse", "counterspell", "banishment", "polymorph", "contagion", "scrying"],
					firstCol : "C",
					times : 10,
				}
			},
			"dual hex" : {
				toNotesPage : [{
					name : "Dual Hex",
					source : ["VSoS", 181],
					popupname : "Dual Hex",
					note : [
						"Whenever I cast a hex which targets one creature, I can target two creatures",
						"For these creatures, I can gain the benefits of Insidious Spell against both"
					],
					amendTo : "Grand Hex"
				}],
			},
			"forceful personality" : {
				toNotesPage : [{
					name : "Forceful Personality",
					source : ["VSoS", 181],
					popupname : "Forceful Personality",
					note : [
						"My charisma score increases by 2, to a maximum of 22"
					],
					amendTo : "Grand Hex"
				}],
				scores : [0, 0, 0, 0, 0, 2],
				scoresMaximum : [0, 0, 0, 0, 0, 22]
			},
			"hybrid" : {
				toNotesPage : [{
					name : "Hybrid",
					source : ["VSoS", 181],
					popupname : "Hybrid",
					note : [
						"As a bonus action, if my familiar is within 5 ft, I can transform into a hybrid",
						"For the next minute I gain the following benefits:",
						"\u2022 I gain temporary hit points equal to my familiar's hit points",
						"\u2022 My Armor Class equals 10 + my Dex mod + my Cha mod without a shield",
						"\u2022 I gain two natural melee weapons, corresponding to my familiar's attacks",
						"\u2022 I am proficient with these, and use Cha for the attack and damage rolls",
						"\u2022 They deal 1d10 bludgeoning, piercing, or slashing, (my choice)",
						"\u2022 I can attack twice when I take the Attack action, instead of once",
						"\u2022 I can use any action my familiar possesses",
						"I can dismiss the transformation on my turn as a free action",
						"When it ends, I can't summon my familiar again until a short rest"
					],
					amendTo : "Grand Hex"
				}],
				action : ["bonus action", "Magical Hybrid"],
				usages : 1,
				recovery : "short rest",
				weaponOptions : {
					regExpSearch : /^(?=.*familiar)(?=.*fury).*$/i,
					name : "Familiar's Fury",
					source : ["VSoS", 181],
					ability : 6,
					type : "Natural",
					damage : [1, 10, "My choice"],
					range : "Melee",
					description : "Only while hybrid, choose between Bludg, Pierc, Slash",
					abilitytodamage : true,
                    selectNow : true
				},
                armorOptions : [{
                    regExpSearch : /^(?=.*familiar)(?=.*armor).*$/i,
                    name : "Familiar's Armor",
                    source : ["VSoS", 181],
                    ac : "10+Cha",
                }]
			},
			"poison apple" : {
				toNotesPage : [{
					name : "Poison Apple",
					source : ["VSoS", 181],
					popupname : "Poison Apple",
					note : [
						"As an action, I can produce a magical apple, the appearance I control",
						"On my turn, I can spend an action to eat the apple for the following:",
						"\u2022 I regain HP equal to twice my witch level plus my Charisma modifier",
						"\u2022 I regain an expended spell slot of 5th level or lower",
						"\u2022 I can end one of the following conditions on myself:",
						"\tBlinded, deafened, paralyzed, or poisoned",
						"If another creature eats the apple it must make a Wis save with disadv.",
						"On a failed save, the creature is poisoned for 24 hours",
						"For each hour poisoned, they lose 4d8 HP which can't be reduced or avoided",
						"If they would fall to 0 HP, they instead drop to 1 HP and fall unconscious",
						"They remain unconscious for 7 days, or with a remove curse spell",
						"The apple stays magical for 24 hours, I must long rest before creating another"
					],
					amendTo : "Grand Hex"
				}],
				usages : 1,
				recovery : "long rest",
				action : ["action", "Create Poison Apple"]
			},
			"possession" : {
				toNotesPage : [{
					name : "Possession",
					source : ["VSoS", 181],
					popupname : "Possession",
					note : [
						"As an action, I attempt to possess a large or smaller creature within 10 ft",
						"The creature makes a Charisma save, if its CR > my witch level it auto succeeds",
						"On a failed save, I disappear and the target is incapacitated",
						"I control its body and can't be targeted by any attack, spell, or effect",
						"I maintain my Int, Wis, and Cha scores and alignment",
						"I use the creature's statistics; except knowledge, class features, and proficiencies",
						"I am treated as an undead spirit and can be banished from the target",
						"If I am banished my body rematerializes within 5 feet and I return to it",
						"This possession lasts for 1 hour, unless the body drops to 0 HP",
						"I can use this ability once per long rest"
					],
					amendTo : "Grand Hex"
				}],
				usages : 1,
				recovery : "long rest",
				action : ["action", "Possess"]
			},
			"war hex" : {
				toNotesPage : [{
					name : "War Hex",
					source : ["VSoS", 182],
					popupname : "War Hex",
					note : [
						"When I cast a single target hex, I can use my bonus action to cast a cantrip",
						"This cantrip must target the same creature"
					],
					amendTo : "Grand Hex"
				}],
				action : ["bonus action", "Cast Cantrip (After Hex)"]
			},
			"witch's broom" : {
				toNotesPage : [{
					name : "Witch's Broom",
					source : ["VSoS", 182],
					popupname : "Witch's Broom",
					note : [
						"I can use my action to enchant a mundane object to fly",
						"While holding this item with one hand I gain a fly speed of 60 ft",
						"I lose this bonus if I wear medium or heavy armor, or a shield",
						"I can only enchant one object this way at a time",
						"If I target another object, the previous enchantment ends"
					]
				}],
				action : ["action", "Enchant Broom"],
				speed : { fly : { spd : 60, enc : 0} }
			},
			"witch's hut" : {
				toNotesPage : [{
					name : "Witch's Hut",
					source : ["VSoS", 182],
					popupname : "Witch's Hut",
					note : [
						"I can perform a 24 hour long ritual to enchant a structure",
						"This structure must fit within a 15 foot cube",
						"I animate it as a Huge object, as per the animate objects spell",
						"The structure rises up on a pair of magical legs and obeys me",
						"The entrance is linked as per the magnificent mansion spell",
						"I can command the structure while inside this extradimension",
						"If the structure is destroyed, creatures inside are ejected",
						"They appear in adjadent unoccupied spaces to the structure",
						"As an action, I can teleport the structure within 60 ft of me",
						"I can only teleport it this way once per long rest",
						"I can repeat the ritual to end the current enchantment and begin a new one"
					]
				}],
				action : ["action", "Teleport Witch's Hut"]
			}
		},
		"hexmaster" : {
			name : "Hexmaster",
			source : ["VSoS", 177],
			minlevel : 20,
			description : desc([
                "Creatures have disadv. on saves against my hexes"
            ])
		}
	}
};

// * black magic witch subclass
AddSubClass("witch", "black magic", {
	regExpSearch : /^(((?=.*(black|pain|dark))(?=.*magic|artist|hexer|witch|coven|cabal))|(?=.*necromancer)).*$/i,
	subname : "Black Magic",
	source : ["VSoS", 183],
	features : {
		"subclassfeature3" : {
			name : "Hex: Decay",
			source : ["VSoS", 183],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["exhume", "inflict wounds", "gentle repose", "magic weapon", "animate dead", "vampiric touch", "blight", "death ward", "cloudkill", "contagion"],
            spellcastingExtraApplyNonconform : true,
			"decay" : {
				name : "Decay",
				extraname : "Black Magic Hex",
				source : ["VSoS", 183],
				description : desc([
                    "As an action, I can force a creature within 60 ft I can see to make a Constitution save",
                    "On a failed save, they are decaying until the end of my next turn",
                    "While decaying they take 1d6 Necrotic damage at the start of their next turn",
                    "The target's max HP is reduced that much, and they die if their HP max is reduced to 0",
                ])
			},
			autoSelectExtrachoices : [{
				extrachoice : "decay"
			}]
		},
		"subclassfeature6" : {
			name : "Undeath Command",
			source : ["VSoS", 183],
			minlevel : 6,
			description : desc([
                "When I use a bonus action to command my familiar, I can also command an undead I control"
            ])
		},
		"subclassfeature10" : {
			name : "Life Tether",
			source : ["VSoS", 183],
			minlevel : 10,
			description : desc([
                "As a reaction, when I take damage from a creature I can see I can damage a sole hex target",
                "I take half the damage (rounded down), and the hexed creature takes the rest",
            ]),
			usages : 1,
			recovery : "short rest",
			action : ["reaction", ""]
		},
		"subclassfeature14" : {
			name : "Black Sacrifice",
			source : ["VSoS", 183],
			minlevel : 14,
			description : desc([
                "As an action, if my familiar is within 10 ft, I can dissolve its bond to the plane",
                "Each creature I choose within 20 ft of it, make a Dex save; 10d8 Necrotic dmg, save halves",
                "Their HP max is reduced by the Necrotic dmg taken, and dies if their HP max is reduced to 0",
                "I can't summon my familiar again until I finish a long rest",
            ]),
			usages : 1,
			recovery : "long rest",
			action : ["action", ""]
		}
	}
});

// * blood magic witch subclass
AddSubClass("witch", "blood magic", {
	regExpSearch : /^((?=.*(blood|crimson|mortality|essense|sacrifice|forbidden))(?=.*magic|artist|hexer|witch|coven|cabal)).*$/i,
	subname : "Blood Magic",
	source : ["VSoS", 184],
	features : {
		"subclassfeature3" : {
			name : "Hex: Blood Curse",
			source : ["VSoS", 184],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["hellish rebuke", "hollowing curse", "melf's acid arrow", "hold person", "ruby-eye curse", "vampiric touch", "blight", "dominate beast", "dominate person", "hold monster"],
            spellcastingExtraApplyNonconform : true,
			"blood curse" : {
				name : "Blood Curse",
				extraname : "Blood Magic Hex",
				source : ["VSoS", 184],
				description : desc([
                    "As an action, I can force a creature I can see within 60 ft to make a Constitution save",
                    "On a failed save, they are blood cursed until the end of my next turn",
                    "If they have less than half max HP and less than twice my witch level, they drop to 0 HP"
                ]),
			},
			autoSelectExtrachoices : [{
				extrachoice : "blood curse"
			}]
		},
		"subclassfeature3.1" : {
			name : "Novice Hemomancy",
			source : ["VSoS", 184],
			minlevel : 3,
			description : desc([
                "I can replace the material components without a gold cost of my spells with a drop of blood",
                "If the material components are consumed, I cannot use this Hex."
            ])
		},
		"subclassfeature3.2" : {
			name : "Arcane Bloodletting",
			source : ["VSoS", 184],
			minlevel : 3,
			description : desc(["I can pay 5 HP to cast a spell with a casting time of an action as a bonus action"]),
			action : ["bonus action", ""],
			usages : "Charisma modifier per ",
			usagescalc : "event.value = Math.max(1, What('Cha Mod'));",
			recovery : "long rest",
			action : ["bonus action", ""]
		},
		"subclassfeature6" : {
			name : "Deathseeker",
			source : ["VSoS", 184],
			minlevel : 6,
			description : desc([
                "I can detect creas with less than half max HP even if heavily obscured, through some barriers",
                "I have advantage to track creatures I or my familiar have damaged within the last 24 hours",
            ]),
			vision : [["Deathseeker", 60]]
		},
		"subclassfeature10" : {
			name : "Hemomantic Recovery",
			source : ["VSoS", 184],
			minlevel : 10,
			description : desc([
                "When I finish a short rest, I can spend hit dice to regain spell slots below 6th level:",
                "1st - 2 hit dice; 2nd - 3 hit dice; 3rd - 5 hit dice; 4th - 6 hit dice; 5th - 7 hit dice",
            ]),
            usages : 1,
            recovery : "Day"
		},
		"subclassfeature14" : {
			name : "Sanguine",
			source : ["VSoS", 184],
			minlevel : 14,
			description : desc([
                "Once per round, when I damage the sole target of my hex with a spell, I can lose HP",
                "For every 5 HP I lose, I deal an extra 2d8 necrotic damage to a max of 6d8",
            ]),
			additional : "2d8 per 5 HP, up to 6d8",
            usages : 1,
            recovery : "Round"
		}
	}
});

// * green magic witch subclass
AddSubClass("witch", "green magic", {
	regExpSearch : /^(((?=.*(green|nature|druidic|elder|primal))(?=.*magic|artist|hexer|witch|coven|cabal))|(?=.*arborist)).*$/i,
	subname : "Green Magic",
	source : ["VSoS", 184],
	features : {
		"subclassfeature3" : {
			name : "Hex: Elder Tongue",
			source : ["VSoS", 184],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["entangle", "goodberry", "barkskin", "locate animals or plants", "conjure animals", "plant growth", "conjure woodland beings", "stoneskin", "awaken", "tree stride"],
			spellcastingExtraApplyNonconform : true,
            "elder tongue" : {
				name : "Elder Tongue",
				extraname : "Green Magic Hex",
				source : ["VSoS", 184],
				description : "\n   " + "As a bonus action until the end of my next turn I can speak with beasts and plants" + "\n   " + "I gain adv. on all Cha checks to influence beasts and plants",
				action : ["bonus action", " (Hex)"]
			},
            autoSelectExtrachoices : [{
                extrachoice : "elder tongue"
            }]
		},
		"subclassfeature3.1" : {
			name : "Primal Ally",
			source : ["VSoS", 185],
			minlevel : 3,
			description : "\n   " + "My familiar gets three times my witch level as max HP instead of two"
		},
		"subclassfeature6" : {
			name : "Twin Familiar",
			source : ["VSoS", 185],
			minlevel : 6,
			description : desc([
                "When I summon my familiar I can summon two identical familiars with shared HP",
                "They roll once for initiative; I must command them separately; spells and features affect both",
                "I can use a bonus action to command one to attack, and an action to command the other to attack"
            ]),
		},
		"subclassfeature10" : {
			name : "Vital Nourishment",
			source : ["VSoS", 185],
			minlevel : 10,
			description : desc([
                "When I finish a long rest, plant life within 120 ft nourish with food, water, and other needs",
                "If the plants produce fruits, berries, or vegetables, it can feed 6 creatures for one day",
                "I also choose 6 creatures I can see to gain temp hp equal to half my witch level + Cha mod",
                "I can choose to end the blinded, deafened, paralyzed, or poisoned condition on each creature"
            ]),
			usages : 1,
            recovery : "long rest"
		},
		"subclassfeature14" : {
			name : "Sacrificial Familiar",
			source : ["VSoS", 185],
			minlevel : 14,
			description : desc([
                "When I would be targeted by an attack in melee, if my familiar is within 5 ft",
                "I can use my reaction to make my familiar the target instead",
            ]),
			action : ["reaction", ""],
			usages : "Charisma modifier per ",
			usagescalc : "event.value = Math.max(1, What('Cha Mod'));",
			recovery : "long rest"
		}
	}
});

// * purple magic witch subclass
AddSubClass("witch", "purple magic", {
	regExpSearch : /^(((?=.*(purple|illusory|enchant|puppet|mind|dream|nightmare))(?=.*magic|artist|hexer|witch|coven|cabal|master))|(?=.*enchanter)).*$/i,
	subname : "Purple Magic",
	source : ["VSoS", 185],
	features : {
		"subclassfeature3" : {
			name : "Hex: Hallucination",
			source : ["VSoS", 185],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["charm person", "silent image", "enthrall", "invisibility", "hypnotic pattern", "major image", "confusion", "private sanctum", "modify memory", "seeming"],
			spellcastingExtraApplyNonconform : true,
            "hallucination" : {
				name : "Hallucination",
				extraname : "Purple Magic Hex",
				source : ["VSoS", 185],
				description : desc([
                    "As an action, I can force one creature I can see within 60 ft to make a Wisdom save",
                    "Creatures immune to being charmed automatically succeeds",
                    "On a failed save, they get -1 to atks and checks until the end of my next turn",
                    "At the start of each of its turns the penalty increases by 1 to a max of -5"
                ])
			},
			autoSelectExtrachoices : [{
				extrachoice : "hallucination"
			}]
		},
		"subclassfeature6" : {
			name : "False Authority",
			source : ["VSoS", 186],
			minlevel : 6,
			description : desc([
                "As an action creas perceive me as a figure of authority for 1 hour or until I end it on my turn",
                "As an action they can make an Investigation check vs my spell DC to see through my illusion",
            ]),
			action : ["action", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature10" : {
			name : "Deceitful Transposition",
			source : ["VSoS", 186],
			minlevel : 10,
			description : desc([
                "As a bonus action I can create an illusion for 1 min or until the targets take damage",
                "Two creas w/in 60 ft are disguised as each other, including sounds, smells, etc.",
                "As an action other creas can make an Investigation check to see through both illusions",
            ]),
			action : ["bonus action", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature14" : {
			name : "Frenzied Nightmare",
			source : ["VSoS", 186],
			minlevel : 14,
			description : desc([
                "A crea affected by my Hallucination sees all creas as enemies for 1 min or until the hex ends",
                "It must choose random targets for abilities, attacks and must take opportunity attacks",
            ]),
			usages : 1,
			recovery : "long rest"
		}
	}
});

// * red magic witch subclass
AddSubClass("witch", "red magic", {
	regExpSearch : /^(((?=.*(red|wrath|element))(?=.*magic|artist|hexer|witch|coven|cabal))|(?=.*elementalist)).*$/i,
	subname : "Red Magic",
	source : ["VSoS", 186],
	features : {
		"subclassfeature3" : {
			name : "Hex: Imperil",
			source : ["VSoS", 186],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["burning hands", "magic missile", "melf's acid arrow", "scorching ray", "fireball", "protection from energy", "ice storm", "wall of fire", "cone of cold", "telekinesis"],
			spellcastingExtraApplyNonconform : true,
            "imperil" : {
				name : "Imperil",
				extraname : "Red Magic Hex",
				source : ["VSoS", 186],
				description : "\n   " + "As an action, I can force one creature within 60 ft to make a Constitution save" + "\n   " + "On a failed save, they lose resistance to a chosen damage type until the end of my next turn" + "\n   " + "If they have immunity it becomes resistance instead"
			},
            autoSelectExtrachoices : [{
                extrachoice : "imperil"
            }]
		},
		"subclassfeature6" : {
			name : "Convolute Energy",
			source : ["VSoS", 186],
			minlevel : 6,
			description : "\n   " + "Whenever I cast a spell that deals acid, cold, fire, lightning, poison, or thunder dmg" + "\n   " + "I can gain resistance to that type until the end of my next turn"
		},
		"subclassfeature10" : {
			name : "Invulnerability",
			source : ["VSoS", 186],
			minlevel : 10,
			description : "\n   " + "When hit with an atk I can see, I can use my reaction to subtract 50 from the dmg (min 0)",
			action : ["reaction", ""],
			usages : 1,
			recovery : "long rest"
		},
		"subclassfeature14" : {
			name : "Elemental Annihilation",
			source : ["VSoS", 187],
			minlevel : 14,
			description : "\n   " + "When I cast a witch spell that deals acid, cold, fire, lightning, or thunder dmg" + "\n   " + "I can expend a spell slot of equal or higher level to deal max dmg",
			usages : 1,
			recovery : "long rest"
		}
	}
});

// * steel magic witch subclass
AddSubClass("witch", "steel magic", {
	regExpSearch : /^((?=.*(steel|metal|blade|battle))(?=.*magic|artist|hexer|witch|coven|cabal)).*$/i,
	subname : "Steel Magic",
	source : ["VSoS", 187],
	features : {
		"subclassfeature3" : {
			name : "Hex: Malevolence",
			source : ["VSoS", 187],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["heroism", "shield", "heat metal", "magic weapon", "blink", "haste", "death ward", "freedom of movement", "flame strike", "telekinesis"],
			spellcastingExtraApplyNonconform : true,
            "malevolence" : {
				name : "Malevolence",
				extraname : "Steel Magic Hex",
				source : ["VSoS", 187],
				description : desc([
                    "As a bonus action, I gain the following benefits until the end of my next turn:",
                    "\u2022 My AC without a shield becomes 12 + Dex mod + Cha mod",
                    "\u2022 I can use Cha instead of Str or Dex for atks and dmg for non Heavy/Special melee weapons",
                    "\u2022 If I take damage from a visible creature w/in 5 ft I can use my reaction to atk them once",
                ]),
                armorOptions : [{
                    regExpSearch : /^(?=.*steel)(?=.*armor).*$/i,
                    name : "Steel Armor",
                    source : ["VSoS", 181],
                    ac : "12+Cha",
                }],
                calcChanges : {
                    atkAdd : [
                        function(fields, v) {
                            if(v.isMeleeWeapon && !/(heavy|special)/i.test(v.WeaponText) && !v.theWea.special && /(malevolence|steel magic ?(hex)?|hex)/i.test(v.WeaponText) && What('Cha Mod') > What(AbilityScores.abbreviations[fields.Mod - 1] + ' Mod')) { 
                                fields.Mod = 6
                            }  
                        },
                        "I can include \"Malevolence\", \"Steel Magic\", or \"Hex\" for the automation to treat the attack as a Steel Magic Hex. These attacks will use Charisma Instead of Str/Dex for determining the attack and damage rolls."
                    ],
                },
				action : ["bonus action", " (Hex)"]
			},
			autoSelectExtrachoices : [{
				extrachoice : "malevolence"
			}]
		},
		"subclassfeature3.1" : {
			name : "Bonus Proficiencies",
			source : ["VSoS", 187],
			minlevel : 3,
			description : "\n   " + "I gain proficiency with other weapons as shown on the first page",
			weaponProfs : [false, false, ["battleaxe", "flail", "longsword", "morningstar", "rapier", "scimitar", "trident", "warhammer"]],
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if(v.isMeleeWeapon && !/(heavy|special)/i.test(v.WeaponText) && /martial/i.test(v.theWea.type) && !v.theWea.special) {
                            fields.Proficiency = true
                        } 
                    },
                    "I gain proficiency with martial melee weapons that lack the Heavy or Special"
                ],
            }
		},
		"subclassfeature6" : {
			name : "Cackling Killer",
			source : ["VSoS", 187],
			minlevel : 6,
			description : "\n   " + "When I use my Cackle, I can atk twice instead of once when I use the atk action on my turn"
		},
		"subclassfeature10" : {
			name : "Soulsword Familiar",
			source : ["VSoS", 187],
			minlevel : 10,
			description : desc([
                "As a bonus action, I can dismiss my familiar until I finish a short rest",
                "My weapon now deals an extra 1d8 fire dmg until I resummon my familiar",
            ]),
			action : ["bonus action", ""],
			usages : 1,
			recovery : "short rest",
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if(/soulsword/i.test(v.WeaponTextName)) {
                            fields.Description += (fields.Description ? "; " : "") + "+1d8 fire dmg"
                        } 
                    },
                    "I can include soulsword into a weapons name to deal an extra 1d8 fire damage with it."
                ],
            }
		},
		"subclassfeature14" : {
			name : "Shrieking Strike",
			source : ["VSoS", 187],
			minlevel : 14,
			description : desc([
                "Once per turn, when I hit with an atk I can force the target to make a Wisdom save",
                "On a fail they are frightened of me for 1 min; repeating the save at the end of its turns",
            ]),
			usages : "Charisma modifier per",
			usagescalc : "event.value = Math.max(1, What('Cha Mod'));",
			recovery : "long rest"
		}
	}
});

AddSubClass("witch", "tea magic", {
	regExpSearch : /^(((?=.*(tea|caffiene|drink|calm|herb))(?=.*magic|artist|hexer|witch|coven|cabal))|(?=.*(herbalist|barista))).*$/i,
	subname : "Tea Magic",
	source : ["VSoS", 188],
	features : {
		"subclassfeature3" : {
			name : "Hex: Tasseography",
			source : ["VSoS", 188],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["tasha's hideous laughter", "sanctuary", "augury", "calm emotions", "clairvoyance", "sending", "divination", "private sanctum", "legend lore", "scrying"],
			spellcastingExtraApplyNonconform : true,
            "tasseography" : {
				name : "Tasseography",
				extraname : "Tea Magic Hex",
				source : ["VSoS", 188],
				description : "\n   " + "As an action I can choose an ally within 60 ft, roll a d20, and record the result" + "\n   " + "Until the end of my next turn, I can replace any atk roll, save, or check with the result" + "\n   " + "This must be done before the roll is made, once I replace a roll this way the hex ends"
			},
            autoSelectExtrachoices : [{
                extrachoice : "tasseography"
            }]
		},
		"subclassfeature3.1" : {
			name : "Tea Ceremony",
			source : ["VSoS", 188],
			minlevel : 3,
			description : "\n   " + "My allies and I lose an additional level of exhaustion during a short or long rest"
		},
		"subclassfeature6" : {
			name : "Shapes and Omens",
			source : ["VSoS", 188],
			minlevel : 6,
			description : "\n   " + "At the end of a long rest my tea leaves form a shape that hints at future events"
		},
		"subclassfeature10" : {
			name : "Herbal Remeby",
			source : ["VSoS", 188],
			minlevel : 10,
			description : "\n   " + "Once per short rest, I can cast greater restoration without a spell slot or material components",
			spellcastingBonus : [{
				spells : ["greater restoration"],
				name : "Herbal Remedy",
				selection : ["greater restoration"],
				firstCol : "oncesr",
			}],
            spellChanges : {
                "greater restoration" : {
                    compMaterial : "",
                    components : "V,S",
                    changes : "I no longer need material components to cast greater restoration."
                }
            }
		},
		"subclassfeature14" : {
			name : "Invigorate",
			source : ["VSoS", 188],
			minlevel : 14,
			description : "\n   " + "As a bonus action, I can give myself or an ally within 5 ft a rush of energy" + "\n   " + "On their next turn, they can take one additional action",
			usages : 1,
			recovery : "long rest"
		}
	}
});

AddSubClass("witch", "technicolor magic", {
	regExpSearch : /^((?=.*(technicolor|friend|positivity|positive|animal|companion|music))(?=.*magic|artist|hexer|witch|coven|cabal)).*$/i,
	subname : "Technicolor Magic",
	source : ["VSoS", 188],
	features : {
		"subclassfeature3" : {
			name : "Hex: Musical Interlude",
			source : ["VSoS", 189],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["color spray", "speak with animals", "animal messenger", "warding bond", "fly", "sending", "freedom of movement", "mandy's marvelous dress", "awaken", "teleportation circle"],
			spellcastingExtraApplyNonconform : true,
            "musical interlude" : {
				name : "Musical Interlude",
				extraname : "Technicolor Magic Hex",
				source : ["VSoS", 189],
				description : "\n   " + "As an action, each visible willing crea w/in 30 ft gains temp HP until the end of my next turn" + "\n   " + "This temp HP is equal to my Cha mod + half my witch level (rounded down)"
			},
			autoSelectExtrachoices : [{
				extrachoice : "musical interlude"
			}]
		},
		"subclassfeature3.1" : {
			name : "Animal Friends",
			source : ["VSoS", 189],
			minlevel : 3,
			description : "\n   " + "I gain adv. on Animal Handling, can use Cha instead of Wis if the creature is small or smaller" + "\n   " + "If I adopt a beast as a pet, I can store them in an extradimensional space like a familiar",
			advantages : [["Animal Handling", true]],
		},
		"subclassfeature6" : {
			name : "Friendship Bracelet",
			source : ["VSoS", 189],
			minlevel : 6,
			description : "\n   " + "As an action I can create a bracelet that grants the following benefits to the wearer:" + "\n   " + "I know their location if on the same plane, my spells always have visibility to them"
		},
		"subclassfeature10" : {
			name : "Positivity",
			source : ["VSoS", 189],
			minlevel : 10,
			description : "\n   " + "When attacked by a visible crea, as a rea. my AC increases by +1 per ally w/in 5 ft (max 10)",
			action : ["reaction", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature14" : {
			name : "Redemptive Arc",
			source : ["VSoS", 189],
			minlevel : 14,
			description : "\n   " + "When a visible enemy is reduced to 0 HP, as a reaction I can make them fall unconcious" + "\n   " + "When they wake they are no longer charmed, cursed, frightened or possessed" + "\n   " + "They lose a Bond or Flaw that would make them hostile towards me",
			action : ["reaction", ""],
			usages : 1,
			recovery : "long rest"
		}
	}
});

AddSubClass("witch", "white magic", {
	regExpSearch : /^(((?=.*(white|heal|hope|gift))(?=.*magic|artist|hexer|witch|coven|cabal|guardian))|(?=.*guardian)).*$/i,
	subname : "White Magic",
	source : ["VSoS", 189],
	features : {
		"subclassfeature3" : {
			name : "Hex: Remedy",
			source : ["VSoS", 189],
			minlevel : 3,
			additional : "See third page",
			spellcastingExtra : ["bless", "cure wounds", "lesser restoration", "prayer of healing", "beacon of hope", "revivify", "death ward", "guardian of faith", "mass cure wounds", "raise dead"],
			spellcastingExtraApplyNonconform : true,
            "remedy" : {
				name : "Remedy",
				extraname : "White Magic Hex",
				source : ["VSoS", 189],
				description : "\n   " + "As an action a creature within 60 ft heals 1d10 + my witch level HP" + "\n   " + "Each creature can only be affected by this hex once per short rest"
			},
			autoSelectExtrachoices : [{
				extrachoice : "remedy"
			}]
		},
		"subclassfeature6" : {
			name : "Talisman of Protection",
			source : ["VSoS", 189],
			minlevel : 6,
			description : "\n   " + "I can spend an hour creating a talisman, which can be done over a short rest" + "\n   " + "I can only have one active talisman at a time; the wearer of the talisman adds d4 to all saves",
            usages : 1,
            recovery : "short rest",
		},
		"subclassfeature10" : {
			name : "Benevolent Surge",
			source : ["VSoS", 189],
			minlevel : 10,
			description : "\n   " + "When myself, my familiar, or a visible ally within 30 ft takes dmg" + "\n   " + "I can use my reaction to heal them 1d10 + Cha mod HP",
			action : ["reaction", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature14" : {
			name : "Witch's Gift",
			source : ["VSoS", 189],
			minlevel : 14,
			description : "\n   " + "When I cast a spell or hex that heals HP, the target gains +3 AC until the end of my next turn"
		}
	}
});

// * Warmage class
// warmage spell list
[
    //cantrips
    "arc blade", "acid splash", "burning blade", "card trick", "caustic blade", "cheat", "chill touch", "cryptogram", "finger guns", "fire bolt", "force buckler", "force dart", "force weapon", "frigid blade", "light", "lightning surge", "mage hand", "magic daggers", "mending", "minor illusion", "moment to think", "phantom grapnel", "poison spray", "prestidigitation", "produce flame", "quickstep", "ray of frost", "shocking grasp", "sonic pulse", "springheel", "thunderous distortion", "true strike"
].forEach( function (s) {
    if(SpellsList[s] && SpellsList[s].classes && SpellsList[s].classes.indexOf("warmage") === -1) SpellsList[s].classes.push("warmage");
});

ClassList["warmage"] = {
    regExpSearch : /warmage/i,
    name : "Warmage",
    source : ["VSoS", 157],
    primaryAbility : "Intelligence",
	prereqs : "Intelligence 13",
    die : 8,
    improvements : [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
    saves : ["Con", "Int"],
    skillstxt : {
		primary : "Choose two from Acrobatics, Animal Handling, Arcana, Athletics, History, Investigation, Medicine, Perception, and Survival"
	},
	toolProfs : {
		primary : [["Artisan's tool", 1], ["Gaming Set", 1]]
	},
	armorProfs : {
		primary : [true, false, false, false],
		secondary : [true, false, false, false]
	},
	weaponProfs : {
		primary : [true, false],
		secondary : [false, false]
	},
    equipment : "Warmage starting equipment:\n \u2022 Leather armor, a dagger, and any simple weapon;\n \u2022 A component pouch -or- an arcane focus\n \u2022 An explorer's pack -or- a scholar's pack -or- one kit you're proficient in.\n\nAlternatively, choose 4d4 \xD7 10 gp worth of starting equipment instead of both the class' and the background's starting equipment.",
	subclasses : ["Warmage House", []],
    attacks : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    abilitySave : 4,
    spellcastingFactor : 3, // used for multiclassing
    spellcastingTable : [   // Define a custom spell table so that the house of bishops can overwrite this with it's own.
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 0
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 1
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 2
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 3
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 4
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 5
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 6
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 7
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 8
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 9
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 10
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 11
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 12
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 13
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 14
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 15
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 16
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 17
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 18
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 19
        [0, 0, 0, 0, 0, 0, 0, 0, 0]  // level 20
    ],
    spellcastingKnown : {
        cantrips : [4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,10],
		spells : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    },
	spellcastingList : {
		"class" : "warmage",
		level : [0, 0],
	},
    features : {
        "spellcasting" : {
			name : "Spellcasting",
			source : ["VSoS", 158],
			minlevel : 1,
			description : desc([
				"I can cast warmage cantrips, using Intelligence as my spellcasting ability",
				"I can use an arcane focus as a spellcasting focus",
				"Whenever I gain a warmage level, I can replace a cantrip I know with another"
			]),
			additional : ["4 cantrips known", "4 cantrips known", "5 cantrips known", "5 cantrips known", "6 cantrips known", "6 cantrips known", "6 cantrips known", "6 cantrips known", "7 cantrips known", "7 cantrips known", "7 cantrips known", "7 cantrips known", "8 cantrips known", "8 cantrips known", "8 cantrips known", "8 cantrips known", "9 cantrips known", "9 cantrips known", "9 cantrips known", "10 cantrips known"],
		}, 
        "arcane initiation" : {
			name : "Arcane Initiation",
			source : ["VSoS", 159],
			minlevel : 1,
			description : desc(["Choose an Initiation using the \"Choose Feature\" button above"]),
			choices : ["Adventurer", "Circus Performer", "Eldritch Event", "Mercenary", "Temple", "Tower Apprentice", "Self-Taught", "Survival"],
            "adventurer" : {
                name : "Arcane Initiation: Adventurer",
                description : desc([
                    "I learn the mage hand and ray of frost cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Adventurer",
                    spells : ["mage hand", "ray of frost"],
                    selection : ["mage hand", "ray of frost"],
                    times : 2
                }
            },
            "circus performer" : {
                name : "Arcane Initiation: Circus Performer",
                description : desc([
                    "I learn the dancing lights and minor illusion cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Circus Performer",
                    spells : ["minor illusion", "dancing lights"],
                    selection : ["minor illusion", "dancing lights"],
                    times : 2
                }
            },
            "eldritch event" : {
                name : "Arcane Initiation: Eldritch Event",
                description : desc([
                    "I learn the chill touch and message cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Eldritch Event",
                    spells : ["chill touch", "message"],
                    selection : ["chill touch", "message"],
                    times : 2
                }
            },
            "mercenary" : {
                name : "Arcane Initiation: Mercenary",
                description : desc([
                    "I learn the arc blade and true strike cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Mercenary",
                    spells : ["arc blade", "true strike"],
                    selection : ["arc blade", "true strike"],
                    times : 2
                }
            },
            "temple" : {
                name : "Arcane Initiation: Temple",
                description : desc([
                    "I learn the sacred flame and spare the dying cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Temple",
                    spells : ["sacred flame", "spare the dying"],
                    selection : ["sacred flame", "spare the dying"],
                    times : 2
                }
            },
            "tower apprentice" : {
                name : "Arcane Initiation: Tower Apprentice",
                description : desc([
                    "I learn the prestidigitation and shocking grasp cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Tower Apprentice",
                    spells : ["prestidigitation", "shocking grasp"],
                    selection : ["prestidigitation", "shocking grasp"],
                    times : 2
                }
            },
            "self-taught" : {
                name : "Arcane Initiation: Self-Taught",
                description : desc([
                    "I learn the fire bolt and light cantrips."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Self-Taught",
                    spells : ["fire bolt", "light"],
                    selection : ["fire bolt", "light"],
                    times : 2
                }
            },
            "survival" : {
                name : "Arcane Initiation: Survival",
                description : desc([
                    "I learn the druidcraft and shillelagh."
                ]),
                spellcastingBonus : {
                    name : "Arcane Initiation: Survival",
                    spells : ["druidcraft", "shillelagh"],
                    selection : ["druidcraft", "shillelagh"],
                    times : 2
                }
            }
        },
        "arcane fighting style" : {
			name : "Arcane Fighting Style",
			source : ["VSoS", 159],
			minlevel : 1,
			description : desc(["Choose an Arcane Fighting Style using the \"Choose Feature\" button above"]),
			choices : ["Blaster", "Deflector", "Resistive", "Sniper", "Striker"],
			"blaster" : { 
				name : "Arcane Blaster Fighting Style",
				description : desc(["The spell save DC for warmage spells increases by 1"]),
				calcChanges : {
					spellCalc : [
						function (type, spellcasters, ability) {
							//if we dont know the house of bishops feature, then we can just add +1 to our warmage saves.
							if( type == "dc" && (spellcasters.indexOf("warmage") !== -1 || spellcasters.indexOf("warmage-adaptive arcanist") !== -1) ) return 1;
						},
						"I add +1 to all the saving throw DCs of my warmage spells."
					],
				}
			},
			"deflector" : {
				name : "Arcane Deflector Fighting Style",
				description : desc([
					"As a rea. and targeted by spell attack or ranged weapon attack, and if I have one free hand",
					"I can increase my AC. The bonus is equal to my Prof. Bonus and can cause the attack to miss."
				]),
				action : ["reaction", "Arcane Deflect (Prof. Bonus to AC)"],
			},
			"resistive" : {
				name : "Resistive Arcane Fighting Style",
				description : desc(["I gain +1 AC while wearing light, or under the effects of Mage Armor."]),
				extraAC : [{
					mod : 1,
					name : "Resistive Fighting Style",
					text : "I gain a +1 bonus AC while I'm wearing light, or if I'm under the effects of the Mage Armor spell.",
					stopeval : function (v) { 
						return (!v.wearingArmor || v.heavyArmor || v.mediumArmor) && !(/^mage armou?r$/).test(CurrentArmour.known); 
					}
				}]
			},
			"sniper" : {
				name : "Arcane Sniper Fighting Style",
				description : desc(["I gain a +1 to ranged spell attacks. Additionally, I ignore half cover when casting a warmage cantrip"]), 
				calcChanges : {
					atkCalc : [
						function (fields, v, output) {
							if (v.isSpell && (/^(?!.*melee).*\d+.*$/i).test(fields.Range)) {
								output.extraHit += 1;
							};
						},
						"I gain a +1 bonus to ranged spell attack rolls."
					]
				}
			},
			"striker" : {
				name : "Arcane Striker Fighting Style",
				description : desc([
                    "When I exceed a target's AC by \u22655, or score a critical hit, with a melee atk cantrip",
                    "I can add my Prof. Bonus to the damage roll"
                ])
			}
		},
		"warmage edge" : {
			name : "Warmage Edge",
			source : ["VSoS", 160],
			minlevel : 2,
			description : desc([
				"Once per turn when I deal dmg with a warmage cantrip, I can add my Int mod to the damage.",
				"At 5th level, I can further this to add extra dice to my warmage cantrip damage."
			]),
			additional : levels.map( function (n) {
				return (n < 5 ? "" : n < 11 ? 1 : n < 17 ? 2 : 3) + (n < 5 ? "" : n < 11 ? " extra die" : " extra dice");
			}),
			calcChanges : {
				atkAdd : [
					function (fields, v) {
						if(classes.known.warmage && classes.known.warmage.level >= 2 && v.isSpell && v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf("warmage") !== 1 ) {
							var lvl = classes.known.warmage.level;
							var extraDie = lvl < 5 ? 0 : lvl < 11 ? 1 : lvl < 17 ? 2 : 3; //The amount of die added based on level
							var currentDieSize = parseInt(fields.Damage_Die.split('d')[1]);
							fields.Description += (fields.Description ? '; ' : '+ ') + 'Once per turn ' + What('Int Mod') + (extraDie ? ' and +' + extraDie + 'd' + currentDieSize: "") + ' dmg';
						}
					}
				]
			}
		},	
		"warmage tricks" : {
			name : "Warmage Tricks",
			minlevel : 2,
			source : ["VSoS",160],
			description : desc([
				"Use the \"Choose Feature\" button above to add Warmage Tricks to the third page.",
				"Whenever I gain a warmage level, I can replace a trick I know with another."
			]),
			additional : levels.map(function (n) {
				return (n < 2 ? "" : n < 3 ? 2 : n < 5 ? 3 : n < 7 ? 4 : n < 9 ? 5 : n < 11 ? 6 : n < 13 ? 7 : n < 15 ? 8 : n < 17 ? 9 : 10) + " tricks known";
			}),
			extraname : "Warmage Tricks",
			extraTimes :[0,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,10,10],
			extrachoices : ["bishop's maneuver (prereq: level 10)", "blasting cantrip", "blinding light (prereq: light cantrip)", "castle (prereq: level 10 warmage)", "chivalrous presence", "cloak of feathers", "commander's steed", "corrosive cantrip", "directed momentum (prereq: level 10 warmage)", "draining cantrip", "encryptogram (prereq: cryptogram)", "explosive cantrip", "extended range", "field medic", "flexible range", "fold (prereq: level 10)", "gamble (prereq: cheat, house of dice or house of cards)", "infinite variation (prereq: prestidigitation)", "icy cantrip", "knight's aegis (prereq: level 10, force buckler)", "leading edge tactics", "lieutenant's demand (prereq: level 10)", "mage hand knack (prereq: mage hand)", "minor shadow illusion (prereq: minor illusion)", "mystical armor", "mystical athlete (prereq: quickstep or springheel)", "mystical weaponmaster (prereq: force weapon or magic daggers)", "mystical vision", "phantom hookshot (prereq: phantom grapnel)", "rapid fortification (prereq: mending)", "snake eyes (prereq: level 10)", "severe cantrip", "signature focus (prereq: level 5)", "silent cantrip", "split fire (prereq: level 5)", "static cantrip", "unerring strike (prereq: level 10, true strike)"],
			"bishop's maneuver (prereq: level 10)" : {
				name : "Bishop's Maneuver",
				source : ["VSoS", 161],
				submenu : "[House of Bishops]",
				description : desc([
					"I can take the Disengage action as a bonus action.",
                    "When doing so my walking speed increases by 10 feet until the end of my turn." 
				]),
				action : ["bonus action",""],
				prereqeval : function(v) { return classes.known.warmage.level >= 10 && (/\bpawns|bishops\b/).test(classes.known.warmage.subclass); },
			},
			"blasting cantrip" : { 
				name : "Blasting Cantrip",
				source : ["VSoS", 161],
				description : desc([
					"When I deal force dmg with a warmage cantrip, I can push the target 10 ft away from me."
				]),
				calcChanges : {
					atkAdd : [
						function( fields, v ) { //we only get access to warmage cantrips, not wizard so this is correct
							if( classes.known.warmage && classes.known.warmage.level >= 2 && v.isSpell && (/force/i).test(fields.Damage_Type) && v.thisWeapon[3] && SpellsList[v.WeaponName] && v.thisWeapon[4].indexOf("warmage") !== 1 && SpellsList[v.thisWeapon[3]].level === 0) {
								fields.Description += (fields.Description ? '; ' : '') + 'push 10ft';
							}
						}	
					]
				},
				usages : 1,
				recovery : "Turn",
			},
			"blinding light (prereq: light cantrip)" : {
				name : "Blinding Light",
				source : ["VSoS", 161],
				description : desc([
					"When I cast light on an object I am holding, I can shoot a flare at a creature within 10 ft",
                    "The target must make a Con save or be blinded until the start of my next turn",
                    "Once a target fails, it has adv on all saves against this trick for 24 hours",
				]),
				spellChanges : {
					"light" : {
						description : "1 obj up to 10-ft cube sheds bright light 20-ft rad and dim light 20-ft; cannot have multiple instances; Shoot flare at crea w/in 10 ft, save or blinded",
						save : "Con",
						changes : "I can shoot a flare at a creature within 10-ft of me. The creature must make a Constitution saving throw or become blinded."
					}
				},
				prereqeval : function(v) { return isSpellUsed('light', true); }
			},
			"castle (prereq: level 10 warmage)" : {
				name : "Castle",
				source : ["VSoS", 161],
				submenu : "[House of Rooks]",
				description : desc([
                    "I can swap places with a small or mediumm willing crea w/in 120 ft"
				]),
				usages : 1,
				recovery : "short rest",
				action : ["action",""],
				prereqeval : function(v) { return classes.known.warmage.level >= 10 && (/\bpawns|rooks\b/).test(classes.known.warmage.subclass); },
			},
			"chivalrous presence" : {
				name : "Chivalrous Presence",
				source : ["VSoS", 161],
				submenu : "[House of Knights]",
				description : desc([
					"I gain proficiency in Insight and Persuasion, and adv. on ability checks to interact with nobles.",
                    "Additionally, other creatures can always discern when I am telling the truth."
				]),
				skills : ["Insight", "Persuasion"],
				prereqeval : function(v) { return (/\bpawns|knights\b/).test(classes.known.warmage.subclass); },
			},
			"cloak of feathers" : {
				name : "Cloak of Feathers",
				source : ["VSoS", 161],
				description : desc([
					"When wearing no armor, and no shield, my AC equals to 10 + Dex mod + Int mod"
				]),
                prereqeval : function(v) { return (/\bpawns|rooks\b/).test(classes.known.warmage.subclass); },
				armorOptions : [{
					regExpSearch : /^(?=.*cloak)(?=.*feathers).*$/i,
					name : "Cloak of Feathers",
					source : ["VSoS", 161],
					ac : "10+Int",
					affectsWildShape : true,
                    selectNow : true
				}],
			},
			"commander's steed" : {
				name : "Commander's Steed (prereq: house of kings)",
				source : ["VSoS", 161],
				submenu : "[House of Kings]",
				description : desc([
					"I learn the find steed spell and can cast it without expending a spell slot.",
                    "My steed is resilient; its hp maximum increases by an amount equal to my warmage level."
				]),
				spellcastingBonus : {
					name : "Commander's Steed",
					spells : ["find steed"],
					selection : ["find steed"],
					times : 1,
					firstCol : "atwill"
				},
                calcChanges : {
                    companionCallback : [
                        function(prefix, oCrea, bAdd, sCompType) { 
                            if (!/mount/i.test(sCompType)) return;
                            var sHPfld = prefix + "Comp.Use.HP.Max";
							var newHP = classes.known.warmage.level + What(sHPfld);
							Value(sHPfld, newHP);
                        }
                    ]
                },
				prereqeval : function(v) { return (/\bpawns|kings\b/).test(classes.known.warmage.subclass); }
			},
			"corrosive cantrip" : {
				name : "Corrosive Cantrip",
				source : ["VSoS", 161],
				description : desc([
					"When I deal acid damage to a creature with a warmage cantrip, I can corrode its defenses.",
                    "The next atk roll vs. the target before the start of my next turn, -1d4 from its AC for the atk"
				]),
				usages : 1,
				recovery : "Turn",
			},
			"directed momentum (prereq: level 10 warmage)" : {
				name : "Directed Momentum",
				source : ["VSoS", 161],
				submenu : "[House of Lancers]",
				description : desc([
					"When I score a crit. with a melee atk or reduce a creature to 0 hp with one",
                    "I can make an unarmed strike against another target.",
                    "If they are in range of my Shock Trooper, I can lunge to it, dealing an extra 1d8 force dmg"
				]),
				additional : ["+1d8 Force damage"],
				prereqeval : function(v) { return (/\bpawns|lancers\b/).test(classes.known.warmage.subclass); },
				usages : 1,
				recovery : "Turn",
			},
			"draining cantrip" : {
				name : "Draining Cantrip",
				source : ["VSoS", 161],
				description : desc([
                    "I gain temp hp equal to half my warmage level when I deal necro/poison dmg to a hostile",
                    "I can only gain temp hp if I deal damage with a warmage cantrip; temp hp lasts for 1 min"
				])
			},
			"encryptogram (prereq: cryptogram)" : {
				name : "Encryptogram",
				source : ["VSoS", 162],
				description : desc([
					"When I cast Cryptogram, its limit is 20 instead of 8; only the recipient can read the message"
				]),
				prereqeval : function(v) { return isSpellUsed('cryptogram', true); },
				spellChanges : {
					"cryptogram" : {
						description : "Send a message up to 20 characters (incl. spaces) to known crea on same plane, 1/day; Only recip. can read the message",
						descriptionFull : "You send a small scroll with a short message to a creature of your choice. The recipient must be a creature known to you and also be on the same plane of existence as you. This scroll will hover in front of the recipient, drop into their pocket, or appear sitting on something nearby. The scroll’s message can be up to 20 characters long (spaces count as characters). You can send only one scroll to a single target each day. Only the target is able to read the message.",
						changes : "The character limit is now 20 instead of 8 and only the recipient can read the message."
					}
				}
			},
			"explosive cantrip" : {
				name : "Explosive Catrip",
				source : ["VSoS", 162],
				description	: desc([
					"When I deal fire dmg to a crea with a warmage cantrip, each crea within 5 ft of the target",
                    "except myself, Dex save or take half the fire damage dealt to the target.",
				]),
                usages : 1,
                recovery : "Turn"
			},
			"extended range" : {
				name : "Extended Range",
				source : ["VSoS", 162],
				description : desc([
					"My warmage cantrips that have a range of 5 ft or greater has its range doubled."
				]),
				calcChanges : {
					atkAdd : [
						function(fields, v) { 
                            // !v.isDC && v.isSpell && v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf('warmage') !== 1 && ((/melee/i).test(fields.description) || (/melee/).test(fields.Range))
							if(v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf("warmage") !== 1 && (((/\d+ ?(f.{0,2}t|m)/i.test(fields.Range)) && fields.Range.match(/\d+([.,]\d+)?/g) >= 5) || /melee/i.test(fields.Range))) {
								var rngNum = fields.Range.match(/\d+([.,]\d+)?/g);
                                if(/melee/i.test(fields.Range) && !rngNum) {
                                    fields.Range = 'Melee (10 ft)';
                                    return;
                                }
								var oChar = fields.Range.split(RegExp(rngNum.join('|')));
								fields.Range = '';
								rngNum.forEach(function (dR, idx) {
									fields.Range += (oChar[idx] ? oChar[idx] : '') + (parseFloat(dR.toString().replace(',', '.') * 2));
								});
								if (oChar.length > rngNum.length) {
									fields.Range += oChar[oChar.length - 1];
								};
								if (!v.rangeM) {
									v.rangeM = 2;
								} else {
									v.rangeM *= 2;
								}
							};
						},
						"My warmage cantrips that have a range of 5 ft or greater has its range doubled.",
						750
					],
					spellAdd : [
						function(spellKey, spellObj, spName) {
							if( !spellObj.psionic && spName === "warmage" && spellObj.level === 0 && /\d+([.,]\d+)?[\- ]?(f.{0,2}t|m)/i.test(spellObj.range) ) {
								var sRange = spellObj.range.match(/\d+([.,]\d+)?/g); 
								var oChar = spellObj.range.split(RegExp(sRange.join('|')));
								spellObj.range = '';
								sRange.forEach(function (dR, idx) {
									spellObj.range += (oChar[idx] ? oChar[idx] : '') + (parseFloat(dR.toString().replace(',', '.')) * 2);
								});	
								if (oChar.length > sRange.length) {
									spellObj.range += oChar[oChar.length - 1];
								};
								return true;
							};
						},
						"My warmage cantrips that have a range of 5 ft or greater has its range doubled.",
						750
					]
				}
			},
			"field medic" : {
				name : "Field Medic",
				source : ["VSoS", 162], 
				description : desc([
					"I learn spare the dying, and doesn't count towards the number of cantrips I know", 
                    "When I use this on a crea that has 0 hp, it gains 1 hp + temp hp equal to my warmage level",
                    "This lasts for 1 minute; a crea must finish a long rest before benefiting from this again"
				]),
				submenu : "[House of Bishops]",
				prereqeval : function(v) { return (/\bpawns|bishops\b/).test(classes.known.warmage.subclass); },
				spellcastingBonus : {
					name : "Field Medic",
					spells : ["spare the dying"],
					selection : ["spare the dying"]
				},
				spellChanges : {
					"spare the dying" : {
						description : "1 living creature with 0 current HP regain 1 HP + warmage level temp HP",
						descriptionFull : "You touch a living creature that has 0 hit points. The creature regains 1 hit point + my warmage level in temporary hit points which last for 1 minute. A creature that regains hit points this way can't do so again until it finishes a long rest. This spell has no effect on undead or constructs.",
						changes : "A creature with 0 current HP now regains 1 HP + my warmage level in temp HP"
					}
				}
			},
			"flexible range" : {
				name : "Flexible Range",
				source : ["VSoS", 162], 
				description : desc([
                    "I don't gain disadv. on ranged spell attacks from being w/in 5 ft of a hostile crea",
                    "My warmage melee spell attacks have their ranges increased by 10 ft",
				]),
				// Works thanks to the help from joost 
				calcChanges : {
					atkCalc : [
						function(fields, v, output) {  
							if( !v.isDC && v.isSpell && v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf('warmage') !== 1 && ((/melee/i).test(fields.Description) || (/melee/).test(fields.Range))) { 
								var sRange = fields.Range.match(/\d+([.,]\d+)?/g);  // Handles special cases like thorn whip or other 'ranged' melee spells
                                if (/melee/i.test(fields.Range) && !sRange) {
                                    fields.Range = "Melee (15 ft)";
                                    return;
                                }
								var oChar = fields.Range.split(RegExp(sRange.join('|')));
								fields.Range = '';
								sRange.forEach(function (dR, idx) {
									fields.Range += (oChar[idx] ? oChar[idx] : '') + (parseFloat(dR.toString().replace(',', '.') + 10));
								});
								if (oChar.length > sRange.length) {
									fields.Range += oChar[oChar.length - 1];
								}; 
								//Left out the metric if statements, if this is an issue, I can add these back
							};
						},
						"Being within 5 ft of a hostile creature doesn't impose disadvantage on my ranged spell attack rolls. Additionally, my warmage cantrip melee spell attacks has its range increased by 10 ft",
                        700
					],
					spellAdd : [
						function(spellKey, spellObj, spName) {
							if( !spellObj.psionic && spName === "warmage" && spellObj.level === 0 && /melee/i.test(spellObj.description + spellObj.descriptionFull) && /\d+([.,]\d+)?[\- ]?(f.{0,2}t|m)/i.test(spellObj.range) ) {
								var sRange = spellObj.range.match(/\d+([.,]\d+)?/g); 
								var oChar = spellObj.range.split(RegExp(sRange.join('|')));
								spellObj.range = '';
								sRange.forEach(function (dR, idx) {
									spellObj.range += (oChar[idx] ? oChar[idx] : '') + (parseFloat(dR.toString().replace(',', '.')) + 10);
								});
								if (oChar.length > sRange.length) {
									spellObj.range += oChar[oChar.length - 1];
								};
								return true;
							};
						},
						"Being within 5 ft of a hostile creature doesn't impose disadvantage on my ranged spell attack rolls. Additionally, my warmage cantrip melee spell attacks has its range increased by 10 ft",
						700
					],
				}
			},
			"fold (prereq: level 10)" : {
				name : "Fold",
				source : ["VSoS", 162],
				submenu : "[House of Cards]",
				description : desc([
					"When an atk hits me, I can use my Deck of Fate to play my entire hand", 
                    "When I do so, I can cast shield without using a spell slot"
				]),
				usages : 1,
				recovery : "long rest",
                spellcastingBonus : [{
                    name : "Fold",
                    spells : ["shield"],
                    selection : ["shield"],
                    times : 1,
                    firstCol : "oncelr"
                }],
				prereqeval : function(v) { return classes.known.warmage.level >= 10 && (/\bpawns|cards\b/).test(classes.known.warmage.subclass); },
				action : ["reaction",""]
			},
			"gamble (prereq: cheat, house of dice or house of cards)" : {
				name : "Gamble",
				source : ["VSoS", 162],
				description : desc([
                    "I am always under the effects of the cheat cantrip",
                    "I can reroll any atk roll, ability check, or saving throw",
                    "I can do this once per short or long rest",
				]),
				usages : 1,
				recovery : "short rest",
				prereqeval : function(v) { return isSpellUsed('cheat', true) && (/\bpawns|dice|cards\b/).test(classes.known.warmage.subclass); },
			},
			"infinite variation (prereq: prestidigitation)" : {
				name : "Infinite Variation",
				source : ["VSoS", 162],
				description : desc([
                    "I can emulate the effects of another non-damaging cantrip when I use prestidigitation",
                    "I roll an DC 15 Arcana check or this spell fails",
				]),
                spellcastingBonus : [{
                    name : "Infinite Variation",
                    spells : ["prestidigitation"],
                    selection : ["prestidigitation"],
                    times : 1
                }],
				prereqeval : function(v) { return isSpellUsed('prestidigitation', true); },
                spellChanges : {
                    "prestidigitation" : {
                        description : "DC 15 Arcana check to emulate effects from non-damaging cantrip",
                        descriptionFull : "You emulate the effects from another non-damaging cantrip. To do this, you must roll a DC 15 Arcana check or the spell fails",
                        changes : "I can emulate the effects from another non-damaging cantrip, but must roll a DC 15 Arcana check or the spell fails"
                    }
                }
			},
			"icy cantrip" : {
				name : "Icy Cantrip",
				source : ["VSoS", 162],
				description : desc([
                    "When I deal cold dmg to a crea with a warmage cantrip; it gain a penalty to its next atk roll",
                    "The penalty is equal to half my warmage level (rounded down)"
				]),
				calcChanges : {
					atkAdd : [
						function( fields, v ) {
							if( classes.known.warmage && v.isSpell && (/cold/i).test(fields.Damage_Type) && v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf("warmage") !== 1) {
								fields.Description += (fields.Description ? '; ' : '') + '-' + Math.floor(classes.known.warmage.level/2) + ' on targets next atk roll';
							}
						}	
					]
				},
                usages : 1,
                recovery : "Turn"
			},
			"knight's aegis (prereq: level 10, force buckler)" : {
				name : "Knight's Aegis ",
				source : ["VSoS", 162],
				submenu : "[House of Knights]",
				description : desc([
					"When I cast force buckler, I can concentrate on it for 1 min.",
                    "The spell doesn't end early if I am hit by an attack."
				]),
				spellChanges : {
					"force buckler" : {
						description : "My AC gains +2 as if wielding a shield; doesn't end early if hit by an attack",
						descriptionFull : "You summon a translucent yet visible field of force, which springs forth from the prepared gauntlet. While concentrating on this cantrip, this shield grants you a +2 bonus to your Armor Class, as if you were wielding a shield. This spell does not ends early if you are hit by an attack.",
						duration : "Conc, 1 min",
						changes : "Being hit doesn't end this cantrip early. I can now concentrate on this cantrip."
					}
				},
				prereqeval : function (v) { return isSpellUsed('force buckler', true) && classes.known.warmage.level >= 10 && (/\bpawns|knights\b/).test(classes.known.warmage.subclass); }
			},
			"leading edge tactics" : {
				name : "Leading Edge Tactics",
				source : ["VSoS", 163],
				submenu : "[House of Lancers]",
				description : desc([
					"If a crea atks me on the first round of combat, and I'm not surprised, it has disadv on the atk"
				]),
				prereqeval : function (v) { return (/\bpawns|lancers\b/).test(classes.known.warmage.subclass); }
			},
			"lieutenant's demand (prereq: level 10)" : {
				name : "Lieutenant's Demand",
				source : ["VSoS", 163],
				submenu : "[House of Kings]",
				description : desc([
					"I can cast the command spell at will without expending a spell slot."
				]),
				action : ["action", "Command"],
				spellcastingBonus : [{
					name : "Liutenant's Demand",
					spells : ["command"],
					selection : ["command"],
					firstCol : "atwill"
				}],
				prereqeval : function (v) { return classes.known.warmage.level >= 10 && (/\bpawns|kings\b/).test(classes.known.warmage.subclass); }
			},
			"mage hand knack (prereq: mage hand)" : {
				name : "Mage Hand Knack",
				source : ["VSoS", 163],
				description : desc([
					"When I cast mage hand, and as a bonus action each turn, I can choose one of the following:",
                    "\u2022 Press: A crea < Huge w/in 5 ft spends 1 extra ft of movement per ft it moves",
                    "\u2022 Punch: Melee spell atk vs a crea or obj; 1d6 force dmg", 
                    "\u2022 Seize: A crea < Medium grappled; Athletics/Acrobatics check (its choice) to escape",
                    "      " + "Crea grappled until they use action to break it or spell ends",
                    "An effect ends if I choose another effect, or as a bonus action"
				]),
				prereqeval : function(v) { return isSpellUsed('mage hand', true); },
				spellChanges : {
					"mage hand" : {
                        description : "On cast, and as a bonus action each turn, I choose Press, Punch, or Sieze",
						descriptionFull : "Create invisible spectral hand for simple tasks or carry up to 10 lb; 1 a to control; can't have multiples; Upon casting, and Upon casting, and as a bonus action on subsequent turns, You can choose one of the following effects: Press, Punch, Seize.\n   " + toUni("Press") + ". The hand pushes against a Large or smaller creature within 5 feet of it. Choose a direction away from that creature. Every foot of movement in that direction while the hand is pressing against it costs the creature 1 extra foot of movement. The hand continues to push against the target until the spell ends or you use your bonus action to use a different effect with the hand.\n   " + toUni("Punch") + ". The hand strikes one creature or object within 5 feet of it. Make a melee spell attack for the hand. On a hit, the target takes 1d6 force damage.\n   " + toUni("Seize") + ". The hand grabs a Small or smaller creature and attempts to grapple it. The creature must succeed on a Strength (Athletics) or Dexterity (Acrobatics) check (its choice) against your spell save DC or be grappled by the hand. The hand continues to grapple the target until the target uses an action to break the grapple on its turn, the spell ends, or you use your bonus action to use a different effect with the hand.",
						changes : "Upon casting, and as a bonus action on subsequent turns, I can choose one of the following effects: Press, Punch, Seize. See Notes page."
					}
				},
				action : ["bonus action",""]
			},
			"minor shadow illusion (prereq: minor illusion)" : {
				name : "Minor Shadow Illusion",
				source : ["VSoS", 163],
				description : desc([
                    "When I use minor illusion to create an obj, I fill it with shadowstuff appearing real",
                    "This must be <5 ft cube. It's AC is 10, 5 hp, and weighs 5 lbs. Only 1 obj at a time",
                    "If the obj can deal dmg, crea w/in the cube must make an Int save or take dmg",
                    "The dmg type depends on the obj. This dmg can't trigger Warmage Edge or any tricks",
                    "While the obj exists, I must maintain concentration"
				]),
                additional : levels.map(function(n) { 
                    return (n < 5 ? 1 : n < 11 ? 2 : n < 17 ? 3 : 4) + "d6";
                }),
				prereqeval : function(v) { return isSpellUsed('minor illusion', true); },
				spellChanges : {
					"minor illusion" : {
						descriptionFull : "You create a sound or an image of an object within range that lasts for the duration. The illusion also ends if you dismiss it as an action or cast this spell again." + "\n   " + "If you create a sound, its volume can range from a whisper to a scream. It can be your voice, someone else's voice, a lion's roar, a beating of drums, or any other sound you choose. The sound continues unabated throughout the duration, or you can make discrete sounds at different times before the spell ends." + "\n   " + "When you create the image of an object in an unoccupied space, you can fill it with fibers of shadowstuff to become partially real. This image must not be larger than a 5 ft cube. It has AC 10 and 5 hit points, and it weighs 5lbs. Only one of these can exist at a time, and while it exists it requires concentration. This illusion can't replicate a creature, but it can deal damage to a creature within its 5 ft cube. If the illusion is an object that can deal damage, a creature that enters the object's 5 ft cube or begins its turn there must make an Intelligence saving throw. On a failed save, the creature takes 1d6 damge of a type appropriate to the illusion. This damage increases with my warmage level. This damage can't trigger Warmage Edge or any warmage tricks." + "\n   " + "If a creature uses its action to examine the sound or image, the creature can determine that it is an illusion with a successful Intelligence (Investigation) check against your spell save DC. If a creature discerns the illusion for what it is, the illusion becomes faint to the creature.",
						descriptionCantripDie : "5ft cube; creature enters or starts its turn in illus. save or 'CD'd6 Force dmg",
						changes : "When you create the image of an object in an unoccupied space, you can fill it with fibers of shadowstuff to become partially real. This image must not be larger than a 5 ft cube. It has AC 10 and 5 hit points, and it weighs 5lbs. Only one of these can exist at a time, and while it exists it requires concentration. This illusion can't replicate a creature, but it can deal damage to a creature within its 5 ft cube. If the illusion is an object that can deal damage, a creature that enters the object's 5 ft cube or begins its turn there must make an Intelligence saving throw. On a failed save, the creature takes 1d6 damge of a type appropriate to the illusion. This damage increases with my warmage level. This damage can't trigger Warmage Edge or any warmage tricks.",
					}
				},
			},
			"mystical armor" : {
				name : "Mystical Armor",
				source : ["VSoS", 163],
				description : desc([
					"I can cast mage armor on myself at will w/out a spell slot or spell components."
				]),
				spellcastingBonus : {
					name : "Mystical Armor",
					spells : ["mage armor"],
					selection : ["mage armor"],
					firstCol : "atwill"
				},
				spellChanges : {
					"mage armor" : {
						description : "my ac becomes 13 + Dex mod for the duration; spell ends if I don armor, or as an action",
                        descriptionFull : "If you are not wearing armor, a protective magical force surrounds you until the spell ends. Your base AC becomes 13 + your Dexterity modifier. The spell ends if you don armor or if you dismiss the spell as an action.",
                        compMaterial : "",
						components : "",
                        range : "Self",
						changes : "I can cast mage armor on myself at will without expending a spell slot or spell components"
					}
				}
			},
			"mystical athlete (prereq: quickstep or springheel)" : {
				name : "Mystical Athlete",
				source : ["VSoS", 163],
				description : desc([
                    "If I cast quickstep or springheeel, the bonus becomes 20 ft instead of 10 ft",
                    "If I know both cantrips, I can cast both of them as a bonus action",
				]),
				prereqeval : function(v) { return isSpellUsed('quickstep', true) || isSpellUsed('springheel', true); },
				spellChanges : {
					"quickstep" : {
						description : "My walking speed increases by 20 ft until the start of my next turn",
						descriptionFull : "You call upon your inner reserves to give you a brief flash of speed. When you cast this spell, your walking speed increases by 20 feet until the start of your next turn.",
						changes : "When I cast this cantrip, my speed increases by 20 ft instead of 10. If I also know springheel, I can cast both using the same bonus action"
					},
					"springheel" : {
						description : "Jump speed increases by 20 ft., and can running high or long jump w/o running start",
						descriptionFull : "You flood magic into your legs, allowing you to bound high into the air from a standstill. When you cast this spell, your jump distance increases 20 feet until the start of your next turn, and you can make a running high jump or a running long jump without a running start.",
						changes : "When I cast this cantrip, my jump increases by 20 ft instead of 10. If I also know quickstep, I can cast both using the same bonus action"
					}
				}
			},
			"mystical weaponmaster (prereq: force weapon or magic daggers)" : {
				name : "Mystical Weaponmaster",
				source : ["VSoS", 163],
				description : desc([
                    "I can reroll a 1 on an atk roll using force weapon or magic daggers, but must use the new roll",
				]),
				prereqeval : function(v) { return isSpellUsed('force weapon', true) || isSpellUsed('magic daggers', true); },
                usages : 1,
                recovery : "Turn"
			},
			"mystical vision" : {
				name : "Mystical Vision",
				source : ["VSoS", 163],
				description : desc([
					"I can cast the detect magic spell at will w/out expending a spell slot."
				]),
				spellcastingBonus : {
					name : "Mystical Vision",
					spells : ["detect magic"],
					selection : ["detect magic"],
					firstCol : "atwill"
				}
			},
			"phantom hookshot (prereq: phantom grapnel)" : {
				name : "Phantom Hookshot (prereq: phantom grapnel)",
				source : ["VSoS", 163],
				description : desc([
					"I can cast phantom grapnel as a bonus action, but the range is reduced to 15 ft.",
                    "Creatures pulled an additional 10 ft by this"
				]),
				prereqeval : function(v) { return isSpellUsed('phantom grapnel', true); },
				spellChanges : {
					"phantom grapnel" : {
						description : "Move to Huge or larger crea or empty space, or pull Large or smaller crea 20 ft. to me on failed save",
                        range : "15 ft",
						descriptionFull : "You conjure a chain and hook made of magical force, which you propel at a creature or unoccupied space you can see within range. When you target a space or a creature of Huge size or larger, your grapnel pulls you to that target in a straight line. You provoke opportunity attacks for this movement as normal. When you target a creature of Large size or smaller, you pull the target up to 20 feet towards you. A creature can make a Strength saving throw to resist this movement.",
						changes : "You can now cast this as a bonus action. Doing so, the range is reduced by 15 ft and creatures are pulled an additional 10 ft."
					}
				}
			},
			"rapid fortification (prereq: mending)" : {
				name : "Rapid Fortification",
				source : ["VSoS", 163],
				description : desc([ 		
					"I can cast mending as a bonus action, or choose one of the following effects:",
                    "\u2022 A nonmagical obj <10ft cube, or <1ft if complex, to pristine condition; needs half of its parts",
                    "\u2022 Create simple fortifications <10 ft cube; must have materials present"
				]),
				prereqeval : function(v) { return isSpellUsed('mending', true); },
				spellChanges : {
					"mending" : {
						description : "I can cast mending as a bonus action, or choose to restore/create",
						descriptionFull : "I can cast mending as a bonus action, or I can choose one of the following. *Restore a single nonmagical object, such as a door, cart, or window, to pristine condition if at least half of its parts are present. This object can be no larger than 10 cubic feet, or 1 cubic foot if it exceptionally complex (such as a clock). *Create simple fortifications, such as sealing a door shut, adding wooden planks to a window, or building a short stone wall (no larger than 10 cubic feet). You must have the materials present to use this ability.",
						chages : "You can now restore a single nonmagical object if at least half of its parts are present and must not be larger than 10 cubic ft or 1 cubic ft if its complex. You can also create simple fortications (no larger than 10 cubic ft) and must have materials present while doing this."
					}
				}
			},
			"snake eyes (prereq: level 10)" : {
				name : "Snake Eyes",
				source : ["VSoS", 164],
				submenu : "[House of Dice]",
				description : desc([
					"If I roll a 1 or 2 on a Die of Fate, I keep the die instead of giving it to the GM"
				]),
				prereqeval : function(v) { return (/\bpawns|dice\b/).test(classes.known.warmage.subclass) && classes.known.warmage.level >= 10;}
			},
			"severe cantrip" : {
				name : "Severe Cantrip",
				source : ["VSoS", 164],
				description : desc([
                    "When a crea rolls a 1 on a save vs my warmage cantrips, it auto fails",
                    "It takes \xD72 the number of damage dice dealt by the spell",
                    "This only applies to the creature that rolled a 1 on the save"
				])
			},
			"signature focus (prereq: level 5)" : {
				name : "Signature Focus", 
				source : ["VSoS", 164],
				description : desc([
                    "On a long rest, I can place a sigil on a simple or martial wea; it becomes my focus",
                    "It's considered magical and gain the following benefits until I use this trick again",
					"\u2022 As a bonus action, I can call it to my hand, as long as its on the same plane of existence",
					"\u2022 I use my Int mod instead of Str or Dex to atk and dmg rolls",
                    "\u2022 Gain charges on long rest equal to Int mod (min 1); Spend 1 charge to deal +1d8 force dmg"
				]),
				prereqeval : function(v) { return classes.known.warmage.level >= 5; },
				action : ["bonus action", "Recall Signature Focus"],
				calcChanges : {
					atkAdd : [
						function (fields, v) {
							//not a spell; can include signature, focus, or sigil to help sheet automate, must be a simple weapon, changes dex/str to int if applicable.
							if (!v.isSpell && ((/\b(signature|focus|sigil)\b/i).test(v.WeaponTextName) && (/(simple|martial)/i).test(v.theWea.type)) && (fields.Mod === 1 || fields.Mod === 2) && What('Int Mod') > What(AbilityScores.abbreviations[fields.Mod - 1] + ' Mod')) {
								fields.Mod = 4;
							}
						},
						//signature, focus, and sigil aren't part of the normal features traits. This is added to help the sheet determine what is considered a "signature focus"
						"I can include 'signature', 'focus', or 'sigil' as part of the name for a simple weapon to act as my Signature Focus. I can use my Intelligence Modifier instead of Strength or Dexterity for the attack and damage rolls for this weapon."
					]
				},
                limfeaname : "Focus Charges",
				usages : "Int mod per ",
                usagescalc : "event.value = Math.max(What('Int Mod'), 1);",
				recovery : "long rest"
			},
			"silent cantrip" : {
				name : "Silent Cantrip",
				source : [["VSoS", 164]],
				description : desc([
					"When I deal thunder dmg to a hostile crea with a warmage cantrip, I can create a 15 ft sphere",
                    "of magical silence (as per the silence spell), centered on myself or the creature (my choice)",
                    "This lasts until the start of my next turn"
				]),
                usages : 1,
                recovery : "Turn"
			},
			"split fire (prereq: level 5)" : {
				name : "Split Fire",
				source : [["VSoS", 164]],
				prereqeval : function (v) { return classes.known.warmage.level >= 5; },
				description : desc([
                    "When I cast a warmage cantrip with only a single atk roll; I can target multiple creatures",
                    "The number of targets equals the number of damage dice of the spell",
                    "I roll the dmg as usual, but split the dmg dice between each target (min 1)",
				])
			},
			"static cantrip" : {
				name : "Static Cantrip",
				source : [["VSoS", 164]],
				description : desc([
                    "When I deal lightning dmg to a hostile crea with a warmage cantrip, I can be charged",
                    "While charged, I can use my rea. when I take dmg from a visible crea w/in 5 ft to dmg it",
                    "The dmg dealt equals half of my warmage level"
				]),
				action : ["reaction",""]
			},
			"unerring strike (prereq: level 10, true strike)" : {
				name : "Unerring Strike",
				source : [["VSoS", 164]],
				prereqeval : function (v) {return classes.known.warmage.level >= 10 && isSpellUsed('true strike', true);},
				description : desc([
                    "When I use true strike, I can concentrate on it for a number of rounds equal to my Int mod",
                    "I gain adv. on the first atk roll vs. the target on each of my turns while concentrating",
				]),
				spellChanges : {
					"true strike" : {
						description : "1 crea; Conc. equals Int mod number of rounds; Adv. on first attack roll every turn",
						changes : "I can concerntrate on it for a number of rounds equal to my Intelligence modifer. I gain advantage on the first attack roll I make against the target on each of my turns while maintaining concentration."
					}
				}
			}
		},
        "subclassfeature3" : {
            name : "Warmage House",
            source : ["VSoS", 160],
            minlevel : 3,
            description : desc([
                "I can choose a Warmage House by entering it into the \"Class Field\""
            ])
        },
		"arcane surge" : {
			name : "Arcane Surge",
			source : ["VSoS", 160],
			minlevel : 5,
			description : desc([
                "On my turn when I deal dmg with a warmage cantrip, I can deal 2\xD7 the number of dmg dice",
			]),
			usages : levels.map(function(v) {return v < 11 ? 1 : 2;}),
			recovery : "short rest"
		},
		"tactical insight" : {
			name : "Tactical Insight",
			source : ["VSoS", 160],
			minlevel : 6,
			description : desc([
				"I can add my Int mod to saves against spells and other magical effects that deal dmg"
			])
		},
		"stategic deflection" : {
			name : "Strategic Deflection",
			source : ["VSoS", 160],
			minlevel : 14,
			description : desc([
                "If I succeed a save vs. crea's spell, I can choose a crea w/in the spell's range or w/in 30 ft",
                "They must make the save vs. the spell casted on me using my spell save DC",
                "They suffer the spell's effects on a fail; as if I was the caster, and they're the original target"
			]),
			action : ["reaction",""],
			usages : 1,
			recovery : "short rest"
		},
		"master warmage" : {
			name : "Master Warmage",
			source : ["VSoS", 160],
			minlevel : 20,
			description : desc([
                "I deal an extra dmg die with a cantrip if it has 4 dmg dice",
                "I deal an extra atk with a cantrip if it makes 4 atks"
			]),
			calcChanges : {
                atkAdd : [
                    function(fields,v) {
                        if(classes.known.warmage && classes.known.warmage.level > 19 && v.isSpell && v.thisWeapon[3] && SpellsList[v.thisWeapon[3]].level === 0 && v.thisWeapon[4].indexOf('warmage') !== -1 && fields.Damage_Die.match(/\b(\d+)d(\d+)\b/i)) {
                            var oDie = fields.Damage_Die.match(/\b(\d+)d(\d+)\b/i);
                            fields.Damge_Die.replace((/\b(\d+)d(\d+)\b/i), oDie[1]+1 + "d" + oDie[2])
                        }
                    }
                ]
            }
		}
    }
};

// * house of bishops warmage subclass
AddSubClass("warmage", "house of bishops", {
	regExpSearch : /^(?=.*house)(?=.*bishops).*$/i,
	subname : "House of Bishops",
	fullname : "House of Bishops",
	source : [["VSoS", 165]],
    spellcastingTable : [
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 0
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 1
        [0, 0, 0, 0, 0, 0, 0, 0, 0], // level 2
        [2, 0, 0, 0, 0, 0, 0, 0, 0], // level 3
        [3, 0, 0, 0, 0, 0, 0, 0, 0], // level 4
        [3, 0, 0, 0, 0, 0, 0, 0, 0], // level 5
        [3, 0, 0, 0, 0, 0, 0, 0, 0], // level 6
        [4, 2, 0, 0, 0, 0, 0, 0, 0], // level 7
        [4, 2, 0, 0, 0, 0, 0, 0, 0], // level 8
        [4, 2, 0, 0, 0, 0, 0, 0, 0], // level 9
        [4, 3, 0, 0, 0, 0, 0, 0, 0], // level 10
        [4, 3, 0, 0, 0, 0, 0, 0, 0], // level 11
        [4, 3, 0, 0, 0, 0, 0, 0, 0], // level 12
        [4, 3, 2, 0, 0, 0, 0, 0, 0], // level 13
        [4, 3, 2, 0, 0, 0, 0, 0, 0], // level 14
        [4, 3, 2, 0, 0, 0, 0, 0, 0], // level 15
        [4, 3, 3, 0, 0, 0, 0, 0, 0], // level 16
        [4, 3, 3, 0, 0, 0, 0, 0, 0], // level 17
        [4, 3, 3, 0, 0, 0, 0, 0, 0], // level 18
        [4, 3, 3, 1, 0, 0, 0, 0, 0], // level 19
        [4, 3, 3, 1, 0, 0, 0, 0, 0]  // level 20
    ],
    spellcastingKnown : {
        cantrips : [4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10],
		spells : [0, 0, 2, 3, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9]
    },
    spellcastingList : {
        "class" : "warmage",
        level : [0, 4]
    },
	features : {
		"subclassfeature3" : {
			name : "Spellcasting",
			source : ["VSoS", 165],
			minlevel : 3,
			description : desc([
				"I can cast known wizard spells, using Intelligence as my spellcasting ability.",
				"I can add dmg to my warmage spells of 1st level or higher using my Warmage Edge feature",
                "I can't add Warmage Edge damage to the magic missile spell."
			]),
			additional : levels.map( function(n) {
				return (n < 3 ? "" : n < 4 ? 3 : n < 7 ? 4 : n < 8 ? 5 : n < 10 ? 6 : n < 11 ? 7 : n < 13 ? 8 : n < 14 ? 9 : n < 16 ? 10 : n < 19 ? 11 : n < 20 ? 12 : 13) + " spells known";
			}),
            calcChanges : {
                spellList : [
                    function(spList, spName, spType) {
                        if (spName !== "warmage" || spType.indexOf("bonus") !== -1) return;
                        spList.extraspells = spList.extraspells.concat(CreateSpellList({"class" : "wizard", level : [1,4], school : ["Conj", "Evoc"]}, true, false, false));
                    },
                ]
            },
			spellcastingBonus : [{ // the spells gained at level 3, 8, 14, 20
				name : "From any school",
				"class" : "wizard",
				times : [0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4],
				level : [1, 4]
			}]
		},
		"subclassfeature3.1" : {
            name : "Arcane Study",
            source : ["VSoS", 166],
            minlevel : 3,
            description : desc([
                "I'm proficient with two of the following: Arcana, History, Investigation, Medicine, or Religion"
            ]),
            skillstxt : "Choose two of the following skills: Arcana, History, Investigation, Medicine, or Religion.",
        },
        "subclassfeature7" : {
            name : "Mystical Companion",
            source : ["VSoS", 166],
            minlevel : 7,
			description : desc([
                "I can cast find familiar as a ritual; I can choose Imp, Pseudodragon, Quasit, or Sprite",
			]),
            spellcastingBonus : [{
                name : "Mystical Companion",
                spells : ["find familiar"],
                selection : ["find familiar"],
                firstCol : "(R)"
            }]
        },
		"subclassfeature10" : {
			name : "Siege Casting",
			source : ["VSoS", 166],
			minlevel : 10,
			description : desc([
                "My warmage spells deals 2\xD7 to obj and structures; up to 2\xD7 range if it's a spell attack roll",
			])
		},
		"subclassfeature15" : {
			name : "Spell Sculpting",
			source : ["VSoS", 166],
			minlevel : 15,
			description : desc([
                "If I cast a warmage spell affecting other visible crea(s), I choose crea(s) up to my Int mod",
                "They auto succeed on their save; taking no dmg if they would take half on a success"
			]),
		},
		"subclassfeature18" : {
			name : "Arcane Dominance",
			source : ["VSoS", 166],
			minlevel : 18,
			description : desc([
                "I expend spell slots with a combined level of 5> to regain an expended us of my Arcane Surge",
				"I can expend a number of spell slots with a combined level of 6 or more to regain an expended use of my Arcane Surge."
			]),
			action : ["bonus action", ""]
		}
	}
});

// * house of cards warmage subclass
AddSubClass("warmage", "house of cards", {
	regExpSearch : /^(?=.*house)(?=.*cards).*$/i,
	subname : "House of Cards",
	fullname : "House of Cards",
	source : [["VSoS", 166]],
	features : {
		"subclassfeature3" : {
			name : "Bluff",
			source : [["VSoS", 166]],
			minlevel : 3,
			description : desc([
                "I gain proficiency with Deception and playing cards",
                "I can use my Int instead of Cha for Deception checks"
			]),
            addMod : { type : "skill", field : "Deception", mod : "max(Int-Cha|0)", text : "I use my Intelligence modifier for Deception instead of Charisma." },
            toolProfs : ["Deck of Cards"],
		},
		"subclassfeature3.1" : {
			name : "Deck of Fate",
			source : [["VSoS", 166]],
			minlevel : 3,
			description : desc([
                "I gain a magical deck called the Deck of Fate, shuffling it when I roll initiative, drawing 5 cards",
                "When I atk a hostile crea, I can use a bonus action to play one or more cards (see 3rd page)",
                "They must exactly match a result; dealing dmg or granting an effect on a match",
                "They go to the bottom of the deck, and I draw until I have 5 cards again"
			]),
			action : ["bonus action"," (one or more cards)"],
			toNotesPage : [{
				name : "Hands Table",
				page3notes : true,
				source : [["VSoS", 167]],
				note : desc([
					"\u2022 Straight (Any 5 sequential cards of any suit): +12 damage",
					"\u2022 Flush (Any 5 cards in the same suit in any order): +10 damage",
					"\u2022 Three of a Kind (Any 3 of the same number): +6 damage",
					"\u2022 Pair (Any 2 of the same number): +2 damage",
					"\u2022 Hearts (Any 2 hearts): +temp HP equal to my Int mod",
					"\u2022 Spades (Any 2 spades): Increase speed by 10 ft until the start of my next turn",
					"\u2022 Diamonds (Any 2 diamonds): +1 to my AC until the start of my next turn",
					"\u2022 Clubs (Any 2 clubs): +1 to my saving throws until the start of my next turn"
				])
			}]
		},
		"subclassfeature7" : {
			name : "High Stakes",
			source : [["VSoS", 166]],
			minlevel : 7,
			description : desc([
                "On my turn, I place cards from hand to the bottom of the desk. losing 2 hp per card",
                "I draw until I have 5 cards again"
			])
		},
		"subclassfeature10" : {
			name : "Dealer's Choice",
			source : [["VSoS", 166]],
			minlevel : 10,
			description : desc([
                "As a bonus action, GM can pick one of the following effects:",
				"\u2022 I gain resistance to all damage until the end of my next turn",
				"\u2022 I teleport to an unoccupied space of my choice I can see within 60 ft of me",
				"\u2022 I vanish into a safe demiplane until the start of my next turn, returning from where I stood"
			]),
			action : ["bonus action", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature15" : {
			name : "Card Reading",
			source : [["VSoS", 166]],
			minlevel : 15,
			description : desc([
                "When I draw from the Deck of Fate, I can pick a suit and check the top of the desk",
                "If I'm right, I can take the Dash, Disengage, or Use and Object action as part of the draw"
			]),
			action : ["bonus action", " (w/Deck of Fate)"],
            usages : 1,
            recovery : "Turn"
		},
		"subclassfeature18" : {
			name : "Ace in the Hole",
			source : [["VSoS", 167]],
			minlevel : 18,
			description : desc([
                "When I draw one or more cards from my deck, I draw 2\xD7 as many",
                "I put half the cards drawn in the bottom and the other half in my hand"
			])
		}
	}
});

// * house of bishops warmage subclass
AddSubClass("warmage", "house of dice", {
	regExpSearch : /^(?=.*house)(?=.*dice).*$/i,
	subname : "House of Dice",
	fullname : "House of Dice",
	source : [["VSoS", 167]],
	features : {
		"subclassfeature3" : {
			name : "Bonus Proficiencies",
			source : [["VSoS", 167]],
			minlevel :3,
			description : desc([
				"I gain proficiency in Sleight of Hand and with the Dice Set"
			]),
			toolProfs : ["Dice Set"],
			skills : ["Sleight of Hand"],
		},
		"subclassfeature3.1" : {
			name : "Dice of Fate",
			source : [["VSoS", 167]],
			minlevel : 3,
			description : desc([
                "I gain 4 Dice of Fate; using one to add to an ability check, atk roll, save, or dmg roll",
                "I can use it after the roll, but before the GM determine's the outcome; It then goes to the GM",
                "They can use it on a roll w/ an NPC or Monster; returning to me after they use it, and so forth",
                "I regain all dice, even if the GM has them; I gain 2 more at 7th level to use w/ warmage spells",
                "I can add 2 dice instead of 1 to my warmage spell dmg rolls"
			]),
			extraLimitedFeatures : [{
				name : "Dice of Fate",
				usages : "4 at level 3, +2 at level 7",
				usagescalc : "event.value = classes.known.warmage.level < 7 ? 4 : 6;",
				additional : 'd6',
				recovery : "long rest",
			}]
		},
		"subclassfeature3.2" : {
			name : "Chaos Roll",
			source : [["VSoS", 167]],
			minlevel : 3,
			description : desc([
                "I can use 2 Dice of Fate to create an effect of chaotic energy (see 3rd page notes)",
			]),
			toNotesPage : [{
				name : "Chaos Rolls Table",
				page3notes : true,
				source : [["VSoS", 167]],
				note : desc([
					"\u2022  2: I cast fireball centered on me",
					"\u2022  3: My AC is reduced by 2 until the start of my next turn",
					"\u2022  4: I fall prone",
                    "\u2022  5: Creas. w/in 60 ft, not me, speak in a nonsense language for 1 min; Can't cast verbal spells",
                    "\u2022  6: A 5 ft rad sphere is heavily obscured w/in 60 ft of me until the start of my next turn",
					"\u2022  7: I gain 7 temp HP and keep the Dice of Fate instead of giving them to the GM",
					"\u2022  8: I become invisible until the end of my next turn, as per invisibility",
                    "\u2022  9: Random obj w/in 60 ft explodes; No dmg to me or allies; 3d6 fire dmg to GM chosen crea",
                    "\u2022 10: I teleport to a visible place w/in 60 ft; Creas w/in 5 ft of me, Dex save or 2d6 fore dmg",
                    "\u2022 11: A visibile crea w/in 60 ft takes 4d6 necrotic dmg; I gain hp equal to the dmg dealt",
					"\u2022 12: I cast lightning bolt and can add the Dice of Fate to the damage roll",
				])
			}],
			action : ["action",""]
		},
		"subclassfeature7" : {
			name : "Loaded Dice",
			source : [["VSoS", 168]],
			minlevel : 7,
			description : desc([
                "When I roll a die, I can flip it upside down",
			]),
			usages : 1,
			recovery : "Turn",
		},
		"subclassfeature10" : {
			name : "Twisted Fate",
			source : [["VSoS", 168]],
			minlevel : 10,
			description : desc([
                "If I make an atk or ability check w/disadv on my turn, I can use a die; 5-no disadv; 6-Gain adv",
			]),
			action : ["bonus action", ""]
		},
		"subclassfeature15" : {
			name : "Roll the Bones",
			source : [["VSoS", 168]],
			minlevel : 15,
			description : desc([
                "When I take dmg from a visible crea, I can use 2 dice to make a Chaos Roll"
			]),
			action : ["reaction", ""]
		},
		"subclassfeature18" : {
			name : "Steal Luck",
			source : [["VSoS", 168]],
			minlevel : 18,
			description : desc([
				"When I roll initiative, roll a d6. I steal that many Dice of Fate back from the GM."
			])
		}
	}
});

// * house of kings warmage subclass
AddSubClass("warmage", "house of kings", {
	regExpSearch : /^(?=.*house)(?=.*kings).*$/i,
	subname : "House of Kings",
	fullname : "House of Kings",
	source : [["VSoS", 168]],
	features : {
		"subclassfeature3" : {
			name : "Bonus Proficiency",
			source : [["VSoS", 168]],
			minlevel : 3,
			description : desc([
				"I am proficient w/ medium armor, battleaxes, lances, longswords, tridents, and warhammers"
			]),
			armorProfs :[true, true, false, false],
			weaponProfs : [true, false, ["battleaxes", "lances", "longswords", "tridents", "warhammers"]]
		},
		"subclassfeature3.1" : {
			name : "Battle Tactics",
			source : [["VSoS", 168]],
			minlevel : 3,
			description : desc([
                "I gain 2 battle dice. I can use a die to perform a stratagem (see 3rd page notes)",
                "I regain all uses on a short or long rest, or when I roll initiative",
			]),
			additional : levels.map( function(n) {
				return n < 13 ? "d8" : "d10";
			}),
            
            limefeaname : "Battle Die",
            usages : "",
            usagescalc : "event.value = classes.known.warmage.level < 7 ? 2 : classes.known.warmage.level < 19 ? 3 : 4;",
			recovery : "short rest",
			toNotesPage : [{
				name : "Stratagem",
				source : [["VSoS", 169]],
				page3notes : true,
				note : desc([
                    "\u2022 Blitz: Bonus action when I hit a crea w/atk, 1 ally w/in 60 ft that can see/hear me",
                    "  moves up to \u00BD its spd w/out provoking opportunity atks from the crea I targeted",
                    "\u2022 Check: Bonus action when I hit a crea w/atk; Target Cha save or rea to move \u00BD spd away",
                    "  crea immune to frightened auto succeeds",
                    "\u2022 Flash of Brilliance: When I roll an Int/Wis check, I can add it before GM determines outcome",
                    "\u2022 Gambit: When I hit a crea w/atk, next crea that atks them, not me, adds it to their atk roll",
                    "\u2022 Mystic Counsel: Bonus action, 1 audible/visible crea w/in 30 ft, can add it to next spell save",
                    "\u2022 Stalemate: Bonus action when I hit a crea w/atk, can't willingly move, unless disengages first",
                    "  This lasts until the end of its next turn",
				])
			}]
		},
		"subclassfeature7" : {
			name : "Leading from the Front",
			source : [["VSoS", 168]],
			minlevel : 7,
			description : desc([
				"Allies w/in 120 of me, includes myself, ignores nonmagical difficult terrain"
			])
		},
		"subclassfeature10" : {
			name : "Tactical Master",
			source : [["VSoS", 168]],
			minlevel : 10,
			description : desc([
				"Allies w/in 10 ft adds my Int mod to their saves vs spells and magical effects that deal dmg"
			]),
			savetxt : { text : ["Add Int mod to damaging spells and magical effects"] },
			additional : levels.map( function(n) {
				return n < 10 ? "" : "10-ft radius";
			})
		},
		"subclassfeature15" : {
			name : "Stratagem",
			source : [["VSoS", 168]],
			minlevel : 15,
			description : desc([
				"I learn the Checkmate stratagem."
			]),
			toNotesPage : [{
				name : "Stratagem: Checkmate",
				note : desc([
                    "\u2022 Checkmate: Bonus action when I hit a crea w/ wpn/spell atk, 1 visible/audible ally can atk",
                    "  Ally must be w/in reach of crea I hit, using its rea to atk w/ wpn/spell requiring an atk roll",
                    "  It adds the result of the die to the weapon's dmg roll"
 				]),
                amendTo : "Stratagem",
				page3notes : true,
			}],
			action : ["bonus action", "Checkmate (1 Battle Die)"],
		},
		"subclassfeature18" : {
			name : "Grandmaster", 
			source : [["VSoS", 169]],
			minlevel : 18,
			description : desc([
                "When I roll initiative, each visible/audible ally w/in 60 ft up to my Int mod gain a battle die",
                "It can expend it to add to an atk, ability check, save, or dmg roll; before the GM's outcome",
                "After 10 mins, they lose it, even if it isn't used. A crea can only have 1 die from this at a time",
			])
		}
	}
});

// * house of knights warmage subclass
AddSubClass("warmage", "house of knights", {
	regExpSearch : /^(?=.*house)(?=.*knights).*$/i,
	fullname : "House of Knights",
	subname : "House of Knights",
	source : [["VSoS", 169]],
	features : {
		"subclassfeature3" : {
			name : "Bonus Proficiency",
			source : [["VSoS", 169]],
			minlevel : 3,
			description : desc([
				"I gain proficiency with medium armor and martial weapons"
			]),
			armorProfs : [true, true, false, false],
			weaponProfs : [true, true]
		},
		"subclassfeature3.1" : {
			name : "Force Breastplate",
			source : [["VSoS", 169]],
			minlevel : 3,
			description : desc([
                "I can add my Int mod instead of Dex to AC w/ medium, light, or mage armor",
			]),
			//from Joost
			extraAC : [{ 
				mod : "Int-Dex",
				text : "I add my Intelligence modifier to AC instead of my Dexterity.",
				stopeval : function (v) { return v.mediumArmor || v.heavyArmor; } // for everything but medium and heavy armor
			}, {
				mod : "min(2|Int)-min(2|Dex)",
				text : "I add my Intelligence modifier (max 2) to AC instead of my Dexterity (max 2) when wearing medium armor.",
				stopeval : function (v) { return !v.mediumArmor; } // only for medium armor
			}]
		},
		"subclassfeature3.2" : {
			name : "Mystical Weapon",
			source : [["VSoS", 169]],
			minlevel : 3,
			description : desc([
                "I learn force weapon; I can draw any simple/martial weapon of my choice",
                "It's summoned into my hand and deals force dmg instead of its normal dmg",
                "When it leaves my hand, its stored in a pocket dimension until I summon it again",
			]),
			spellcastingBonus : [{
				name : "Mystical Weapon",
				spells : ["force weapon"],
				selection : ["force weapon"],
			}],
            calcChanges : {
                atkAdd : [
                    function(fields, v) { 
                        if(!v.isSpell && ((/\bforce\b/i).test(v.WeaponTextName) && (/(simple|martial)/i).test(v.theWea.type))) {
                            fields.Damage_Type = "Force"
                        }
                    }
                ]
            }
		},
		"subclassfeature7" : {
			name : "Flurry of Blades",
			source : [["VSoS", 169]],
			minlevel : 7,
			description : desc([
                "If I cast a cantrip w/ multiple atk rolls, I can make one additional atk with it",
			]),
			action : ["bonus action", "Flurry of Blades"]
		},
		"subclassfeature10" : {
			name : "Knight's Ward",
			source : [["VSoS", 170]],
			minlevel : 10,
			description : desc([
                "I gain temp hp equal to 2\xD7 my warmage level, which lasts for 1 min",
			]),
			usages : 1,
			recovery : "short rest",
			action : ["bonus action", ""]
		},
		"subclassfeature15" : {
			name : "Tactical Maneuver",
			source : [["VSoS", 170]],
			minlevel : 15,
			description : desc([
				"I can spend my whole movement to teleport up to half my spd to a visible space"
			])
		},
		"subclassfeature18" : {
			name : "Field of Blades",
			source : [["VSoS", 170]],
			minlevel : 18,
			description : desc([
                "I can atk up to 5 visible creas w/in 30 ft with a melee spell atk; 2d10 + Int mod force dmg",
			]),
            weaponOptions : [{
                regExpSearch : /field of blades/i,
                source : [["VSoS", 170]],
                name : "Field of Blades",
                damage : [2, 10, "Force"],
                type : "Cantrip",
                ability : 4,
                abilitytodamage : true,
                range : "30 ft",
                description : "5 visible targets w/in range; atk roll for each",
                special : true,
                selectNow : true
            }],
			action : ["action", ""]
		}
	}
});

// * house of lancers warmage subclass
AddSubClass("warmage", "house of lancers", {
	regExpSearch : /^(?=.*house)(?=.*lancers).*$/i,
	fullname : "House of Lancers",
	subname : "House of Lancers",
	source : [["VSoS", 170]],
	features : {
		"subclassfeature3" : {
			name : "Intercept Technique",
			source : [["VSoS", 170]],
			minlevel : 3,
			description : desc([
                "My AC becomes 10 + Dex + Int while w/out armor; or 13 + Dex + Int w/ mage armor",
                "If I wield a shield, I lose this benefit",
			]),
            armorOptions : [{
                regExpSearch : /intercept technique/i,
                name : "Intercept Technique",
                ac : "10+Int",
                source : [["VSoS", 170]],
                selectNow : true
            }],
			extraAC : [{ 
				mod : "max(Int-Dex|0)",
				text : "I can use my Intelligence modifier instead of Dexterity to AC while under the effects of mage armor.",
				stopeval : function (v) { return !(/^mage armou?r$/).test(CurrentArmour.known); }
			}]
		},
		"subclassfeature3.1" : { 
			name : "Hand-to-Hand Arcana",
			source : [["VSoS", 170]],
			minlevel : 3,
			description : desc([
                "I learn the secrets to unarmed combat and gain the following:",
				"\u2022 My unarmed strikes use Int instead of Str for atk and dmg rolls",
				"\u2022 The dmg becomes a d6, unless already higher",
				"\u2022 My unarmed strikes count as melee weapons for the purposes of warmage spells",
                "\u2022 I can make an unarmed strike as a bonus action; Must atk w/unarmed strike as an action"
			]),
            action : [["bonus action", " (Unarmed Strike)"]],
			calcChanges : {
				atkAdd : [
					function( fields, v ) {
                        if(v.baseWeaponName == "unarmed strike") {
                            fields.Proficiency = true;
                        }
                        if(v.baseWeaponName == "unarmed strike" && What('Int Mod') > What(AbilityScores.abbreviations[fields.Mod - 1] + ' Mod') && (fields.Damage_Die.match(/\b(\d+)d(\d+)\b/i) || fields.Damage_Die == 1)) {
                            var oDmg = fields.Damage_Die == 1 ? 1 : fields.Damage_Die.match(/\b(\d+)d(\d+)\b/i);
                            fields.Mod = 4;
                            if( oDmg == 1 ){
                                fields.Damage_Die = "1d6"
                            }
                            if( oDmg[0] && Number(oDmg[1]) == 1 && Number(oDmg[2]) < 6) {
                                fields.Damage_Die = "1d6"
                            }
                        }
					}
				]
			}
		},
		"subclassfeature3.2" : {
			name : "Shock Trooper",
			source : [["VSoS", 170]],
			minlevel : 3,
			description : desc([
                "When I make a melee atk on my turn vs. a visible crea, I can lunge 15 ft to it before atking",
                "This doesn't provoke opportunity atks, and can travel through air, but fall after the atk"
			])
		},
		"subclassfeature7" : {
			name : "Mystical Physicality",
			source : [["VSoS", 170]],
			minlevel : 7,
			description : desc([
                "When I make a Str, Dex, or Con check, I can add my Int instead of its normal modifier",
				"In addition, moving through difficult terrain no longer costs me additional movement"
			]),
            addMod : ["Acrobatics", "Athletics", "Sleight of Hand", "Stealth"].map(function(skill) {
                return { type : "skill", field : skill, mod : (skill == "Acrobatics" || skill == "Sleight of Hand") ? "max(Int-Dex|0)" : "max(Int-Str|0)", text : "I use my Intelligence modifier instead of its normal modifier"};
            })
		},
		"subclassfeature10" : {
			name : "Deflect Energy",
			source : [["VSoS", 170]],
			minlevel : 10,
			description : desc([
                "I reduce dmg from ranged spell or wpn atk; 1d10+Int mod+\u00BD warmage level (rounded down)",
                "The dmg type from the atk must be cold, fire, force, lightning, necrotic, or radiant",
			]),
			additional : levels.map(function(n) {
                return n < 10 ? "" : "1d10 + Int mod + " + Math.floor(n/2)
            }),
            action : ["reaction" , ""]
		},
		"subclassfeature15" : {
			name : "Improved Shock Trooper",
			source : [["VSoS", 170]],
			minlevel : 15,
			description : desc([
                "My Shock Trooper lunge increases to 30 ft, teleporting me through a crea or obj; as if blinking",
                "I can't blink into an occupied space",
			])
		},
		"subclassfeature18" : {
			name : "Flurry of Spells",
			source : [["VSoS", 170]],
			minlevel : 18,
			description : desc([
                "I can expend a use of my Arcane Surge to cast three different cantrips",
                "It must have a casting time of 1 action or bonus action; I can't use Arcane Surge with these",
			]),
			action : ["action" ,"Flurry of Spells (Arcane Surge)"],
			usages : 1,
			recovery : "long rest"
		}
	}
});

// * house of pawns warmage subclass
AddSubClass("warmage", "house of pawns", {
	regExpSearch : /^(?=.*house)(?=.*pawns).*$/i,
	fullname : "House of Pawns",
	subname : "House of Pawns",
	source : [["VSoS", 171]],
	features : {
		"subclassfeature3" : {
			name : "Promotion",
			source : [["VSoS", 171]],
			minlevel : 3,
			description : desc([
                "I learn an additional warmage trick that can be from any house",
			]),
			bonusClassExtrachoices : [{
                'class' : "warmage",
                feature : "warmage tricks",
                bonus : 1
            }]
		},
		"subclassfeature3.1" : {
			name : "Adaptive Arcanist",
			source : [["VSoS", 171]],
			minlevel : 3,
			description : desc([
				"When I finish a short or long rest, I can pick any warmage cantrip",
                "This doesn't count against me; I know it until I pick a new one"
			]),
			eval : function() {
				CurrentSpells["warmage-adaptive arcanist"] = {
					name : "Adaptive Arcanist",
					ability : 4,
					list : {"class" : "warmage"},
					known : {cantrips : 0, spells : 'list'},
					bonus : {
                        bon1 : {
                            name : 'Just select "Full List"',
                            spells : []
                        },
                        bon2 : {
                            name : 'on the bottom left',
                            spells : []
                        }
                    },
                    typeList : 4,
                    refType : "class",
                    allowUpCasting : true,
                    firstCol : ""
				},
				SetStringifieds('spells'); CurrentUpdates.types.push('spells');
			},
			removeeval : function () {
                delete CurrentSpells["warmage-adaptive arcanist"];
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            }
		},
		"subclassfeature7" : {
			name : "Pawn Storm",
			source : [["VSoS", 171]],
			minlevel : 7,
			description : desc([
                "If I target a crea w/ a cantrip, they can't make opportunity atks vs. me",
                "This lasts the rest of my turn, whether or not I deal dmg",
			])
		},
		"subclassfeature10" : {
			name : "Additional Arcane Fighting Style",
			source : [["VSoS", 171]],
			minlevel : 10,
			description : desc([
				"I can choose an additional fighting style from the Arcane Fighting Style class feature."
			]),
			bonusClassExtrachoices : [{
				"class" : "warmage",
				feature : "arcane fighting style",
				bonus : 1
			}]
		},
		"subclassfeature15" : {
			name : "Opening Move",
			source : [["VSoS", 171]],
			minlevel : 15,
			description : desc([
                "I can add my Int mod to initiative rolls",
                "When I roll initiative and not surprised, I can move up to my speed",
			]),
			addMod : { type : "skill", field : "Init", mod : "max(Int|0)", text : "I can add my Intelligence modifier to initiative rolls."}
		},
		"subclassfeature18" : {
			name : "Fundamental Mastery",
			source : [["VSoS", 171]],
			minlevel : 18,
			description : desc([
                "When I roll dmg for a warmage cantrip, I can treat one of the die as its max value",
			]),
			usages : 1,
			recovery : "Turn"
		}
	}
});

// * house of rooks warmage subclass
AddSubClass("warmage", "house of rooks", {
	regExpSearch : /^(?=.*house)(?=.*rooks).*$/i,
	fullname : "House of Rooks",
	subname : "House of Rooks",
	source : [["VSoS", 171]],
	features : {
		"subclassfeature3" : {
			name : "Rook Strike",
			source : [["VSoS", 171]],
			minlevel : 3,
			description : desc([
                "I gain adv on the next spell atk roll or a crea has disadv on a warmage cantrip save",
                "The crea has disadv on the save until the end of my turn",
                "I can do this once per short or long rest, or if I reduce a crea to 0 hp with a warmage cantrip"
			]),
			action : ["bonus action", ""],
			usages : 1,
			recovery : "short rest"
		},
		"subclassfeature3.1" : {
			name : "Rasp",
			source : [["VSoS", 171]],
			minlevel : 3,
			description : desc([
                "I can cast knock at will w/out a spell slot; casting time 1 min and it's completely silent",
			]),
			spellcastingBonus : [{
				name : "Rasp",
				spells : ["knock"],
				selection : ["knock"],
				firstCol : "atwill"
			}],
            spellChanges : {
                "knock" : {
                    time : "1 min",
                    description : "1 object is unlocked (1 lock), unstuck, unbarred, arcane lock suppressed for 10 min; Completely silent",
                    descriptionFull : "Choose an object that you can see within range. The object can be a door, a box, a chest, a set of manacles, a padlock, or another object that contains a mundane or magical means that prevents access." + "\n   " + "A target that is held shut by a mundane lock or that is stuck or barred becomes unlocked, unstuck, or unbarred. If the object has multiple locks, only one of them is unlocked." + "\n   " + "If you choose a target that is held shut with arcane lock, that spell is suppressed for 10 minutes, during which time the target can be opened and shut normally." + "\n   " + "When you cast the spell, it is completely silent, and no sound eminates.",
                    changes : "I can cast knock at will. Doing so create no sound."
                }
            }
		},
		"subclassfeature7" : {
			name : "Arcane Acrobat",
			source : [["VSoS", 171]],
			minlevel : 7,
			description : desc([
                "I can add my Int mod to all Dex checks I make; I subtract 60 ft when determining fall dmg",
                "I cannot be incapacitate to do this"
			]),
            addMod : ["Acrobatics", "Sleight of Hand"].map(function(skill) {
                return { type : "skill", field : skill, mod : "max(Int|0)", text : "I can add my Intelligence modifier to all Dexterity checks I make"};
            })
		},
		"subclassfeature10" : {
			name : "Fleeting Decoy",
			source : [["VSoS", 171]],
			minlevel : 10,
			description : desc([
                "When I take dmg from a visible crea, I can raise a defensive illusion to protect me",
                "All atks after this have disadv until the start of my next turn"
			]),
			action : ["reaction", ""]
		},
		"subclassfeature15" : {
			name : "Elusive Step",
			source : [["VSoS", 171]],
			minlevel : 15,
			description : desc([
                "If I move 15 or more ft on my turn, additional movement doesn't provoke opportunity atks",
			])
		},
		"subclassfeature18" : {
			name : "Flash of Feathers",
			source : [["VSoS", 171]],
			minlevel : 18,
			description : desc([
                "I can cast invisibility on myself w/out a spell slot or components. While invisible,",
                "my speed is 2\xD7 and I can make one wpn atk or warmage cantrip w/out ending the spell",
			]),
			usages : 1,
			recovery : "short rest",
			spellcastingBonus : [{
				name : "Flash of Feathers",
				spells : ["invisibility"],
				selection : ["invisibility"],
				firstCol : "oncesr"
			}]
		}
	}
});

// ! Subclasses

// * Barbarian subclasses
AddSubClass("barbarian", "colossus", {
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))(?=.*colossus).*$/i,
    subname : "Path of the Colossus",
    source : [["VSoS", 192]],
    features : {
        "subclassfeature3" : {
            name : "Larger Than Life",
            source : ["VSoS", 192],
            minlevel : 3,
            description : desc([
                "When raging I gain the following:",
                "\u2022 My size doubles in all dimensions and weight is multipled by 8",
                "  If there's not enough room, I attain the max possible size in the available space",
                "\u2022 My size increases by 1, but doesn't stack with spells such as enlarge/reduce",
                "\u2022 My wea(s) also grow, dealing an extra 1d4 dmg",
                "\u2022 As an action, I can swing in a 15 ft line, rolling a separate atk roll for each crea hit",
            ]),
            action : ["action", " (15-ft line)"],
            calcChanges : {
                atkAdd : [
                    function(fields, v) { 
                        if(v.isMeleeWeapon && classes.known.barbarian && classes.known.barbarian.level > 2 && (/\brage\b/i).test(v.WeaponTextName)) {
                            fields.Description = (fields.Description ? "; " : "") + "+1d4 extra dmg"  
                        }
                    },
                    "If I add \"Rage\" to the name of a weapon, I can treat it as a rage weapon and add +1d4 extra damage to it"
                ],
            }
        },
        "subclassfeature6" : {
            name : "Imposing Presence",
            source : ["VSoS", 193],
            minlevel : 6,
            description : desc([
                "Ranged line of sight effects treats targets behind me as \u00BE cover",
                "While raging, this becomes total cover"
            ])
        },
        "subclassfeature10" : {
            name : "Boulder Throw",
            source : ["VSoS", 193],
            minlevel : 10,
            description : desc([
                "I can throw boulders or other suitably large objects as weapons",
                "Such weapons are considered proficient and have the following properties:",
                "\u2022 Two-handed, heavy, thrown",
                "\u2022 Range 30/60ft",
                "\u2022 2d8 Bludg. dmg",
                "I may only throw a boulder once per turn"
            ]),
            usages : 1,
            recovery : "Turn",
            weaponOptions : [{
                name : "Boulder Throw",
                regExpSearch : /^(?=.*boulder)(?=.*throw).*$/i,
                source : ["VSoS", 193],
                type : "AlwaysProf",
                ability : 1,
                abilitytodamage : false,
                damage : [2,8, "bludgeoning"],
                range : "Range, 30/60ft",
                description : "Two-handed, heavy, thrown",
                selectNow : true
            }]
        },
        "subclassfeature14" : {
            name : "Colossal Strength",
            source : ["VSoS", 193],
            minlevel : 14,
            description : levels.map(function(n) {
                if(n<14) return ""
                var description = desc([
                    "I gain a +2 to Str and my Str score max is now a 22",
                ]);
                
                if(n>19) {
                    description += desc([
                        "At 20th level, my Str score max becomes a 26 instead of 22"
                    ])
                }
                return description; 
            }),
            scores : [2,0,0,0,0,0],
            scoresMaximum : [22,0,0,0,0,0],
            "scoresmax26" : {
                name : "Strength Max Increase",
                extraname : "Path of the Colossus 20",
                source : ["VSoS", 193],
                description : desc([
                    "My Strength max increase to 26 from 22"
                ]),
                scoresMaximum : [26,0,0,0,0,0]
            },
            autoSelectExtrachoices : [{
                extrachoice : "scoresmax26",
                minlevel : 20
            }]
        }
    }
});

AddSubClass("barbarian", "fin", {
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))(?=.*fin).*$/i,
    subname : "Path of the Fin",
    source : ["VSoS", 193],
    features : {
        "subclassfeature3" : {
            name : "Aquatic",
            source : ["VSoS", 193],
            minlevel : 3,
            description : desc([
                "I can breathe underwater and have a swim speed equal to my walk speed",
                "If I'm swimming, my rage can't end early unless I choose to do so"
            ]),
            speed : {
                swim : { spd : "walk", enc : "walk" }
            },
        },
        "subclassfeature3.1" : {
            name : "Feeding Frenzy",
            source : ["VSoS", 193],
            minlevel : 3,
            description : levels.map(function(n) {
                if(n<3) return ""
                var description = desc([
                    "I gain razor sharp teeth to make a bite attack with while raging",
                    "I use this to make unarmed atks with; If I hit a crea w/in 5ft with a",
                    "melee atk, I can use my bns action to make a bite atk against it",
                    "This atk has adv. if the crea has \u2264\u008Bhp; I can do this",
                    "a number of times equal to my Con mod per long rest (min. of 1)"
                ])
                
                if(n>5) {
                    description += desc([
                        "At 6th level, my bite is considered magical for overcoming magic resistance"
                    ])
                }
                return description; 
            }),
            usages : "Con mod per ",
            usagescalc : "event.value = Math.max(1, What('Con Mod'));",
            recovery : "long rest",
            weaponOptions : [{
                name : "Bite",
                regExpSearch : /^(?=.*bite).*$/i,
                source : ["VSoS", 193],
                baseWeapon : "unarmed strike",
                damage : [1,8,"Piercing"],
                selectNow : true
            }],
            calcChanges : {
                atkAdd : [
                    function (fields, v) {
                        if(/bite/i.test(v.WeaponTextName)) {
                            fields.Description += (fields.Description ? "; " : "") + "Counts as magical";
                        }
                    }
                ]
            }
        },
        "subclassfeature6" : {
            name : "Blood Sense",
            source : ["VSoS", 193],
            minlevel : 6,
            description : desc([
                "I gain adv. on all Investigation and Perception checks made with smell",
                "I can automatically track a living crea whose scent I'm familiar with",
                "as long as the trail is less than a week old; I can spend 1 min to",
                "detect the scents of all living crea w/in 100 ft, or 1 mi. in water"
            ]),
            vision : [["Adv. on Perception checks that rely on smell", 0]],
        },
        "subclassfeature10" : {
            name : "Mako",
            source : ["VSoS", 193],
            minlevel : 10,
            description : desc([
                "My bite atk dmg die increases from d8 to d10",
                "Once per turn when I hit a crea with my bite, it must make a Dex save",
                "On a fail, the tgt is knocked prone or grappled, my choice",
                "The tgt has disadv. if I'm swimming"
            ]),
            calcChanges : {
                atkAdd : [
                    function (fields, v) {
                        if(/bite/i.test(v.WeaponTextName)) {
                            fields.Damage_Die = '1d10';
                            fields.Description += (fields.Description ? "; " : "") + "Once per turn Dex save or prone/grappled; Disadv. if I'm swimming";
                        }
                    }
                ]
            }
        },
        "subclassfeature14" : {
            name : "Tsunami",
            source : ["VSoS", 193],
            minlevel : 14,
            description : desc([
                "When raging, I can conjure a magical wave of salt water",
                "The wave is up to 15-ft wide and 15-ft tall and moves w/ me",
                "If a crea is caught in the wave, it's forced to swim and hold its breath",
                "until it leaves wave's area or the wave moves away from it",
                "The wave extinguishes all unprotected flames, and lasts for 1 min"
            ]),
            usages : 1,
            recovery : "short rest",
        }
    }
});

AddSubClass("barbarian", "heavy metal", { 
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))((?=.*heavy)(?=.*metal)).*$/i,
    subname : "Path of Heavy Metal",
    source : ["VSoS", 194],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                "I gain proficiency with 3 musical instruments of my choice"
            ]),
            toolProfs : [["Any Musical instrument", 3]],
        },
        "subclassfeature3.1" : {
            name : "Heavy Metal Axe",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                "I can spend 8 hrs to convert any two-handed wea into an instrument",
                "Only I can play said instrument, and it retains all of it's properties",
                "I can have a number of instruments equal to my Prof Bonus"
            ]),
            additional : levels.map(function (n) {
                return (n < 5 ? 2 : n < 9 ? 3 : n < 13 ? 4 : n < 17 ? 5 : 6) + " instruments";
            })
        },
        "subclassfeature3.2" : {
            name : "Solo Shredding",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                "When I rage, I begin to vigorously play a solo on my instrument wea",
                "Each time I deal dmg to a hostile crea, my Rage dmg increases by 1",
                "I can increase it up to double my Prof Bonus; This lasts until I am incapacitated, no",
                "longer holding my instrument weapon, miss an atk, or my rage ends"
                
            ])
        },
        "subclassfeature6" : {
            name : "Killer Vocals",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                "As a bonus action, I can release a blood-curdling screech",
                "Each Large or smaller crea I choose w/in 5 ft is pushed 5 ft away and",
                "deafened until the end of my next turn"
            ]),
            action : [["bonus action", ""]]
        },
        "subclassfeature11" : {
            name : "Up To Eleven",
            source : ["VSoS", 194],
            minlevel : 11,
            description : desc([
                "When I make a Cha check or any check involving my instrument wea,",
                "I can treat a d20 roll of 10 or lower as an 11"
            ])
        },
        "subclassfeature14" : {
            name : "Smash Hit",
            source : ["VSoS", 194],
            minlevel : 14,
            description : desc([
                "When I hit a crea w/ an instrument wea while raging, I can smash the target, dealing",
                "an extra 4d12 dmg.",
                "If the wea is non-magical, it's destroyed and no longer counts as an instrument wea",
            ]),
            additional : "4d12",
            usages : 1,
            recovery : "short rest"
        }
    }
});

AddSubClass("barbarian", "muscle wizard", {
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))((?=.*muscle)(?=.*wizard)).*$/i,
    subname : "Path of the Muscle Wizard",
    source : ["VSoS", 194],
    features : {
        "subclassfeature3" : {
            name : "Unarguable Wizardry",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                "I gain Adv. on Intimidation checks to convince others I'm a wizard",
                "If some questions my legitimacy, I can rage for 1 rnd",
                "This rage can't be extended and doesn't count against me",
                "I can only attack the crea that provoked me and their allies"
            ])
        },
        "subclassfeature3.1" : {
            name : "\"Cantrips\"",
            source : ["VSoS", 194],
            minlevel : 3,
            description : desc([
                'At 3rd level, I learn how to use "magic" and "cantrips"',
                'I can cast "cantrips" a number of times equal to my Str mod per short/long rest', 
                'While raging, I can cast "cantrips" at will. Casting in this way does not count against me',
                'See page 3 notes for "spellcasting"'
            ]),
            usages : "Str mod per ",
            usagescalc : "event.value = Math.max(What('Str mod'), 0);",
            recovery : "short rest",
            action : [["bonus action", ""]],
            toNotesPage : [{
                name : '"Cantrips"',
                note : desc([
                    "\u2022 Mage Hand: As a bns action when I hit a crea w/ melee wea on my turn, I can use",
                    "  my hand to attempt to shove the target",
                    "\u2022 Shocking Grasp: As a bns action when I make an atk on my turn, I can hit the target",
                    "  harder than usual. On a hit, the target can't take any rea until the start of my next turn",
                    "\u2022 True Strike: As a bns action when I make an atk on my turn, I can truly strike my target.",
                    "  On a hit, I deal an extra 1d8 dmg to the target"
                ]),
                page3notes :  true
            }],
        },
        "subclassfeature6" : {
            name : '"Spells"',
            source : ["VSoS", 195],
            minlevel : 6,
            description : desc([
                "I can every \"spell\" that ever existed. However, I've only prepared the \"spells\"",
                "found on page 3 notes. I can cast each \"spell\" once per long rest",
            ]),
            action : [["action", "Burning Hands"], ["bonus action", "Magic Missile (w/atk)"], ["reaction", "Shield"]],
            toNotesPage : [{
                name : '"Spells"',
                note : desc([
                    "\u2022 Burning Hands: As an action on my turn, I can make an",
                    "  unarmed strike vs a crea w/in reach. On a hit they take",
                    "  1d8 + my Str mod bludgeoning dmg",
                    "\u2022 Magic Missile: When I take the atk action on my turn",
                    "  I can use my bns action to make a ranged atk with the wea",
                    "  I'm holding. I have adv. on the atk roll",
                    "\u2022 Shield: When I am targeted by an atk, I can produce a shield",
                    "  I gain the shield bns to AC vs the atk even if I wasn't holding it",
                    "  If I'm hit, I can reduce the dmg by 1d12 + my Con mod"
                ]),
                page3notes :  true
            }]
        },
        "subclassfeature10" : {
            name : "Magic Resistance",
            source : ["VSoS", 195],
            minlevel : 10,
            description : desc([
                "While raging, I have resistance to damage from spells"
            ]),
            savetxt : { text : ["Resistance to spell dmg while raging"] }
        },
        "subclassfeature14" : {
            name : "I Cast Fist",
            source : ["VSoS", 195],
            minlevel : 14,
            description : desc([
                "I can crush my enemies with my ultimate \"Spell\", Fist. While raging I can use",
                "my bns action or action to make a melee atk roll w/ adv. vs a crea w/in reach",
                "On a hit, it deals 8d8 + my Str mod bludg. dmg.",
                "Once I use this ability, I can't do so again until I stop raging and begin a new one"
            ]),
            usages : 1,
            recovery : "Rage",
            weaponOptions : [{
                regExpSearch : /\bfist\b/i,
                name : "Fist",
                source : ["VSoS", 195],
                type : "Natural",
                damage : [8,8, "bludgeoning"],
                ability : 1,
                abilitytodamage : true,
                description : "Once per rage",
                range : "Melee",
                selectNow : true
            }]
        }
    }
})

AddSubClass("barbarian", "rage mage", {
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))((?=.*rage)(?=.*mage)).*$/i,
    subname : "Path of the Rage Mage",
    source : ["VSoS", 196],
    abilitySave : 6,
    spellcastingFactor : 3,
    spellcastingList : {
        "class" : "sorcerer",
        level : [0,4],
        school : ["Evoc", "Trans"]
    },
    spellcastingKnown : {
        cantrips : [0, 0, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        spells : [0, 0, 2, 3, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9]
    },
    features : {
        "subclassfeature3" : {
            name : "Arcane Intuition",
            source : ["VSoS", 196],
            minlevel : 3,
            description : desc([
                "I gain gain proficiency in Arcana",
                "Additionally, I can use Con instead of Int for Arcana checks"
            ]),
            skills : ["Arcana"],
            addMod : { type : "skill", field : "Arcana", mod : "max(Con-Int|0)", text: "I can use Constitution instead of Intelligence for Arcana checks"}
        },
        "subclassfeature3.1" : {
            name : "Spellcasting",
            source : ["VSoS", 196],
            minlevel : 3,
            description : desc([
                "While raging, I can cast and concentrate on known sorcerer cantrips/spells, using",
                "Charisma as my spellcasting ability. Additionally, casting a spell on my turn",
                "counts as atking a hostile crea for the purposes of maintaining my rage",
            ]),
            spellcastingBonus : [{
                name : "From any school",
                "class" : "sorcerer",
                level : [1,4],
                times : levels.map(function(n) {
                    return n < 3 ? 0 : n < 8 ? 1 : n < 14 ? 2 : n < 20 ? 3 : 4
                })
            }]
        },
        "subclassfeature6" : {
            name : "Arcane Rampage",
            source : ["VSoS", 197],
            minlevel : 6,
            description : desc([
                "If I take the atk action while raging and atk recklessly, I can",
                "use my bns action to cast a spell in place of one of my atks.",
                "The spell must have a casting time of 1 action or bns action"
            ]),
            action : ["bonus action", " (in rage)"]
        },
        "subclassfeature10" : {
            name : "Supernatural Exploits",
            source : ["VSoS", 197],
            minlevel : 10,
            description : desc([
                "I can cast the following spells even if I'm not raging, at will, w/o material comp. or SS:",
                "\u25C6 darkvision, feather fall, jump, see invisibility",
                "Casting these spells this way has a target of self"
            ]),
            spellcastingBonus : [{
                name : "Supernatural Exploits",
                spells : ["darkvision", "feather fall", "jump", "see invisibility"],
                selection : ["darkvision", "feather fall", "jump", "see invisibility"],
                times : 4,
                firstCol : "atwill"
            }],
            spellChanges : {
                "darkvision" : {
                    range : "Self",
                    compMaterial : "",
                    changes : "Casting darkvision at will has a target of self"
                },
                "feather fall" : {
                    range : "Self",
                    compMaterial : "",
                    changes : "Casting feather fall at will has a target of self"
                },
                "jump" : {
                    range : "Self",
                    compMaterial : "",
                    changes : "Casting jump at will has a target of self"
                },
                "see invisibility" : {
                    range : "Self",
                    compMaterial : "",
                    changes : "Casting see invisibility at will has a target of self"
                }
            }
        },
        "subclassfeature14" : {
            name : "Eldritch Explosions",
            source : ["VSoS", 197],
            minlevel : 14,
            description : desc([
                "Once per turn when I hit a crea w/ a melee atk, I can expend a SS to create an explosion",
                "I choose w/in 10 ft of me. Each crea other than myself w/in a 10-ft rad. of that point",
                "must make a Dex save vs my Spell Save DC, taking 2d6/SS force dmg; save halves",
            ])
        }
    }
})

AddSubClass("barbarian", "tranquility", {
    regExpSearch : /^((?=.*(marauder|barbarian|viking|(norse|tribes?|clans?)(wo)?m(a|e)n))|((?=.*(warrior|fighter))(?=.*(feral|tribal))))(?=.*tranquility).*$/i,
    subname : "Path of Tranquility",
    source : ["VSoS", 197],
    features : {
        "subclassfeature3" : {
            name : "Mantra",
            source : ["VSoS", 197],
            minlevel : 3,
            description : desc([
                "When I take the Dodge action on my turn, it counts as atking",
                "a hostile crea for the purposes of maintaining my rage"
            ])
        },
        "subclassfeature3.1" : {
            name : "Anticipate",
            source : ["VSoS", 197],
            minlevel : 3,
            description : desc([
                "Whenever I do not make an atk roll on my turn, I can prepare for blows",
                "Until the start of my next turn, whenever a crea makes a melee atk vs me",
                "I can use my rea. to make one melee wea. atk against them"
            ]),
            action : ["reaction", ""]
        },
        "subclassfeature6" : {
            name : "Battle Trance",
            source : ["VSoS", 197],
            minlevel : 6,
            description : desc([
                "Whenever I use my rea. to make an atk, I can make two atks instead of 1"
            ])
        },
        "subclassfeature10" : {
            name : "Tranquility",
            source : ["VSoS", 197],
            minlevel : 10,
            description : desc([
                "While raging, I can cast calm emotions, enthrall, and sanctuary once per long rest",
                "Con is my spellcasting ability, and I can do so w/o components or expending a SS",
            ]),
            spellcastingBonus : [{
                name : "Tranquility",
                spells : ["calm emotions", "enthrall", "sanctuary"],
                selection : ["calm emotions", "enthrall", "sanctuary"],
                times : 3,
                spellcastingAbility : 3,
                firstCol : "oncelr"
            }],
            action : ["action", " (in rage)"],
            spellChanges : {
                "calm emotions" : {
                    components : "",
                    compMaterial : "",
                    changes : "I can cast calm emotions once per long rest without components or expending a spell slot"
                },
                "enthrall" : {
                    components : "",
                    compMaterial : "",
                    changes : "I can cast enthrall once per long rest without components or expending a spell slot"
                },
                "sanctuary" : {
                    components : "",
                    compMaterial : "",
                    changes : "I can cast sanctuary once per long rest without components or expending a spell slot"
                }
            }
        },
        "subclassfeature14" : {
            name : "Zen State",
            source : ["VSoS", 197],
            minlevel : 14,
            description : desc([
                "Whenever a crea misses me w/ a melee atk, I gain a +2 bonus to AC (max +6)",
                "This bonus resets to 0 if I take dmg or at the start of my turn"
            ])
        }
    }
})

// * Bard subclasses
AddSubClass("bard", "college of cantors", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))(?=.*cantors).*$/i,
    subname : "College of Cantors",
    source : ["VSoS", 198],
    features : {
        "subclassfeature3" : {
            name : "Heavenly Voice",
            source : ["VSoS", 198],
            minlevel : 3,
            description : desc([
                "I learn thaumaturgy which counts as a bard spell, and doesn't count against me"
            ]),
            spellcastingBonus : [{
                name : "Heavenly Voice",
                spells : ["thaumaturgy"],
                selection : ["thaumaturgy"],
                times : 1
            }]
        },
        "subclassfeature3.1" : {
            name : "Healing Hymn",
            source : ["VSoS", 198],
            minlevel : 3,
            description : desc([
                "When I cast a spell of 1st lvl or higher that restores hp, I can expend a Bardic Inspiration",
                "Each crea that regains hp can add the die + half my bard lvl to the number of hp restored"
            ]),
            additional : levels.map(function(n) {
                bardIn = ["d6", "d6", "d6", "d6", "d8", "d8", "d8", "d8", "d8", "d10", "d10", "d10", "d10", "d10", "d12", "d12", "d12", "d12", "d12", "d12"];
                // Offset for index based 0, add half the bard level in favor of the player. 
                return [n+1] + (n < 14 ? " (Bardic Inspiration)" : "") + " + " + Math.ceil(n/2) + " hp restored"; 
            })
        },
        "subclassfeature6" : {
            name : "Angelic Chorus",
            source : ["VSoS", 198],
            minlevel : 6,
            description : desc([
                "When I cast thaumaturgy, I can create the following additional effects:",
                "\u2022 As part of casting this spell, I can use the Help action to aid 2 allies",
                "  If I aid them with an atk vs a crea, the target of the atk can be w/in 30 ft",
                "  instead of 5 ft. The target must be visible or w/in audible distance",
                "\u2022 I ward 1 willing crea w/in 30 ft for 1 min; Only 1 crea can be warded at a time",
                "  When a crea hits an atk vs the warded crea, the target can use its rea to deal radiant",
                "  dmg equal to half my bard lvl to the atker"
            ])
        },
        "subclassfeature14" : {
            name : "Song of the Divines",
            source : ["VSoS", 198],
            minlevel : 14,
            description : desc([
                "I can use Healing Hymn without expending a use of my Bardic Inspiration"
            ])
        }
    }
});

AddSubClass("bard", "college of graffiti", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))(?=.*graffiti).*$/i,
    subname : "College of Graffiti",
    source : ["VSoS", 199],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 199],
            minlevel : 3,
            description : desc([
                "I gain proficiency with painter's supplies and either Stealth or Sleight of hand"
            ]),
            toolProfs : ["Painter's Supplies"],
            choices : ["Stealth Proficiency", "Sleight of Hand Proficiency"],
            "stealth proficiency" : {
                name : "Stealth Proficiency",
                description : desc([
                    "I gain proficiency with Stealth"
                ]),
                skills : ["Stealth"]
            },
            "sleight of hand proficiency" : {
                name : "Sleight of Hand Proficiency",
                description : desc([
                    "I gain proficiency with Sleight of Hand"
                ]),
                skills : ["Sleight of Hand"]
            }
        },
        "subclassfeature3.1" : {
            name : "Street Art",
            source : ["VSoS", 199],
            minlevel : 3,
            description : desc([
                "I learn the tag cantrip, and doesn't count against me",
                "When I cast tag, I can expend a use of Bardic Inspiration to spray a mural",
                "For the next min, all allies w/in 30 ft that can see the mural gain the following:",
                "\u2022 +1 bonus to ability checks, atk rolls, and saving throws",
                "\u2022 This can stack up to a +3 bonus"
            ]),
            spellcastingBonus : [{
                name : "Street Art",
                spells : ["tag"],
                selection : ["tag"],
                times : 1
            }]
        },
        "subclassfeature6" : {
            name : "Signature Mark",
            source : ["VSoS", 199],
            minlevel : 6,
            description : desc([
                "As a bns action, I can mark a crea w/in 5 ft",
                "I make spell atk vs the crea., and on a hit, the crea. is marked",
                "I deal +1d8 to the dmg roll when I hit a marked crea w/ a melee wpn atk",
                "When an ally makes an atk vs a marked crea, I can use my rea. to grant adv.",
            ]),
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if(fields.Proficiency && !v.isSpell && !v.isDC && !v.isRangedWeapon && v.isMeleeWeapon) {
                            fields.Description += (fields.Description ? "; " : "") + "Once per turn +1d8 dmg vs marked crea."
                        }
                    }
                ]
            },
            usages : 1,
            recovery : "Turn"
        },
        "subclassfeature14" : {
            name : "Kaleidoscopic Spray",
            source : ["VSoS", 199],
            minlevel : 14,
            description : desc([
                "Each crea I choose w/in 15 ft cone must make a Dex save",
                "On a fail, the crea. is blinded until the end of its next turn",
                "Each crea in the area is marked by me regardless if it succeeds the save",
            ]),
            usages : 1,
            recovery : "short rest"
        }
    }
})

AddSubClass("bard", "jesters", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))(?=.*jesters).*$/i,
    subname : "College of Jesters",
    source : ["VSoS", 199],
    features : {
        "subclassfeature3" : {
            name : "Raconteur",
            source : ["VSoS", 200],
            minlevel : 3,
            description : desc([
                "I learn the vicious mockery cantrip, and can expend a use of bardic",
                "inspiration when a crea fails the save, adding the die + Cha mod to it's dmg",
                "If a crea fails by \u22655, it has disadv. on the next save before the start of its next turn"
            ]),
            spellcastingBonus : [{
                name : "Raconteur",
                spells : ["vicious mockery"],
                selection : ["vicious mockery"],
                times : 1
            }]
        },
        "subclassfeature3.1" : {
            name : "Advanced Tumbling",
            source : ["VSoS", 200],
            minlevel : 3,
            description : desc([
                "I can move through a crea. space by performing acrobatic bounds and flips",
                "Any crea. I move through has disadv. on opp. atks vs me until the end of my next turn"
            ])
        },
        "subclassfeature6" : {
            name : "Juggling",
            source : ["VSoS", 200],
            minlevel : 6,
            description : desc([
                "I can use my bns action to juggle a number of wea. equal to 2\xd7 my Prof. Bonus",
                "When I use the atk action to throw a wea, move out of a crea. reach, or cast vicious",
                "mockery, I can make a ranged wea atk vs a visible crea w/ a juggled wea."
            ]),
            additional : levels.map(function(n) { 
                return (n < 5 ? 2 : n < 9 ? 3 : n < 13 ? 4 : n < 17 ? 5 : 6) + " weapons";
            }),
            usages : 1,
            recovery : "Turn",
        },
        "subclassfeature14" : {
            name : "Grand Finale",
            source : ["VSoS", 200],
            minlevel : 14,
            description : desc([
                "I can take one additional action, but it cannot be on the first rnd of combat",
                "If I use this feature, I cannot take actions or bns actions on my next turn"
            ]),
            additional : "No action/bns action on next turn"
        }
    }
});

AddSubClass("bard", "mad god", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))((?=.*mad)(?=.*god)).*$/i,
    subname : "College of the Mad God",
    source : ["VSoS", 200],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 200],
            minlevel : 3,
            description : desc([
                "I gain proficiency in one skill chosen by the GM",
                "When I finish a long rest, the GM can change the selection"
            ]),
            skillstxt : "Proficiency with any one skill chosen by the GM"
        },
        "subclassfeature3.1" : {
            name : "Cacophony",
            source : ["VSoS", 200],
            minlevel : 3,
            description : desc([
                "When a crea fails an Int, Wis, or Cha save vs one of my bard spells or features",
                "while I'm holding an instrument, I can expend a use of bardic inspiration",
                "to play a cacophonous noise, choosing one of the following effects:",
                "\u2022 The crea takes psychic dmg equal to a roll of my Bardic Inspiration die",
                "\u2022 The crea is deafened and can't speak until the end of its next turn",
                "\u2022 The crea moves up to 10 ft in a direction I choose; doesn't provoke opp. atks"
            ])
        },
        "subclassfeature6" : {
            name : "Frenzied Strings",
            source : ["VSoS", 200],
            minlevel : 6,
            description : desc([
                "As an action, I can play a mind-infecting tune for a crea w/in 60 ft that can hear me",
                "They must make a Wis save or be frenzied for 1 min, repeating the save when it takes dmg",
                "While frenzied, the crea chooses its targets for its atks, spells, and abilities randomly",
                "They can only atk a visible target w/in range, and must make an opp atk when provoked"
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature14" : {
            name : "Mad Melody",
            source : ["VSoS", 201],
            minlevel : 14,
            description : desc([
                "As an action, and as an action on subsequent turns, I play a melody that haunts my dreams",
                "Only crea I choose w/in 60 ft of my can hear the melody; even deafended crea can hear it",
                "When I use my action to play/continue the melody, all crea. that can hear it must make a",
                "Wis save vs my spell save DC or take psychic dmg and suffers an effect based on the",
                "number of consecutive turns I've been playing the melody for; after the 4th rnd or if no",
                "crea hears the melody for 1 rnd, it goes back to round 1 (see page 3 notes)"
            ]),
            action : ["action", ""],
            toNotesPage : [{
                name : "Mad Melody",
                source : ["VSoS", 201],
                note : desc([
                    "Round      Psychic Dmg      Effect",
                    "1st            4d8                    Target is deafened",
                    "2nd          7d8                    Target can't speak and has disadv. on ability checks",
                    "3rd           4d8                    Target is charmed by me until the end of its turn",
                    "4th           9d8                    None"
                ]),
                page3notes : true
            }]
        }
    }
});

AddSubClass("bard", "masks", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))(?=.*masks?).*$/i,
    subname : "College of Masks",
    source : ["VSoS", 201],
    features : {
        "subclassfeature3" : {
            name : "Bonus Proficiency",
            source : ["VSoS", 201],
            minlevel : 3,
            description : desc([
                "I gain proficiency with the Performance skill"
            ]),
            skills : ["Performance"]
        },
        "subclassfeature3.1" : {
            name : "Persona Masks",
            source : ["VSoS", 201],
            minlevel : 3,
            description : levels.map(function(n) {
                var descr = desc([
                    "I gain 2 Persona Masks of my choice and an additional masks at higher levels",
                    "I can exchange a mask I know for another whenever I gain a bard level",
                    "If a mask is lost/stolen, I can remake it with 8 hrs of work and 100 gp of materials",
                    "I can put on/switch masks as a bns action, and only I can gain the masks' effects",
                ])

                if(n > 5) {
                    descr += desc([
                        "At 6th level, some of masks improve and gain additional benefits"
                    ])
                }
                return descr;
            }),
            extraname : "Persona Masks",
            extrachoices : ["Angel", "Archmage", "Devil", "Dragon", "Faceless", "Fool", "Gladiator", "High Priest", "Lord", "Spirit"],
            extraTimes : levels.map(function(n) { 
                return n < 6 ? 2 : n < 14 ? 3 : 4;
            }),
            "angel" : {
                name : "Angel",
                source : ["VSoS", 202],
                description : desc([
                    "When I hit a crea w/ a melee wea atk, I can expend a use of Bardic Inspiration",
                    "to deal additional radiant dmg equal to the result + my Cha mod"
                ])
            },
            "archmage" : {
                name : "Archmage",
                source : ["VSoS", 202],
                description : desc([
                    "I know the firebolt cantrip, as well as the following spells:",
                    "Bard Level      Spells",
                    "3rd                 gust of wind, scorching ray",
                    "5th                 lightning bolt, protection from energy",
                    "7th                 dimension door, ice storm",
                    "9th                 scrying, wall of stone",
                    "As I gain higher levels in this class, I know additional spells while wearing the mask",
                    "These spells count as bard spells, and don't count against me"
                ]),
                eval : function() {
                    CurrentSpells["bard-archmage"] = {
                        name : "Archmage",
                        ability : "bard",
                        bonus : {
                            "archmage mask" : [{
                                name : 'Archmage Mask',
                                spells : ["fire bolt", "gust of wind", "scorching ray", "lightning bolt", "protection from energy", "dimension door", "ice storm", "scrying", "wall of stone"],
                                selection : ["fire bolt", "gust of wind", "scorching ray", "lightning bolt", "protection from energy", "dimension door", "ice storm", "scrying", "wall of stone"],
                                times : 9
                            }],
                        },
                        refType : "class",
                        typeSp : "class",
                        allowUpCasting : true,
                        firstCol : ""
                    }
                    SetStringifieds('spells'); CurrentUpdates.types.push('spells');
                },
                removeeval : function() {
                    delete CurrentSpells["bard-high priest"];
                    SetStringifieds('spells'); CurrentUpdates.types.push('spells');
                },
            },
            "devil" : {
                name : "Devil",
                source : ["VSoS", 202],
                description : desc([
                    "As a rea when I take dmg from a visible crea w/in 5 ft, I can expend a use of Bardic",
                    "Inspiration to deal fire dmg equal to two rolls of my Bardic Inspiration die to the crea."
                ]),
                action : ["reaction", ""]
            },
            "dragon" : {
                name : "Dragon",
                source : ["VSoS", 202],
                description : desc([
                    "While I wear this mask, I can use my action to expend a use of Bardic Inspiration",
                    "to exhale destructive energy. Each crea in a 15 ft cone must make a Dex save against",
                    "my spell save DC. A crea takes fire dmg equal to three rolls of my Bardic Inspiration",
                    "on a failed save, or half as much on a success"
                ])
            },
            "faceless" : {
                name : "Faceless",
                source : ["VSoS", 202],
                description : desc([
                    "While I wear this mask, I can cast disguise self w/out a SS or material comp."
                ]),
                spellcastingBonus : [{
                    name : "Faceless",
                    spells : ["disguise self"],
                    selection : ["disguise self"],
                    times : 1,
                    firstCol : "atwill"
                }],
                spellChanges : {
                    "disguise self" : {
                        compMaterial : "",
                        components : "V,S",
                        changes : "While I wear the Dragon mask, I can cast disguise self without using a spell slot or material components."
                    }
                }
            },
            "fool" : {
                name : "Fool",
                source : ["VSoS", 202],
                description : desc([
                    "While I wear this mask, my walking speed increases by 10 ft",
                    "Additionally, I can take the disengage action as a bns action",
                    "At 6th level, I can take the dash action as a bns action"
                ]),
                speed : { walk : { spd : "+10", enc : "+10" } }
            },
            "gladiator" : {
                name : "Gladiator",
                source : ["VSoS", 202],
                description : desc([
                    "While I wear this mask, I have proficiency w/ martial wea. and shields",
                    "At 6th level, I can add my Cha mod to my melee wea dmg rolls"
                ]),
                armor : [false, false, false, true],
			    weapons : [false, true],
                calcChangs : {
                    atkAdd : [
                        function(fields, v) {
                            if(classes.known.bard.level >= 6 && v.isMelee) { 
                                fields.Description += (fields.Description ? "; " : "") + " +" + What("Cha Mod") + " dmg";
                            }
                        }
                    ]
                }
            },
            "high priest": {
                name: "High Priest",
                source: ["VSoS", 202],
                description: desc([
                    "I know the sacred flame cantrip, as well as the following spells:",
                    "Bard Level      Spells",
                    "3rd                 aid, lesser restoration",
                    "5th                 mass healing word, tongues",
                    "7th                 banishment, death ward",
                    "9th                 greater restoration, mass cure wounds",
                    "As I gain higher levels in this class, I know additional spells while wearing the mask",
                    "These spells count as bard spells, and don't count against me"
                ]),
                eval : function() {
                    CurrentSpells["bard-high priest"] = {
                        name : "High Priest",
                        ability : "bard",
                        bonus : {
                            "high priest mask" : [{
                                name : 'High Priest Mask',
                                spells : ["sacred flame", "aid", "lesser restoration", "mass healing word", "tongues", "banishment", "death ward", "greater restoration", "mass cure wounds"],
                                selection : ["sacred flame", "aid", "lesser restoration", "mass healing word", "tongues", "banishment", "death ward", "greater restoration", "mass cure wounds"],
                                times : 9
                            }],
                        },
                        refType : "class",
                        typeSp : "class",
                        firstCol : "",
                        allowUpCasting : true,
                    }
                    SetStringifieds('spells'); CurrentUpdates.types.push('spells');
                },
                removeeval : function() {
                    delete CurrentSpells["bard-high priest"];
                    SetStringifieds('spells'); CurrentUpdates.types.push('spells');
                },
            },
            "lord": {
                name: "Lord",
                source: ["VSoS", 202],
                description: desc([
                    "When a crea rolls one of my Bardic Inspiration dice and rolls a 1, it can reroll the die",
                    "and must use the new roll. At 6th level, a crea can reroll a 1 or 2"
                ]),
                additional : levels.map(function(n) {
                    return n < 6 ? "1" : "1 or 2";
                })
            },
            "spirit" : {
                name : "Spirit",
                source : ["VSoS", 202],
                description : desc([
                    "When I weak this mask, I become invis. if I don't speak, move, or take any actions for 1 min",
                    "I'm invis. for up to 10 mins or until I remove the mask, take dmg, make an atk, or cast a spell"
                ])
            }
        },
        "subclassfeature6" : {
            name : "Hidden Persona",
            source : ["VSoS", 201],
            minlevel : 6,
            description : desc([
                "I can use a bns action to cause a mask I'm wearing to become invisible/visible"
            ]),
            action : ["bonus action", ""]
        },
        "subclassfeature14" : {
            name : "Master of Many Faces",
            source : ["VSoS", 201],
            minlevel : 14,
            description : desc([
                "I can wear two masks at the same time, gaining the benefits of each"
            ])
        }
    }
})

AddSubClass("bard", "romance", {
    regExpSearch : /^(?=.*(college|bard|minstrel|troubadour|jongleur))(?=.*romance).*$/i,
    subname : "College of Romance",
    source : ["VSoS", 203],
    features : {
        "subclassfeature3" : {
            name : "Likeable",
            source : ["VSoS", 203],
            minlevel : 3,
            description : desc([
                "I can use my bns action to distract a hostile crea I've charmed",
                "On its turn, the charmed crea has disadv. on atk rolls and can't move",
                "further away from me unless it takes the disengage action",
                "If I charm a non-hostile crea, it regards me and my allies as friendly"
            ]),
            action : ["bonus action", ""]
        },
        "subclassfeature3.1" : {
            name : "Cupid's Arrow",
            source : ["VSoS", 203],
            minlevel : 3,
            description : desc([
                "As an action, I can a use of Bardic Inspiration and choose one visible crea",
                "w/in 30 ft that can also see/hear me to make a Wis save",
                "On a fail, it's charmed by me for a number of rounds equal to the die roll",
                "This ends early if I move more than 30 ft away if the crea can no longer",
                "see/hear me, it takes dmg from me or my allies, or if I use this ability again"
            ]),
            action : ["action", ""]
        },
        "subclassfeature6" : {
            name : "Enemy of My Enemy",
            source : ["VSoS", 203],
            minlevel : 6,
            description : desc([
                "When I take the atk action, I can use my bns action to direct a crea I've charmed",
                "that can see/hear me to atk. The crea can use it's reaction to make a wea atk",
                "vs a target I choose"
            ]),
            action : ["bonus action", " (w/Attack)"]
        },
        "subclassfeature14" : {
            name : "Infatuate",
            source : ["VSoS", 203],
            minlevel : 14,
            description : desc([
                "As an action, I can touch an incapacitated humanoid",
                "The crea is charmed by me until a remove curse is casted on them, the charmed",
                "condition is removed, or if I use this feature again"
            ]),
            usages : 1,
            recovery : "short rest"
        }
    }
})

// * Cleric Subclasses
// Conflicts with the tempest domain cleric.
RunFunctionAtEnd( function() {
    ClassSubList["cleric-tempest domain"].regExpSearch = /^(?=.*(cleric|priest|clergy|acolyte))(?=.*\b(tempest|storm)\b).*$/i;

    AddSubClass("cleric", "destruction domain", {
        regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*destruction).*$/i,
        subname : "Destruction Domain",
        source : ["VSoS", 204],
        spellcastingExtra : ["burning hands", "thunderwave", "scorching ray", "shatter", "fireball", "protection from energy", "blight", "wall of fire", "cloudkill", "cone of cold"],
        features : {
            "subclassfeature1" : {
                name : "Devastation Initiate",
                source : ["VSoS", 204],
                minlevel : 1,
                description : desc([
                    "I learn 2 cantrips of my choice from the wizard's spell list",
                    "These count as cleric spells for me and don't count against me"
                ]),
                spellcastingBonus : [{
                    name : "Devastation Initiate",
                    "class" : "wizard",
                    level : [0,0],
                    times : 2
                }]
            },
            "subclassfeature2" : {
                name : "Channel Divinity: Calamity",
                source : ["VSoS", 204],
                minlevel : 2,
                description : desc([
                    "As a bonus action, for the next min, whenever I deal dmg with a cleric spell",
                    "if I roll the highest number possible on any of the spell's dmg dice, I can roll",
                    "that die again and add its dmg to the total, rolling again if that number is also",
                    "the highest, and so on. I can roll a total number of dmg dice for this spell equal to",
                    "2\xd7 the number of dmg dice I initially rolled."
                ]),
                action : ["bonus action", ""]
            },
            "subclassfeature6" : {
                name : "Shockwave", 
                minlevel : 6,
                source : ["VSoS", 204],
                description : desc([
                    "Once per turn when I cast a 1st level or higher cleric spell that deals fire, force",
                    "lightning, radiant, or thunder dmg, I create a 5 ft rad shockwave around a crea that",
                    "was dmg'd by this spell. Each obj in the area takes dmg equal to 2\xd7 dmg dealt to the",
                    "crea, ignoring the obj dmg threshold. Only obj not being worn or carried are affected"
                ]),
                usages : 1,
                recovery : "turn"
            },
            "subclassfeature8" : {
                name : "Potent Spellcasting",
                source : ["VSoS", 205],
                minlevel : 8,
                description : desc("I add my Wisdom modifier to the damage I deal with my cleric cantrips"),
                calcChanges : GenericClassFeatures["potent spellcasting"].calcChanges
            },
            "subclassfeature17" : {
                name : "Havoc Spell",
                source : ["VSoS", 205],
                minlevel : 17,
                description : desc([
                    "I can expend a SS as a bns action when I deal dmg to a crea w/ a cleric spell",
                    "The crea takes radiant dmg equal to 2d6+1d6/SL (max 5d6) per slot above 1st-level"
                ]),
                action : ["action", " (max 5d6)"]
            }
        }
    })
});

AddSubClass("cleric", "madness domain", {
    regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*madness).*$/i,
    subname : "Madness Domain",
    source : ["VSoS", 205],
    spellcastingExtra : ["tasha's hideous laughter", "silent image", "blindness/deafness", "detect thoughts", "confusion", "hallucinatory terrain", "dream", "modify memory"],
    features : {
        "subclassfeature1" : {
            name : "Unhinged Initiate", 
            source : ["VSoS", 205],
            minlevel : 1,
            description : desc([
                "I learn a random cantrip from the wizard spell list, chosen by the GM",
                "This counts as a cleric spell and doesn't count against me",
                "Whenever I finish a long rest, the GM can change the cantrip"
            ]),
            // works similar to the strixhaven primer
            eval : function() {
                CurrentSpells["cleric-unhinged initiate"] = {
                    name : "Unhinged Initiate",
                    ability : "cleric",
                    list : { "class" : "wizard", level : [0,0]},
                    known : {cantrips : 1},
                    bonus : {
                        bon0 : {
                            name : 'Either select a cantrip',
                            spells : []
                        },
                        bon1 : {
                            name : 'or just select "Full List"',
                            spells : []
                        },
                        bon2 : {
                            name : 'on the bottom left',
                            spells : []
                        }
                    },
                    typeList : 4,
                    refType : "class",
                    allowUpCasting : true,
                    firstCol : ""
                }
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
            removeeval : function() {
                delete CurrentSpells["cleric-unhinged initiate"];
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
        },
        "subclassfeature1.1" : {
            name : "Lunatic Insight",
            source : ["VSoS", 205],
            minlevel : 1,
            description : desc([
                "I can add my Prof. Bonus to ability checks if the check doesn't",
                "already include my Prof. Bonus and the d20 roll is even"
            ])
        },
        "subclassfeature2" : {
            name : "Channel Divinity: Temporary Insanity",
            source : ["VSoS", 205],
            minlevel : 2,
            description : desc([
                "As an action, I can force a crea w/in 60 ft to make a Wis save or fall",
                "prey to madness for 1 min, rolling on the madness table (page 3 notes)",
                "A crea can repeat the save whenever it takes dmg"
            ]),
            toNotesPage : [{
                name : "Temporary Insanity: Madness Table",
                source : ["VSoS", 205],
                note : desc([
                    "d20      Effect",
                    "1-5       Aphasia: The crea can't speak, cast spells, or understand others",
                    "6-10     Delusion: When the crea atks or targets a crea with a spell or effect, roll a d20",
                    "            On an odd roll, it misses or the spell or effect fails",
                    "11-15   Frenzy: The crea is frenzied. While frenzied, the crea chooses the tgt",
                    "            of its atks, spells, and abilities randomly among visible creas. w/in range",
                    "            It must make an opp. atk if any crea provokes one",
                    "16-20   Vertigo: The crea falls prone at the end of each of its turns if",
                    "            it's not learning against something"
                ]),
                page3notes : true
            }],
            action : ["action", ""]
        },
        "subclassfeature6" : {
            name : "Fragmented Mind", 
            source : ["VSoS", 205],
            minlevel : 6,
            description : desc([
                "I have adv. on saves vs charmed and frightened, and effects",
                "that would sense my emotions or read my thoughts",
                "If I converse for 10 mins w/ a crea, I can bestow this benefit to them for 1 hr"
            ]),
            savetxt : { adv_vs : ["charmed", "frightened", "sense my emotions or read my thoughts"] },
        },
        "subclassfeature8" : {
            name : "Potent Spellcasting",
            source : ["VSoS", 205],
            minlevel : 8,
            description : desc("I add my Wisdom modifier to the damage I deal with my cleric cantrips"),
			calcChanges : GenericClassFeatures["potent spellcasting"].calcChanges
        },
        "subclassfeature17" : {
            name : "Embrace Unreality",
            source : ["VSoS", 205],
            minlevel : 17,
            description : desc([
                "As an action, I can change the rules of reality in a 120 ft rad centered on a point",
                "I choose w/in 60 ft for 1 min, and choose one of the following rules:",
                "\u2022 No Up, No Down: Each crea and obj w/in the area is weightless, as per levitate",
                "\u2022 Opposite Day: If a crea has adv, it has disadv. instead, and vice versa",
                "\u2022 Red Light, Green Light: A crea cannot move on its turn. At the start of each round of",
                "  combat, each crea simultaneously chooses where to move and moves to that space",
                "  If two or more crea move to the same space, they collide and knocked prone",
                "\u2022 Through the Looking Glass: At the start of a crea turn, roll any die.",
                "  On an odd roll, they double in size, and an even halves the size, as per enlarge/reduce"
            ]),
            usages : 1,
            recovery : "long rest"
        }
    }
})

AddSubClass("cleric", "pestilence domain", {
    regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*pestilence).*$/i,
    subname : "Pestilence Domain",
    source : ["VSoS", 206],
    spellcastingExtra : ["bane", "detect poison and disease", "blindess/deafness", "ray of enfeeblement", "bestow curse", "remove curse", "blight", "confusion", "contagion", "insect plague"],
    features : {
        "subclassfeature1" : {
            name : "Carrier",
            source : ["VSoS", 206],
            minlevel : 1,
            description : desc([
                "I am immune to disease and the poisoned condition",
                "Additionally, roll a d8 to choose a random sympton that afflict me (page 3 notes)"
            ]),
            toNotesPage : [{
                name : "Carrier",
                source : ["VSoS", 206],
                note : desc([
                    "d8    Result",
                    "1     I'm always accompanied by a loud, sickening cough",
                    "2     One of my limbs is black and withered, but functional",
                    "3     The sclera and iris of one or both eyes are blood red",
                    "4     Intense shivers comes at me in waves from mild trembles to great shudders",
                    "5     Numerous growths and tumors lump my body and hunch my back",
                    "6     My skin is riddled with boils and sores",
                    "7     My body is horrifically gaunt",
                    "8     Constantly fevered, my skin is hot and covered in sweat",
                ])
            }],
            savetxt : {
                immune : ["disease", "poisoned"]
            }
        },
        "subclassfeature1.1" : {
            name : "Bonus Proficiency",
            source : ["VSpS", 206],
            minlevel : 1,
            description : desc([
                "I gain proficiency with heavy armor"
            ]),
            armorProfs : [false, false, true, false]
        },
        "subclassfeature1.2" : {
            name : "Tumor",
            source : ["VSoS", 206],
            minlevel : 1,
            description : desc([
                "When a crea w/in 5 ft hits me w/ an atk, I can use my rea to poison them",
                "The crea must make a Con save or be poisoned for 1 min",
                "It can reroll the save at the end of each of its turns"
            ]),
            action : ["reaction", ""],
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature2" : {
            name : "Channel Divinity: Infection",
            source : ["VSoS", 207],
            minlevel : 2,
            description : desc([
                "As an action, I can touch a crea w/in reach to make a Con save",
                "On a fail, it suffers one of the following diseases:",
                "\u2022 Bloodmore: When the crea takes blud./pierce./slash. it loses 1d6 hp",
                "\u2022 Joint Lock: The crea can move up to 15 ft or \u00BD its spd, whichever is lower, on its turn",
                "\u2022 Ruby-Eye: The crea can see normally up to 5 ft, but is blind beyond this"
            ]),
            action : ["action", ""]
        },
        "subclassfeature6" : {
            name : "Fester",
            source : ["VSoS", 207],
            minlevel : 6,
            description : desc([
                "I gain the following:",
                "\u2022 I can deal poison dmg instead of necrotic or radiant dmg",
                "\u2022 I ignore resistance to poison dmg",
                "\u2022 My cleric spells and abilities ignore immunity to the poisoned condition",
                "  and being diseased. A crea immune to poisoned or disease instead has adv. on",
                "  saving throws to avoid or end being poisoned or diseased by my cleric spells or abilities"
            ])
        },
        "subclassfeature8" : {
			name : "Divine Strike",
			source : ["VSoS", 207],
			minlevel : 8,
			description : desc(["Once per turn, when I hit a creature with a weapon attack, I can do extra damage"]),
			additional : levels.map(function (n) {
				if (n < 8) return "";
				return "+" + (n < 14 ? 1 : 2) + "d8 poison dmg";
			}),
			calcChanges : {
				atkAdd : [
					function (fields, v) {
						if (classes.known.cleric && v.isWeapon) {
							fields.Description += (fields.Description ? '; ' : '') + 'Once per turn +' + (classes.known.cleric.level < 14 ? 1 : 2) + 'd8 poison damage';
						}
					},
					"Once per turn, I can have one of my weapon attacks that hit do extra poison damage."
				]
			}
		},
        "subclassfeature17" : {
            name : "Viral Infection",
            source : ["VSoS", 207],
			minlevel : 17,
            description : desc([
                "When I use Infection, the target also has disadv. on abilit checks and saves",
                "using one ability score of my choice while afflicted",
                "Whenever a target of Infection is w/in 5 ft of another crea, I can use my rea.",
                "to cause it to spread; the crea must make a Con save or be infected w/ the",
                "same disease as the target for 1 min"
            ]),
            action : ["reaction", " (Infection)"]
        }
    }
})

AddSubClass("cleric", "rum domain", {
    regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*rum).*$/i,
    subname : "Rum Domain",
    source : ["VSoS", 207],
    spellcastingExtra : ["charm person", "sleep", "calm emotions", "hangover", "hypnotic pattern", "slow", "confusion", "death ward", "greater restoration", "modify memory"],
    features : {
        "subclassfeature1" : {
            name : "Drunken Sway",
            source : ["VSoS", 207],
            minlevel : 1,
            description : desc([
                "I gain proficiency with martial weapons",
                "If not wearing armor or wielding a shield, my AC is 10 + my Dex mod + my Wis mod"
            ]),
            armorOptions : [{
				regExpSearch : /^(?=.*drunken)(?=.*sway).*$/i,
				name : "Drunken Sway",
				source : ["VSoS", 207],
				ac : "10+Wis",
				affectsWildShape : true,
				selectNow : true
			}],
            armorProfs : [false, false, true, false]
        },
        "subclassfeature1.1" : {
            name : "Cup Floweth Over",
            source : ["VSoS", 207],
            minlevel : 1,
            description : desc([
                "As an action, I can fill my mug with beer or rum, and only I can drink it",
                "I suffer no ill effects from any amount of alcohol; though rosy-cheeked and",
                "and slurred of speech, I remain clear of thought and steadfast on my feet",
                "I also learn legendary libation",
            ]),
            spellcastingBonus : [{
                name : "Cup Floweth Over",
                spells : ["legendary libation"],
                selection : ["legendary libation"],
                times : 1
            }]
        },
        "subclassfeature2" : {
            name : "Channel Divinity: Intoxicate",
            source : ["VSoS", 207],
            minlevel : 2,
            description : desc([
                "When a visible crea makes an atk, I can use my rea to try to poison them",
                "They must make a Con save vs my spell save DC, or be poisoned and have disadv.",
                "on saving throws for 1 min. It can repeat the save at the end of each of its turns"
            ]),
            action : ["reaction", ""]
        },
        "subclassfeature6" : {
            name : "Rumrunner",
            source : ["VSoS", 208],
            minlevel : 6,
            description : desc([
                "Whenever a hostile crea moves, I can use my rea. to move up to \u00BD my speed",
                "This movement doesn't provoke opportunity atks from the moving crea"
            ]),
            action : ["reaction", ""]
        },
        "subclassfeature8" : {
			name : "Divine Strike",
			source : ["VSoS", 208],
			minlevel : 8,
			description : desc(["Once per turn, when I hit a creature with a weapon attack, I can do extra damage"]),
			additional : levels.map(function (n) {
				if (n < 8) return "";
				return "+" + (n < 14 ? 1 : 2) + "d8 weapon dmg type";
			}),
			calcChanges : {
				atkAdd : [
					function (fields, v) {
						if (classes.known.cleric && v.isWeapon) {
							fields.Description += (fields.Description ? '; ' : '') + 'Once per turn +' + (classes.known.cleric.level < 14 ? 1 : 2) + 'd8 ' + fields.Damage_Type + ' dmg';
						}
					},
					"Once per turn, I can have one of my weapon attacks that hit do extra damage."
				]
			}
		},
        "subclassfeature17" : {
            name : "Next Round's On Me",
            source : ["VSoS", 208],
			minlevel : 17,
            description : desc([
                "As an action, I choose up to 6 visible allies w/in 60 ft. For the next min, they gain",
                "adv. on Int/Wis/Cha saves and subtract my Wis mod from blud/pierce/slash dmg they take",
            ]),
            action : ["action", ""]
        }
    }
})

AddSubClass("cleric", "travel domain", {
    regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*travel).*$/i,
    subname : "Travel Domain",
    source : ["VSoS", 208],
    spellcastingExtra : ["feather fall", "longstrider", "find steed", "misty step", "fly", "haste", "dimension door", "freedom of movement", "passwall" ,"teleportation circle"],
    features : {
        "subclassfeature1" : {
            name : "Well-Traveled",
            source : ["VSoS", 208],
			minlevel : 1,
            description : desc([
                "I gain proficiency with 4 finesse or ranged weapons of my choice",
                "Additionally, I learn two languages"
            ]),
            languageProfs : [2]
        },
        "subclassfeature1.1" : {
            name : "Jaunt",
            source : ["VSoS", 208],
			minlevel : 1,
            description : desc([
                "I can use my bns action to mvoe 10 ft w/out provoking opp. atks",
                "I can do this a number of times equal to my Wis mod (min. 1) per long rest"
            ]),
            usages : "Wisdom modifier per ",
            usagescalc : "event.value = Math.max(What('Wis Mod'), 1);",
            recovery : "long rest",
            action : ["bonus action", ""]
        },
        "subclassfeature6" : {
            name : "Channel Divinity: Divine Transposition",
            source : ["VSoS", 208],
			minlevel : 6,
            description : desc([
                "While traveling, I and up to 10 crea traveling w/ me move supernaturally",
                "We always travel at a fast pace, ignoring delays caused by rough terrain, weather",
                "and other non-magical obstacles; This works on other planes of existence as well",
                "We can travel for 12 hrs instead of 8, before making Con saves for a forced march",
                "Additionally, we are unaffected by difficult terrain"
            ])
        },
        "subclassfeature8" : {
			name : "Divine Strike",
			source : ["VSoS", 208],
			minlevel : 8,
			description : desc(["Once per turn, when I hit a creature with a weapon attack, I can do extra damage"]),
			additional : levels.map(function (n) {
				if (n < 8) return "";
				return "+" + (n < 14 ? 1 : 2) + "d8 force type";
			}),
			calcChanges : {
				atkAdd : [
					function (fields, v) {
						if (classes.known.cleric && v.isWeapon) {
							fields.Description += (fields.Description ? '; ' : '') + 'Once per turn +' + (classes.known.cleric.level < 14 ? 1 : 2) + 'd8 force damage';
						}
					},
					"Once per turn, I can have one of my weapon attacks that hit do extra force damage."
				]
			}
		},
        "subclassfeature17" : {
            name : "Godspeed",
            source : ["VSoS", 208],
			minlevel : 17,
            description : desc([
                "My walking speed doubles",
                "If I make an atk \u226530 ft from where I begain my turn",
                "my Divine Strike's extra dmg increases to 4d8"
            ]),
            speed : {
                walk : { spd : "*2", enc : "*2" }
            }
        }
    }
})

AddSubClass("cleric", "wealth domain", {
    regExpSearch : /^(?=.*(cleric|priest|clergy|acolyte))(?=.*wealth).*$/i,
    subname : "Wealth Domain", 
    source : ["VSoS", 209],
    spellcastingExtra : ["identify", "unseen servant", "arcane lock", "locate object", "glyph of warding", "tongues", "fabricate", "secret chest", "creation", "geas"],
    features : {
        "subclassfeature1" : {
            name : "Appraisal",
            source : ["VSoS", 209],
            minlevel : 1,
            description : desc([
                "As an action, I can accurately determine the market value of any obj.",
                "This also includes their second-hand worth",
                "I can use my Wis mod instead of Cha for any check to buy, sell, or haggle"
            ]),
            additional : "Add Wis mod to Cha checks to buy/sell/haggle"
        },
        "subclassfeature1.1" : {
            name : "Leverage",
            source : ["VSoS", 209],
            minlevel : 1,
            description : desc([
                "When I cast spell requiring material comp with a specific cost, I only require",
                "half the materials of that value to cast the spell"
            ])
        },
        "subclassfeature2" : {
            name : "Channel Divinity: Riches",
            source : ["VSoS", 209],
            minlevel : 2,
            description : desc([
                "When I reduce a hostile crea to 0 hp, I can make an explosion of coins around them",
                "The total number of gold pieces is equal to the Monster's XP/10, rounded down",
                "I can use this once, regaining the ability to do so after a long rest"
            ]),
            usages : 1,
            recovery : "long rest"
        },
        "subclassfeature6" : {
            name : "Bribe",
            source : ["VSoS",209],
            minlevel : 6,
            description : desc([
                "As an action, I can choose a visible hostile crea to make a Cha save vs my spell save DC",
                "On a fail, I can bribe it, teleporting into the crea possession, costing an amount equal",
                "to \u00BD the crea XP. Once completed, the crea can't be hostile to us for 24 hours",
                "It ends early if the crea takes dmg from me or my allies",
                "I cant bribe a crea w/ \u22643 Int or any crea the GM deems inappropriate"
            ]),
            action : ["action", ""]
        },
        "subclassfeature8" : {
            name : "Potent Spellcasting",
            source : ["VSoS", 209],
            minlevel : 8,
            description : desc("I add my Wisdom modifier to the damage I deal with my cleric cantrips"),
            calcChanges : GenericClassFeatures["potent spellcasting"].calcChanges
        },
        "subclassfeature17" : {
            name : "Tycoon",
            source : ["VSoS", 209],
            minlevel : 17,
            description : desc([
                "I dont need to provide material comp for any cleric spell",
                "Even if it's is costly or consumed by the spell",
                "I grant the benefit of Leverage to friendly crea w/in 60 ft of me"
            ]),
            additional : "60-ft rad; Leverage benefits",
            calcChanges : {
                spellAdd : [
                    function (spellKey, spellObj, spName) {
                        if((/cleric/i).test(spName) && (SpellsList[spellKey].compMaterial || spellObj.compMaterial)) {
                            if (spellObj.components) spellObj.components = spellObj.components.replace(/,?[RM][\u0192\u2020]?/ig, '');
                            if (spellObj.compMaterial) spellObj.compMaterial = "Cleric spells don't require material comp even if it's costly or consumed";
                            ["description", "descriptionMetric", "descriptionShorter", "descriptionShorterMetric"].forEach (function (attr) {
                                if (!spellObj[attr]) return;
                                spellObj[attr] = spellObj[attr].replace(/ \(\d+k? ?gp( cons\.?)?\)/i, '');
                            });
                            return true;
                        }
                    },
                    "My cleric spells don't require any material components even if it's costly or consumed by the spell"
                ]
            }
        }
    }
})

// * Druid subclasses
AddSubClass("druid", "circle of the city", {
    subname : "Circle of the City",
    regExpSearch : /^(?=.*(druid|shaman))(?=.*\bcity\b).*$/i,
    source : ["VSoS", 210],
    features : {
        "subclassfeature2" : {
            name : "Urban Arcana",
            source : ["VSoS", 210],
            minlevel : 2,
            description : desc([
                "My druid spells lose the aesthetic trappings of nature",
                "Instead they appear inspired by the jungles of buildings, columns, and cobblestone",
                "Additionally, I can wear armor and wield shields made of metal"
            ]),
        },
        "subclassfeature2.1" : {
            name : "Streettalk",
            source : ["VSoS", 210],
            minlevel : 2,
            description : desc([
                "I have adv. on Investigation checks to gather rumors, or find a crea/location w/in",
                "urban environments; I also know thieves' cant"
            ]),
            languageProfs : ["Thieves' Cant"]
        },
        "subclassfeature2.2" : {
            name : "City Shape",
            source : ["VSoS", 210],
            minlevel : 2,
            description : desc([
                "As an action, I can expend a use of wild shape to warp the city around me",
                "I can choose one of the following effects found on page 3 notes"
            ]),
            spellcastingBonus : [{
                name : "City Shape",
                spells : ["passwall"],
                selection : ["passwall"],
                times : 1
            }],
            toNotesPage : [{
                name : "City Shape: Wild Shape Effects",
                source : ["VSoS", 210],
                note : desc([
                    "\u2022 Cobbleshift: I can manipulate comp. of a constructed floor w/in 60 ft",
                    "  Each comp. can move up to 1 ft w/out causing structure instabilities",
                    "  When I use this effect, I can cause any sections to become diff. terrain",
                    "  I can cause any crea standing in those sections to make a Dex save",
                    "  vs my spell save DC or fall prone; I'm unaffected by this diff. terrain",
                    "  As an action on subsequent turns, I can raise up to 3 walls from the floor",
                    "  Each wall is 2\u00BD ft tall, 5 ft wide, and 1 ft thick",
                    "  It provides \u00BD cover to medium creatures, causing no structure instabilities",
                    "  This lasts for 1 min, after which all comp and walls revert to their original position",
                    "\u2022 Passwall: I can cast passwall w/out expending SS or material comp",
                    "\u2022 Wall Warp: A visible wall w/in 30 ft shifts, grows, shrinks, or rotates",
                    "  The wall must have all of the following:",
                    "  \u2022 contiguous surface w/out corners",
                    "  \u2022 at most 1 ft thick",
                    "  \u2022 made out of wood, plaster, stone, or not be naturally occurring",
                    "  It must remain vertical, and I can move it w/in a 60 ft rad from its previous position",
                    "  Its new position can't be occupied by a crea or obj",
                    "  Changes cause no structure instability; Choosing grow/shrink only changes it vertically",
                    "  After 1 minute, the wall reverts to its original size and position"
                ]),
                page3notes : true
            }]
        },
        "subclassfeature6" : {
            name : "Whispers of Walls",
            source : ["VSoS", 211],
            minlevel : 6,
            description : desc([
                "As an action, I can touch a constructed part of a building",
                "This can be a wall, pillar, ceiling, floor, etc.",
                "I learn the how many humanoids are w/in the building and w/in each room",
                "If there are more than 50 humanoids, I only detect the closest 50"
            ]),
            action : ["action", ""]
        },
        "subclassfeature10" : {
            name : "Breath of Smog",
            source : ["VSoS", 211],
            minlevel : 10,
            description : desc([
                "As a rea when I take dmg, I can exhale a 10-ft rad sphere of heavily obscured toxic smoke",
                "A crea w/in the smoke at the start of its turn must make a Con save vs my spell save DC",
                "On a fail, it's poisoned until the start of its nxet turn; This doesn't affect me",
                "The smog clears after 1 min, or if the wind speed is 10 mph after 4 rnds or 20 mph after 1 rnd",
                "Once I use this ability, I can't do so agin until I use City Shape or after a short/long rest"
            ]),
            usages : 1,
            recovery : "short rest",
            additional : "City Shape or SR/LR",
            action : ["reaction", ""]
        },
        "subclassfeature14" : {
            name : "Twisting Architecture",
            source : ["VSoS", 211],
            minlevel : 14,
            description : desc([
                "Spending 2 uses of wild shape, I simultaneously activate all the effects of City Shape",
                "I can also warp gravity along any surface w/in 60 ft for 1 min",
                "All crea w/in 15 ft fall toward it as if it were the ground",
                "A crea can walk on it even if perpendicular or upside down",
                "All crea and obj fall from the affect surfaces after the duration ends",
            ])
        }
    }
})

AddSubClass("druid", "circle of the deep", {
    regExpSearch : /^(?=.*(druid|shaman))(?=.*\bdeep\b).*$/i,
    source : ["VSoS", 212],
    features : {
        "subclassfeature2" : {
            name : "Bonus Proficiencies",
            source : ["VSoS", 212],
            minlevel : 2,
            description : desc([
                "I gain proficiency with fishhooks, harpoons, nets, and tridents",
                "While I can't use metal weapons, I can use coral weapons instead",
                "These function the same as normal weapons but cost 2\xd7 if purchased on land"
            ]),
            weaponProfs: [false, false, ["fishhook", "harpoon", "net", "trident"]]
        },
        "subclassfeature2.1" : {
            name : "Aquatic",
            source : ["VSoS", 212],
            minlevel : 2,
            description : desc([
                "I can breathe water as well as air and have a swim equal to my walk speed",
                "This also applies while Wild Shaped, and if the crea. I transform into",
                "doesn't have a swim speed, it gains a swim speed equal to the form's speed"
            ]),
            speed : {
                swim : { spd : "walk", enc : "walk" }
            },
            // Theres no way to apply the speed to the wild shapes dynamically
        },
        "subclassfeature6" : {
            name : "Vortex Attack",
            source : ["VSoS", 212],
            minlevel : 6,
            description : desc([
                "Whenever I am holding a wea and take the atk action, I can atk twice with it",
                "As an action while I'm in water or have \u2264\u00BD my max HP, I can make a melee",
                "atk vs any number of crea w/in 5 ft of me, making separate atk rolls for each"
            ]),
            action : ["action", ""]
        },
        "subclassfeature10" : {
            name : "Ocean's Ally",
            source : ["VSoS", 212],
            minlevel : 10,
            description : desc([
                "I can speak with aquatic crea as per the speak with animals spell",
                "As an action, I can call a Beast of CR 3 or lower that has a native swim to aid",
                "It arrives on my next turn, rolls its own initiative and act on its own turn",
                "It is friendly to me and my allies and follows my commands",
                "If 1 hr passes, or I or an anlly harms it, the effect ends and it leaves"
            ]),
            usages : 1,
            recovery : "short rest"
        },
        "subclassfeature14" : {
            name : "Davy Jone's Locker",
            source : ["VSoS", 212],
            minlevel : 14,
            description : desc([
                "When I hit a crea w/ a melee wea atk, I can deal an extra 1d8 dmg to it",
                "My atks ignore resistance to nonmagical blud, pierce, and slash dmg",
                "They also ignore the dmg threshold of ships and deal double dmg to them"
            ]),
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if(v.isWeapon) {
                            fields.Description += (fields.Description ? '; ' : '') + "+1d8 weapon dmg; \xd7 to ships"
                        }
                    }
                ]
            }
        }
    }
})

// * Monk subclasses
AddSubClass("monk", "way of the bow", {
    regExpSearch : /^(?=.*bow)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of the Bow",
    source : [["VSoS", 222]],
    features : {
        "subclassfeature3" : {
            name : "Archery Fighting Style",
            description : desc([
                "I gain a +2 bonus to attack rolls I make with ranged weapons",
                "I can't choose a style again even if I get to choose later on"
            ]),
            minlevel : 3,
            source : [["VSoS", 222]],
            calcChanges : {
                atkCalc : [
                    function (fields, v, output) {
                        if (v.isRangedWeapon && !v.isNaturalWeapon && !v.isDC) output.extraHit += 2;
                    },
                    "My ranged weapons get a +2 bonus on the To Hit."
                ]
            }
        },
        "subclassfeature3.1" : {
            name : "Bow Arts",
            source : [["VSoS", 222]],
            minlevel : 3,
            description : levels.map(function(n) { 
                if(n<3) return ""
                var description = desc([
                    "I gain proficiency with longbows and shortbows, which are considered monk weapons",
                    "Any ranged atks I make within 5 ft of a hostile creature do not have disadvantage",
                    "I can spend ki points to use the Flurry of Arrows and Soul Arrow (see page 3 notes)"
                ]);
                
                if(n >= 6) {
                    description += desc([
                        "At 6th level, I can make a ranged weapon attack to deliver a Stunning Strike"
                    ])
                }
            
                // Add the level 6 description if the level is 6 or higher
                return description;        
            }),
            weaponProfs : [true, false, ["Longbow, Shortbow"]],
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if((/longbow|shortbow/i).test(v.baseWeaponName + v.WeaponName) && !v.isSpell && !v.theWea.monkweapon && !v.theWea.special) {
                            v.theWea.monkweapon = true;
                            fields.Proficiency = true;
                        } 
                    },
                    "I gain proficiency with longbows and shortbows which count as monk weapons.",
                    1
                ]
            },
            additional : "1 ki point",
            toNotesPage : [{
                page3notes : true,
                name : "Bow Arts: Flurry of Arrows and Soul Arrow",
                note : desc([
                    "\u2022 Flurry of Arrows: Immediately after I take the atk action on my turn to make a", 
                    "  ranged wea atk or unarmed strike, I can spend 1 ki point to make an additional ranged",
                    "  wea atk as a bns action",
                    "\u2022 Soul Arrow: When I take the atk action on my turn to make a ranged wea atk, I can", 
                    "  spend 1 ki point to fire a soul arrow for the first atk. This arrow ignores partial", 
                    "  cover and deals extra dmg equal to my Wis mod, and does not consume ammunition"
                ])
            }]
        },
        "subclassfeature6" : {
            name : "Intercepting Shot",
            source : [["VSoS", 222]],
            minlevel : 6,
            description : desc([
                "When a visible crea makes an atk against me, I can make a ranged atk roll",
                "as a rea to interrupt the attack. If my roll is greater than the result of", 
                "the attacker's, I can reduce the atk roll targeting me by 5 (min. 1)"
            ]),
            action : [["reaction", ""]]
        },
        "subclassfeature11" : {
            name : "Serenity of the Wind",
            source : [["VSoS", 222]],
            minlevel : 11,
            description : levels.map(function(n) {
                if(n<11) return "";
                var description = desc([
                    "I can use my bns action and spend 1 ki point to gain blindsight",
                    "The range is 120 ft and lasts until the end of my next turn"
                ]);
            
                // Append additional description based on level
                if (n >= 17) {
                    description += desc([
                        "At 17th level, I always have blindsight out to a range of 30 ft"
                    ]);
                }
            
                return description;
            }),
            additional : "1 ki point",
            action : [["bonus action", "Serenity of the Wind (1 ki)"]]
        },
        "subclassfeature17" : {
            name : "Serenity of the Wind: Blindsight",
            source : [["VSoS", 222]],
            minlevel : 17,
            vision : [["blindsight", 30]]
        },
        "subclassfeature17" : {
            name : "Zen Archery",
            source : [["VSoS", 222]],
            minlevel : 17,
            description : desc([
                "When I miss a ranged wea atk on my turn, I can immediately make another",
                "vs the same target. I can do this once per each of my turns"
            ])
        }
    }
})

AddSubClass("monk", "way of the flagellant", {
    regExpSearch : /^(?=.*flagellant)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of the Flagellant",
    source : [["VSoS", 223]],
    features : {
        "subclassfeature3" : {
            name : "Ascetic Implements",
            source : [["VSoS", 223]],
            minlevel : 3,
            description : desc([
                "I gain proficiency with flails and whips which count as monk weapons.",
                "I can choose to deal slash. instead of blud. dmg with my unarmed strikes."
            ]),
            weaponProfs : [true, false, ["Flail, Whip"]],
            calcChanges : {
                atkAdd : [
                    function(fields, v) {
                        if((/flail|whip/i).test(v.baseWeaponName) && !v.isSpell && !v.theWea.monkweapon && !v.theWea.special) {
                            v.theWea.monkweapon = true;
                            fields.Proficiency = true;
                        } 
                    },
                    "I gain proficiency with flails and whips which count as monk weapons.",
                    1
                ]
            }
        },
        "subclassesfeature3.1" : {
            name : "Penitent Lash",
            source : [["VSoS", 223]],
            minlevel : 3,
            description : desc([
                "At the start of my turn, I can spend 1 ki point to deal a d4 slash. dmg to myself",
                "For every d4 I take, I gain adv. on an atk I make before the end of my turn",
                "Each atk must be with a monk weapon or unarmed strike. Reducing the dmg in anyway",
                "will cause this ability to have no effect",
            ]),
            additional : "1 ki point"
        },
        "subclassfeature6" : {
            name : "Art of Punishment",
            source : [["VSoS", 223]],
            minlevel : 6,
            description : desc([
                "I learn Branding Palm, Electroshock Strike, and Scissorhand Technique (page 3 notes)",
            ]),
            toNotesPage : [{
                name : "Art of Punishment",
                source : [["VSoS", 223]],
                page3notes : true,
                note : desc([
                    "\u2022 Branding Palm: When I hit a crea with an unarmed strike, I can spend a bns action and", 
                    "  1 ki point to brand them. The next atk that hits a branded crea w/in the next minute deals", 
                    "  an extra 2d8 fire dmg. This becomes 3d8 at 11th and 4d8 at 17th level.",
                    "\u2022 Electroshock Strike: After I take the attack action on my turn, I can spend 1 ki point", 
                    "  to cast fire dmg shocking grasp as a bns action. Wis is my spellcasting ability for this",
                    "\u2022 Scissorhand Technique: If I deal slashing damage using a monk weapon to a crea, I can", 
                    "  spend 1 ki point to make the target bleed. Constructs, oozes, and undead aren't affected", 
                    "  A crea with bleeding loses 1d6 hp at the start of each of their turns for each of its bleeding", 
                    "  wounds it has unless it uses it action to stop all of its wounds from bleeding. A bleeding", 
                    "  target cannot regain hp and can have a number of wounds up to my Proficiency bonus.",
                ])
            }],
            additional : "1 ki point",
            action : [["bonus action", "Branding Palm (1 ki)"], ["bonus action", "Electroshock (1 ki)"]],
            spellcastingBonus : [{
                spellcastingAbility : 5,
                name : "Electroshock",
                spells : ["shocking grasp"],
                selection : ["shocking grasp"],
                firstCol : "1 ki"
            }]
        },
        "subclassfeature11" : {
            name : "Purity Through Pain",
            source : [["VSoS", 223]],
            minlevel : 11,
            description : desc([
                "When I take dmg that exceeds my character level, I can use my rea to regain 1d4 ki points",
                "I can do this a number of times equal to Wisdom mod (min 1) per long rest."
            ]),
            usages : "Wisdom modifier per ",
            usagescalc : "event.value = Math.max(1, What('Wis Mod'));",
            action : [["reaction", ""]]
        },
        "subclassfeature17" : {
            name : "Exsanguinate",
            source : [["VSoS", 223]],
            minlevel : 17,
            description : desc([
                "When I use Penitent Lash, I can choose to increase the damage to 6d4 or more",
                "If I do so, I gain all the benefits of Penitent Lash, and all unarmed strikes", 
                "deal an extra 1d4 slashing damage until the end of my turn."
            ])
        }
    }
})

AddSubClass("monk", "way of the four fists", {
    regExpSearch : /^(?=.*\b(four|4)\b)(?=.*fists?)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of the Four Fists",
    source : [["VSoS", 224]],
    features : {
        "subclassfeature3" : {
            name : "Grasp of the Monkey",
            source : [["VSoS", 224]],
            minlevel : 3,
            description : desc([
                "I gain a climbing speed equal to my walking speed, my jump distance is doubled,",
                "and I have adv. on ability checks and saving throws made to climb, maintain balance,", 
                "and grip objects such as ledges and ropes. I can manipulate objects with my hands,",
                "feet, or tail, but cannot attack with an object held by my tail."
            ]),
            speed : { climb : { spd : "walk", enc : "walk" } },
            savetxt : { text : ["Adv. on saves and checks made to climb, balance, and grip"] }
        },
        "subclassesfeature3.1" : {
            name : "Simian Swift",
            source : [["VSoS", 224]],
            minlevel : 3,
            description : desc([
                "When I roll init. and not surprised, I can spend 1 ki point to move up to half my", 
                "speed or jump into the air and make an unarmed strike."
            ]),
            additional : "1 ki point"
        },
        "subclassfeature6" : {
            name : "Nimbus",
            source : [["VSoS", 224]],
            minlevel : 6,
            description : desc([
                "As a bonus action, I can summon a cloud to ride on. Until the start of my next turn,", 
                "I have a flying speed equal to my walking speed, and can maintain this effect by", 
                "spending 1 ki point on my turn. Otherwise, I begin to fall if there is nothing to hold", 
                "onto or keep my aloft."
            ]),
            additional : "1 ki point",
            action : [["bonus action", ""]]
        },
        "subclassfeature11" : {
            name : "Uncanny Dodge",
            source : [["VSoS", 224]],
            minlevel : 11,
            description : desc(["As a reaction, I halve the damage of an atk from an attacker that I can see"]),
            action : [["reaction", ""]]
        },
        "subclassfeature17" : {
            name : "Flurry of Limbs",
            source : [["VSoS", 224]],
            minlevel : 17,
            description : desc(["Whenever I use \"Flurry of Blows\" on my turn, I can make 3 unarmed strikes rather than 2."])
        }
    }
})

AddSubClass("monk", "way of the mask", {
    regExpSearch : /^(?=.*mask)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of the Mask",
    source : [["VSoS", 225]],
    abilitySave : 5,
	abilitySaveAlt : 6,
    features : {
        "subclassfeature3" : {
            name : "Crowd Favorite",
            source : [["VSoS", 225]],
            minlevel : 3,
            description : desc([
                "I can choose to add my Cha mod instead of my Wis mod when determining ki save DC", 
                "While wearing no armor and not wielding a shield, my AC is 10 + Str mod + Cha mod."
            ]),
            armorOptions : [{
                regExpSearch : /unarmored defense \(cha\)/i,
                name : "Unarmored Defense (Cha)",
                source : [["VSoS", 225]],
                ac : "10+Str+Cha",
                dex : -10, //do not add our dex mod
                affectsWildShape : true,
                selectNow : true
            }]
        },
        "subclassfeature3.1" : {
            name : "Heavyweight Champion",
            source : [["VSoS", 225]],
            minlevel : 3,
            description : desc([
                "I can wrestle obstacles even if they cannot be conventionally wrestled",
                "I gain the following:",
                "\u2022 I can grapple any crea regardless of size",
                "\u2022 I can use an action to pin a creature grappled by me. I make", 
                "  another grapple check, and if I succeed, we're both restrained until the grapple ends",
                "\u2022 If I have the Grappler feat, I can choose whether a target grappled by me must", 
                "  make a Athletics or Acrobatics check to escape"
            ]),
            action : [["action", "Pin Creature (if grappled)"]]
        },
        "subclassfeature6" : {
            name : "Signature Move",
            source : [["VSoS", 225]],
            minlevel : 6,
            description : desc([
                "I gain a signature move using the \"Choose Feature\" button."
            ]),
            choices : ["Foreign Object", "Headbutt of Justice", "Infinity Suplex"],
            "foreign object" : {
                name : "Foreign Object",
                source : [["VSoS", 225]],
                description : desc([
                    "I am proficient with improvised weapons, which count as monk weapons for me.", 
                    "Once on each of my turns, I can spend 1 ki point to add half of my monk level", 
                    "to the dmg of an improvised weapon."
                ]),
                weaponProfs : [true, false, ["Improvised weapons"]],
                calcChanges : {
                    atkAdd : [
                        function(fields, v) {
                            if(((/improvised/i).test(v.WeaponName + v.baseWeaponName) || (/improvised weapon/i).test(v.theWea.type)) && !v.isSpell && !v.theWea.monkweapon && !v.theWea.special) {
                                v.theWea.monkweapon = true;
                                fields.Proficiency = true;
                            } 
                        },
                        "I gain proficiency with improvised weapons which count as monk weapons.",
                        1
                    ]
                },
                additional : "1 ki point"
            },
            "headbutt of justice" : {
                name : "Headbutt of Justice",
                source : [["VSoS", 225]],
                description : desc([
                    "Once on each of my turns when I miss with an unarmed strike, I can spend", 
                    "1 ki point to follow up with a headbutt. I make another unarmed strike against", 
                    "the target, but the dmg of this atk is 1d8."
                ]),
                additional : "1 ki point"
            },
            "infinity suplex" : {
                name : "Infinity Suplex",
                source : [["VSoS", 225]],
                description : desc([
                    "While I am grappling another crea, I can spend 1 ki point and a bonus action to end", 
                    "the grapple to hurl the target over my shoulder and slam them into the ground, making", 
                    "an atk roll vs the crea. On a hit, they take 2d10 + Str mod of blud. dmg and knocked prone"
                ]),
                additional : "1 ki point"
            }
        },
        "subclassfeature11" : {
            name : "Off the Top Rope",
            source : [["VSoS",225]],
            minlevel : 11,
            description : desc([
                "Once per turn when I fall 5 ft or more immediately before making an unarmed strike", 
                "I can choose to either make it a stunning strike without expending any ki or knock", 
                "the target prone and automatically grapple the target on a hit"
            ]),
            usages : 1,
            recovery : "Turn"
        },
        "subclassfeature17" : {
            name : "Choked Out",
            source : [["VSoS",225]],
            minlevel : 17,
            description : desc([
                "When I pin a creature grappled by me, I can spend 2 ki points to attempt to choke", 
                "the creature out. The creature must make a Con save against my ki save DC", 
                "or be knocked unconscious until the start of my next turn.",
            ]),
            additional : "2 ki points"
        }
    }
})

AddSubClass("monk", "way of the rose", {
    regExpSearch : /^(?=.*rose)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of the Rose",
    source : [["VSoS", 226]],
    features : {
        "subclassfeature3" : {
            name : "Sweet Aroma",
            source : [["VSoS", 226]],
            minlevel : 3,
            description : desc([
                "I have advantage on Persuasion checks related to love and romance",
                "Crea(s) with the Keen Sense trait have disadv. on ability checks made to track me."
            ])
        },
        "subclassfeature3.1" : {
            name : "Blossom Burst",
            source : [["VSoS", 226]],
            minlevel : 3,
            description : desc([
                "I can spend 1 ki point to produce an eruption of flower petals to obscure a crea's vision", 
                "Until the end of its next turn, it can see out to a range of 5 ft but is blind beyond that",
                "The petals follow the crea unless it moves more than 40 ft on its turn or take the dash action"
            ]),
            additional : "1 ki point"
        },
        "subclassfeature6" : {
            name : "Falling Petal Fury",
            source : [["VSoS", 226]],
            minlevel : 6,
            description : desc([
                "Whenever I use Flurry of Blows, I can spend 1 additional ki point to teleport up to 10 ft", 
                "in any direction. This movement can happen before, during, or after the attacks, but can't", 
                "be split into two moves."
            ]),
            additional : "1 ki point"
        },
        "subclassfeature11" : {
            name : "Colors of Love",
            source : [["VSoS", 226]],
            minlevel : 11,
            description : desc([
                "When I finish a long rest, I can choose an aura which lasts until I choose a different one", 
                "and radiates to a range of 5 ft (see page 3 notes)"
            ]),
            toNotesPage : [{
                name : "Colors of Love: Auras",
                note : desc([
                    "\u2022 Pink: I can use the help action as a bonus action to assist an ally in my aura",
                    "\u2022 Red: When a friendly crea in my aura hits an attack, they can use its bonus action", 
                    "  with the attack to deal an extra 1d6 dmg",
                    "\u2022 White: When a friendly crea ends its turn in my aura, it gains my Wis mod in temp hp",
                    "  The crea cannot be myself"
                ]),
                page3notes : true
            }]
        },
        "subclassfeature17" : {
            name : "Wreathed in Thorns",
            source : [["VSoS", 226]],
            minlevel : 17,
            description : desc([
                "When I take dmg from a visible crea within 5 ft of me, I can spend 1 ki point", 
                "as a rea to make an unarmed strike against that creature."
            ]),
            additional : "1 ki point",
            action : [["reaction", "Wreathed in Thorns (1 ki)"]]
        }
    }
})

AddSubClass("monk", "way of street fighting", {
    regExpSearch : /^(?=.*street)(?=.*fighting)((?=.*(monk|monastic))|(((?=.*martial)(?=.*(artist|arts)))|((?=.*spiritual)(?=.*warrior)))).*$/i,
    subname : "Way of Street Fighting",
    source : [["VSoS", 226]],
    features : {
        "subclassfeature3" : {
            name : "Combo",
            source : [["VSoS", 227]],
            minlevel : 3,
            description : desc([
                "On my turn, I gain a +2 bonus to atk rolls of my unarmed strikes", 
                "for each hit that I have made on that target on my turn, to a max of +6", 
                "This bonus resets to 0 if I take damage on my turn."
            ])
        },
        "subclassfeature6" : {
            name : "Iron Fist",
            source : [["VSoS", 227]],
            minlevel : 6,
            description : desc([
                "My unarmed strikes ignore the dmg threshold of objects and deal max dmg to them"
            ])
        },
        "subclassfeature11" : {
            name : "Special Moves",
            source : [["VSoS", 227]],
            minlevel : 11,
            description : desc([
                "I can use ki points to perform the special moves found on the page 3 notes"
            ]),
            action : [["action", "Ki Blast (2 ki)"]],
            toNotesPage : [{
                name : "Special Moves",
                page3notes : true,
                note : desc([
                    "\u2022 Ki Blast: As an action, I can spend 2 ki points to make a ranged spell atk using Wis as the", 
                    "  spellcasting ability modifier against a crea I can see w/in 120 ft of me. On a hit, the target", 
                    "  takes 6d8 + \u00BD my monk level in force dmg",
                    "\u2022 Uppercut: Immediately after I take the attack action on my turn, I can spend 1 ki point to", 
                    "  make an unarmed strike as a bns action. On a hit, if the crea is \u2264Large and doesn't have all", 
                    "  of its hp, it takes dmg as normal and is then knocked prone",
                    "\u2022 Whirlwind Strike: When I make a melee atk on my turn against a visible crea, I can spend 1 ki", 
                    "  point to lunge up to 15 ft toward the target before making the atk. This movement doesn't", 
                    "  provoke opportunity atks. I can peform this movement even if it causes me to travel through", 
                    "  the air, though I fall if I do not land on solid ground after making the attack"
                ])
            }],
            weaponOptions : [{
				regExpSearch : /ki blast/i,
				name : "Ki Blast",
				source : [["VSoS", 227]],
				ability : 5,
				range : "120 ft",
				damage : [6, 8, "Force"],
				description : "",
                type : "AlwaysProf", // This is not a weapon or a spell
                isNotWeapon : true, 
                isAlwaysProf : true,
                special : true, // prevents calculations with other features
                abilitytodamage : false, // do not add our wisdom mod
				selectNow : true
            }],
            calcChanges : {
				atkCalc : [
					function (fields, v, output) {
						if ((/ki blast/i).test(v.WeaponTextName)) {
							output.extraDmg += Math.floor(classes.known.monk.level/2);
						};
					},
					'',
					1
				]
			}
        },
        "subclassfeature17" : {
            name : "K.O.",
            source : [["VSoS", 227]],
            minlevel : 17,
            description : desc([
                "I can use my action and 3 ki points to make an unarmed strike against a crea w/in my reach", 
                "On a hit, the target takes dmg as normal, and if it has \u2264100 hp, it is reduced to 0 hp,", 
                "knocked unconscious, and becomes stable"
            ]),
            usages : 1,
            recovery : "long rest"          
        }
    }
})

// * Paladin Subclasses
AddSubClass("paladin", "oath of storms", {
    regExpSearch : /^(((?=.*(storms(s)?))((?=.*paladin)|((?=.*(exalted|sacred|holy|divine))(?=.*(knight|fighter|warrior|warlord|trooper)))))|((?=.*dark)(?=.*knight))|(?=.*avenger)).*$/i,
    subname : "Oath of Storms",
    source : ["VSoS", 232],
    features : {
        "subclassfeature3" : {
            name : "Channel Divinity: Thunderous Revenge",
            source : ["VSoS", 232],
            minlevel : 3,
            description : desc([
                "Immediately after a visible crea w/in 30 ft deals dmg to me with an atk",
                "I can use my rea and force the atker to make a Wis save",
                "The atker takes dmg equal to the dmg dealt to me on a failed save, or \u00BD on success",
            ]),
            action : ["reaction", ""],
            spellcastingExtra : ["fog cloud", "thunderwave", "gust of wind", "hold person", "call lightning", "wind wall", "control water", "ice storm", "commune with nature", "hold monster"]
        },
        "subclassfeature3.1" : {
            name : "Channel Divinity: Walk on Waves",
            source : ["VSoS", 232],
            minlevel : 3,
            descroption : desc([
                "As a bonus action, for the next hour I gain the benefits of water walk",
                "Additionally, my spd is 2\xd7 when walking on water"
            ]),
            action : ["bonus action", ""],
            spellcastingBonus : [{
                name : "Channel Divinity",
                spells : ["water walk"],
                selection : ["water walk"],
                times : levels.map(function(n) {
                    return n < 3 ? 0 : 1;
                }),
            }],
            spellChanges : {
                "water walk" : {
                    description : "You can move across any liquid for the duration; rise to surface if underwater; spd is 2\xd7 while on water",
                    changes : "I gain the benefits of water walk, and my speed is doubled while on water"
                }
            }
        },
        "subclassfeature7" : {
            name : "Vortex Aura",
            source : ["VSoS", 232],
            minlevel : 7,
            additional : levels.map(function (n) { return n < 7 ? "" : (n < 18 ? 10 : 30) + "-foot aura"; }),
            description : desc([
                "I can use my bns action to summon a strong wind, it lasts until I dismiss it (free action)",
                "While active, anything w/in my aura is difficult terrain for crea(s) I choose",
                "The wind puts on unprotected flames such as candles, and disperses gases"
            ]),
            action : ["bonus action", ""]
        },
        "subclassfeature15" : {
            name : "Storm Soul",
            source : ["VSoS", 233],
            minlevel : 15,
            description : desc([
                "I gain resistance to lightning dmg",
                "Whenever a visible crea w/in 5 ft hits me w/ a melee atk, it takes",
                "lightning dmg equal to my Cha mod."
            ]),
            dmgres : ["Lightning"]
        },
        "subclassfeature20" : {
            name : "Thunder God",
            source : ["VSoS", 233],
            minlevel : 20,
            description : desc([
                "As an action, I gain the following for the next minute:",
                "\u2022 Immunity to lightning and thunder dmg",
                "\u2022 Fly speed of 60 ft",
                "\u2022 Cast call lightning as a bonus action at 5th level w/o a SS or comp.",
                "  I can use my bns action on subsequent turns to call down lightning using the spell"
            ]),
            usages : 1,
            recovery : "long rest",
            action : ["action", ""],
            eval : function() {
                CurrentSpells["thunder god"] = {
                    name : "Thunder God",
                    ability : "paladin",
                    list : { spells : [], prepared : true  },
			        known : { cantrips : 0, spells : 'list' },
                    bonus : {
                        bonus1 : {
                            name : "Thunder God",
                            spells : ['call lightning'],
                            selection : ['call lightning'],
                        }
                    },
                    typeList : 2,
                    refType : "class",
                    allowUpCasting : false,
                    firstCol : "markedbox"
                };
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
            removeeval : function () {
                delete CurrentSpells['thunder god'];
                SetStringifieds('spells'); CurrentUpdates.types.push('spells');
            },
            calcChanges : {
                spellAdd : [
                    function(spellKey, spellObj, spName) {
                        if(spellKey === "call lightning" && spName === "thunder god") {
                            spellObj.description = "60-ft rad 10-ft high cloud; 1 bns all in 5-ft rad under cloud 5d10 Lightning dmg; save half";
                            spellObj.descriptionShorter = "60-ft rad 10-ft high cloud; 1 bns all in 5-ft rad under it 5d10 Lightn. dmg; save half";
                            spellObj.time = "1 bns"
                        }
                    }
                ]
            }
        }
    }
});

// ! This section adds companionlists

// * Alchemist homunculus companion list
CompanionList["homunculus"] = {
	name : "Alchemist Homunculus",
	nameMenu : "Familiar (Homunculus)",
	source : [["VSoS", 35]],
	includeCheck : function(sCrea, objCrea, iCreaCR, bIsAL) {
		return objCrea.companion && (/familiar/i.test(objCrea.companion) || (Array.isArray(objCrea.companion) && objCrea.companion.some(function (n) { return /familiar/i.test(n) }))) ? true : false;
	},
	notes : [{
		name : "Create a construct that serves as a familiar",
		description : [
			"appearing in an unoccupied space within 10 ft",
			"It assumes a chosen form (can change at every casting): bat, cat, crab, frog (toad), hawk,",
			"lizard, octopus, owl, poisonous snake, fish (quipper), rat, raven, sea horse, spider, or weasel.",
			"It has the chosen form's statistics, but its type changes to a construct",
			"When the homunculus drops to 0 hit points, its body remains, and can be",
			"reanimate over the course of an hour."
		].join("\n   "),
		joinString : ", "
	}, {
		name : "The homunculus acts independently of me",
		description : [
			"but it always obeys my commands",
			"In combat, it rolls its own initiative and acts on its own turn.",
			"It can also take the attack action only on its turn."
		].join("\n   "),
		joinString : ", "
	}, {
		name : "While it is on the same plane of existence of me",
		description : "I can communicate with it telepathically",
		joinString : ", "
	}, {
		name : "As an action, I see/hear what it does",
		description : " (but not with my senses) until the start of my next turn",
		joinString : ""
	}, {
		name : "I can't have more than one homonculus at a time",
		description : "",
		joinString : ""
	}, {
		name : "When I cast a spell with a range of touch",
		description : [
			"my homunculus can deliver the spell",
			"It must be within 100 ft of me and it must use its reaction to deliver the spell when I cast it",
			"It acts as if it cast the spell, but it can use my modifiers for any attack rolls the spell requires"
		].join("\n   "),
		joinString : ", "
	}],
	attributesAdd : {
		header : "Homunculus",
		features : [{
			name : "Find Familiar (Homunculus)",
			description : "If dropped to 0 HP, the homunculus remains there. The homunculus must obey all commands of its master."
		}]
	},
	attributesChange: function (sCrea, objCrea) {
		if (objCrea.type.toLowerCase() != "construct") {
			objCrea.type = "Construct";
			objCrea.subtype = "";
		}
	}
}

// * Captain's Cohort companionlist
CompanionList["cohort"] = {
	name : "Cohort",
	nameMenu: "Cohort (Captain class feature)",
	nameTooltip: "the Cohort class feature",
	source: ["VSoS", 47],
	notes: [{
		name: "Following an 8 hour initiation period",
		description: ["this creature becomes its captain's cohort. A captain can have only 1 cohort at a time.",
						"\u25C6 The cohort's alignment is within 1 step of their captain's. Its personality trait and flaw are GM determined.",
						"\u25C6 Its bond is: \"I will follow my commander into any fray, and I will gladly fight by their side until my death.\"",
						"\u25C6 The cohort always obeys their captain's commands as best as they can. The cohort takes their turn immediately before or after their captain's turns each round (captain's choice). If the cohort's captain is incapacitated or absent, the cohort acts on their own.",
						"\u25C6 The cohort gains proficiency in any weapon category, armor category, or shields mentioned in its statistics. The cohort uses their captain's proficiency bonus instead of their own.",
		].join("\n"),
		joinString: ", "                    
	}],
	attributesAdd: {
		proficiencyBonusLinked: true,
		hdLinked: ["captain"],
		minlevelLinked : ["captain"],
		features: [{
			name: "Cohort",
			description: " The cohort gains hit points, hit dice, and new abilities as their captain gains Captain levels. The cohort gains an Ability Score Improvement when their captain does."
		}]
	}
}

// * Craftsman Mechanaut's Apparatus Companionlist
CompanionList["mechanaut's apparatus"] = {
	name: "Mechanaut's Apparatus",
	nameMenu: "Mechanaut's Apparatus",
	source: ["VSoS", 74],
	notes: [{
		name: "Entering and Exiting the Apparatus",
		description: desc ([
			"A creature can enter or exit the apparatus by using half its movement. While within the apparatus, a",
			"creature has total cover from effects originating outside of it. My armor properties have no effect while I",
			"am within the apparatus. Only one Medium or Small creature can be in the apparatus at a time."
		])
	}, {
		name: "Piloting the Apparatus",
		description: desc ([
			"Any creature can pilot the apparatus by commanding it to move on its turn (no action required). When I",
			"pilot the apparatus, I can use my action to command it to take the Attack, Dash, Disengage, Hide, or Use an",
			"Object action. I can also command it to use a reaction, using my own reaction to do so. Only one creature",
			"can pilot the apparatus at a time. The pilot takes half of the amount of damage the apparatus takes. While I",
			"am outside the apparatus, I can command the apparatus to wait or follow me. While following, it moves on",
			"its turn to remain within 30 feet of me."
		])
	}, {
		name: "Remark from the Script Author",
		description: desc ([
			"The apparatus' integrated weapon attacks should be listed on the first page, instead of its companion",
			"pages. This is so that they may benefit from the automation of Masterwork weapon properties."
		])
	}]
}

// * Necromancer Undead Thrall Companion list
CompanionList["undead thrall"] = {
    name: "Undead Thrall",
    nameMenu: "Undead Thrall (Necromancer class feature)",
    nameTooltip: "the Thralls class feature",
    source: ["VSoS", 130],
    attributesAdd : {
        header : "Undead Thrall",
        attacks : [{
            name: "Slam",
            ability: 1,
            damage: [2, 8, "Bludgeoning"],
            modifiers: ["(oInt+oProf)-(Prof+Str)", "oInt"],
            range: "Melee (5 ft)",
            abilitytodamage: false,
            description: "Counts as magical"
        }, {
            name: "Bestial Weapon: Claws",
            ability: 2,
            damage: [2, 6, "Slashing"],
            range: "Melee (5 ft)",
            abilitytodamage: false,
            modifiers: ["(oInt+oProf)-(Prof+Dex)", "oInt"],
            description: "Counts as magical"
        }, {
            name: "Bestial Weapon: Teeth",
            ability: 2,
            damage: [2, 6, "Piercing"],
            range: "Melee (5 ft)",
            abilitytodamage: false,
            modifiers: ["(oInt+oProf)-(Prof+Dex)", "oInt"],
            description: "Counts as magical"
        }, {
            name: "Draconis Fundamentum",
            ability: 2,
            damage: [6, 6, ""],
            range: "15 ft cone",
            abilitytodamage: false,
            dc: true,
            modifiers: ["(oInt+oProf)-(Prof+Dex)", "oInt"],
            tooltip: "Each creature in a 15-foot cone must make a Dexterity saving throw (DC equals 8 + your Constitution modifier + your proficiency bonus). On a failed save, the creature takes 1d6 damage for each point of your proficiency bonus, or half as much damage on a successful one. The breath weapon's damage type is the same as the donor's breath weapon. Once you use this ability, you can't use it again until you finish a short or long rest.",
            description: "Dex save, save halves damage",
        }, {
            name: "Horns",
            ability: 1,
            damage: [2, 6, "Bludgeoning"],
            range: "Melee (5 ft)",
            abilitytodamage: false,
            modifiers: ["(oInt+oProf)-(Prof+Str)", "oInt"],
            description: "Counts as magical; if moved 10 ft in a straight line before attacking, target makes contested Str check or knocked prone",
            tooltip: "Horns are a natural weapon that you can use to make unarmed strikes. If you move in a straight line for 10 feet immediately before hitting a creature with your horns, that creature must make a Strength check contested by your Strength check. If you succeed, the creature is knocked prone."
        }, {
            name: "Prehensile Tail",
            ability: 1,
            damage: [2, 6, "Bludgeoning"],
            range: "Melee (5 ft)",
            abilitytodamage: false,
            modifiers: ["(oInt+oProf)-(Prof+Str)", "oInt"],
            description: "Counts as magical",
        },{
            name: "Tentacles",
            ability: 1,
            damage: [2, 6, "Bludgeoning"],
            range: "Melee (10 ft)",
            abilitytodamage: false,
            modifiers: ["(oInt+oProf)-(Prof+Str)", "oInt"],
            description: "Finesse, Reach; Counts as magical; may use bonus action to attempt grapple",
        }]
    },
    commoneval : function(prefix, oCrea,bAdd) {
        var aFnc = bAdd ? AddString : RemoveString;
        for(var i = 1; i <= 3; i++) {
            // * The base field name
            var baseField = prefix + "Comp.Use.Attack." + i;

            // * Range and Description as fields
            var range = baseField + ".Range";
            var description = baseField + ".Description";

            // * Range and Description as strings
            var strRange = What(range);
            var strDescription = What(description);

            if((/^\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/reach/).test(strDescription)) {
                var rNum = strRange.match(/\d+\s?(ft|m)/i);
                var unit = rNum[1];
                var curRange = parseInt(rNum[0], 10);

                Value(range, strRange.replace(/\d+\s?(ft|m)/i, (curRange + 5) + " " + unit));
                AddString(description, "Reach", "; ");
            }
            if(!(/^\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/reach/).test(strDescription)) {
                Value(range, "Melee (10 ft)");
                AddString(description, "Reach", "; ");
            }
        }
    },
    commonremoveeval : function(prefix, oCrea,bAdd) {
        for(var i = 1; i <= 3; i++){
            // * The base field name
            var baseField = prefix + "Comp.Use.Attack." + i;

            // * Range and Description as fields
            var range = baseField + ".Range";
            var description = baseField + ".Description";

            // * Range and Description as strings
            var strRange = What(range);
            var strDescription = What(description);

            if((/\d+\s?(ft|m)/i).test(strRange) && (/melee/i).test(strRange) && !(/tentacles?/i).test(What(baseField + ".Weapon Selection"))) {
                var rNum = strRange.match(/\d+\s?(ft|m)/i); 
                var unit = rNum[1];
                var curRange = parseInt(rNum[0], 10);

                Value(range, strRange.replace(/\d+\s?(ft|m)/i, Math.max(curRange - 5, 5) + " " + unit));
                Value(description, strDescription.replace(/(,|;)? ?reach/i, ''));
            }
        }
    },
    attributesChange : function(sCrea, objCrea) {
        if (objCrea.type.toLowerCase().indexOf("undead") !== -1) {
			objCrea.type = "Undead";
			objCrea.subtype = "";
		}
    },
    eval: function(prefix, lvl){
        AddString(prefix + 'Cnote.Left', "\u25C6 Animate Thralls: I can spend 10 uninterrupted minutes performing a ritual with a spellcasting focus or component pouch to raise the remains of 1 or more Small or Medium humanoids within 30 feet of me into Undead thralls. I maintain control over my thralls indefinitely. Create thralls through the companion pages.");
        AddString(prefix + 'Cnote.Left', "\n\u25C6 Commanding Thralls: I can mentally control all my thralls while I am conscious without using any actions. If I am unconscious, my thralls will move to protect my body from harm but will not attack. In combat, my thralls take their turns immediately before or after my turn (my choice). All my thralls collectively share 1 reaction and bonus action, which a single thrall can use each round. Thralls use my spell attack modifier to make their attacks.");
        AddString(prefix + 'Cnote.Left', "\n\u25C6 Maximum Thralls : As I gain levels in this class, my Thrall CR Total increases. The combined CR of all my thralls cannot exceed my Thrall CR Total, and the total number of thralls under my control cannot exceed my proficiency bonus. At any time, I can sever my connection to 1 or more thralls, releasing them. Corporeal undead crumple into a heap and incorporeal undead flee to the Ethereal Plane.");
        AddString(prefix + 'Cnote.Left', "\n\u25C6 Animate Dead: If I know the Animate Dead spell, I can cast it as an action instead of a minute. All Undead I create using spells or other magic count as my thralls and can be commanded as such. If my new thralls granted to me by a spell cause me to exceed my Thrall CR Total or total number of thralls, I can immediately sever my connection to any number of my existing thralls to stay within my limits. My thralls can never command or create other Undead. I cannot reanimate undead that have been reduced to 0 hit points.");
        Value(prefix + "Comp.Use.Attack.2.Weapon Selection", "");
        Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "");
    },
    removeeval: function(prefix, lvl){
        RemoveString(prefix + 'Cnote.Left', "\u25C6 Animatee Thralls: I can spend 10 uninterrupted minutes performing a ritual with a spellcasting focus or component pouch to raise the remains of 1 or more Small or Medium humanoids within 30 feet of me into Undead thralls. I maintain control over my thralls indefinitely. Create thralls through the companion pages.");
        RemoveString(prefix + 'Cnote.Left', "\n\u25C6 Commanding Thralls: I can mentally control all my thralls while I am conscious without using any actions. If I am unconscious, my thralls will move to protect my body from harm but will not attack. In combat, my thralls take their turns immediately before or after my turn (my choice). All my thralls collectively share 1 reaction and bonus action, which a single thrall can use each round. Thralls use my spell attack modifier to make their attacks.");
        RemoveString(prefix + 'Cnote.Left', "\n\u25C6 Maximum Thralls : As I gain levels in this class, my Thrall CR Total increases. The combined CR of all my thralls cannot exceed my Thrall CR Total, and the total number of thralls under my control cannot exceed my proficiency bonus. At any time, I can sever my connection to 1 or more thralls, releasing them. Corporeal undead crumple into a heap and incorporeal undead flee to the Ethereal Plane.");
        RemoveString(prefix + 'Cnote.Left', "\n\u25C6 Animate Dead: If I know the Animate Dead spell, I can cast it as an action instead of a minute. All Undead I create using spells or other magic count as my thralls and can be commanded as such. If my new thralls granted to me by a spell cause me to exceed my Thrall CR Total or total number of thralls, I can immediately sever my connection to any number of my existing thralls to stay within my limits. My thralls can never command or create other Undead. I cannot reanimate undead that have been reduced to 0 hit points.");
    }
}

// * Companion list for House of Bishops feature
CompanionList["mystical companion"] = {
	name : "Mystical Companion",
    nameTooltip : "for Mystical Companion",
    nameOrigin : "7th level Warmage House of Bishops Feature",
	nameMenu : "Familiar (Warmage House of Bishops)",
	source : ["VSoS", 166],
	includeCheck : function(sCrea, objCrea, iCreaCR) { //only imp, pseudodragon, quasit, or sprite
		return /^(imp|pseudodragon|quasit|sprite)$/i.test(sCrea);
	},
    action : CompanionList.familiar.action,
    attributesAdd : CompanionList.familiar.attributesAdd,
    attributesChange : CompanionList.familiar.attributesChange,
    notes : function() {
        var a = newObj(CompanionList.familiar.notes);
        a[0].description = [
            "appearing in an unoccupied space within 10 ft",
            "It assumes a chosen form (can change at every casting): imp, pseudodragon, quasit, sprite",
            "It has the chosen form's statistics, but its type changes from beast to celestial, fey, or fiend",
            "When the familiar drops to 0 hit points, it disappears, leaving behind no physical form",
            "It reappears when I cast this spell again (in a new form if so desired)"
        ].join("\n   ");
        return a;
    }()
};

// * Witch's familiar
CompanionList["witch's familiar"] = {
	name : "Witch's Familiar",
	nameMenu : "Familiar (Witch class feature)",
	nameTooltip : "the Witch class feature",
	nameOrigin : "variant of the Find Familiar 1st-level conjuration [ritual] spell",
	source : ["VSoS", 177],
    includeCheck : function(sCrea, objCrea, iCreaCRm, bIsAL) {
        return !objCrea.companion ? false : objCrea.companion.indexOf("familiar") !== -1 ? true : bIsAL && objCrea.companion.indexOf("familiar_not_al") !== -1 ? " (if DM approves)" : objCrea.companion === "witch_improved_familiar" || /^(imp|quasit)$/i.test(sCrea) ? " (level 7 Witch)" : /^(pseudodragon|sprite|homunculus)$/i.test(sCrea);
	},
	action : [
		["action", "Familiar (dismiss/reappear/attack)"],
		["action", "Use familiar's senses"],
		["bonus action", "Familiar attack"]
	],
	notes : function() {
        var a = newObj(CompanionList.familiar.notes);
        a[0].description = [
            "appearing in an unoccupied space within 10 ft",
            "It assumes a chosen form (can change at every casting): see witch's \"Familiar\" class feature",
            "I get more choices at level 7. See witch's \"Improved Familiar\" class feature",
            "It has the chosen form's statistics, but its type changes from beast to celestial, fey, or fiend",
            "When the familiar drops to 0 hit points, it disappears, leaving behind no physical form",
            "It reappears when I cast this spell again (in a new form if so desired)"
        ].join("\n   ");

        a[2].name = "The familiar acts independently of me";
        a[2].description = [
            "but it always follows my commands",
            "In combat, it takes its turn immediately before or after my turn each round (my choice)"
        ].join("\n   ");

        a[7].name = "When I cast a spell other than touch";
        a[7].description = [
            "if my familiar is within 100 ft, it can use it's reaction to deliver the spell",
            "It acts as if it cast the spell, but it can use my modifiers for any attack rolls the spell requires"	
        ].join("\n   ");

        a.push({
            name : "Improved Familiar (Witch 7, VSoS 177)",
			description : "My familiar's attacks count as magical for the purpose of overcoming resistances and immunities",
			joinString : "\n   ",
			minlevel : 7,
			eval : function(prefix, lvl) {
				for (var i = 1; i <= 3; i++) {
					if (!What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection")) continue;
					var sDescrFld = prefix + "Comp.Use.Attack." + i + ".Description";
					if (!/(,|;)? ?counts as magical/i.test(What(sDescrFld))) {
						AddString(sDescrFld, "Counts as magical", "; ");
					};
				}
			},
			removeeval : function(prefix, lvl) {
				for (var i = 1; i <= 3; i++) {
					var sDescrFld = prefix + "Comp.Use.Attack." + i + ".Description";
					var sDescr = What(sDescrFld);
					var rCaM = /(,|;)? ?counts as magical/i;
					if (rCaM.test(sDescr)) Value(sDescrFld, sDescr.replace(rCaM, ''));
				}
			}
        });
        return a;
	}(),
	attributesAdd : {
		header : "Familiar",
		minlevelLinked : ["witch"],
		features : [{
			name : "Witch's Familiar",
			description : "If dropped to 0 HP, the familiar disappears, leaving behind no physical form. The familiar must obey all commmands of its master."
		}]
	},
	attributesChange : function(sCrea, objCrea) {
		if (objCrea.type.toLowerCase() === "beast") {
			objCrea.type = ["Celestial", "Fey", "Fiend"];
			objCrea.subtype = "";
		};
        if(!classes.known.witch) return;
		for (var i = 0; i < objCrea.attacks.length; i++) {
			var oAtk = objCrea.attacks[i];
			oAtk.useSpellMod = "witch";
			if (!oAtk.modifiers) {
				oAtk.modifiers = ["", "oProf"];
			} else {
				oAtk.modifiers[1] += "+oProf";
			}
		};
	},
	calcChanges : {
		hp : function (totalHD, HDobj, prefix) {
			if (!classes.known.witch) return;
			var creaHp = CurrentCompRace[prefix] && CurrentCompRace[prefix].hp ? CurrentCompRace[prefix].hp : 0;
			var creaName = CurrentCompRace[prefix] && CurrentCompRace[prefix].name ? CurrentCompRace[prefix].name : "the creature";
			var wtchLvl = classes.known.witch.level;
			var wtchCompHp = ((classes.known.witch.subclass.indexOf("green magic") !== -1 && wtchLvl > 2) ? 3 * wtchLvl : 2 * wtchLvl);
            var wtchfamStr = "'s normal maximum plus " + ((classes.known.witch && classes.known.witch.subclass.indexOf("green magic") !== -1 && wtchLvl > 2) ? "three times" : "twice") + " my witch level ("
			HDobj.alt.push((creaHp + wtchCompHp));
			HDobj.altStr.push(" = " + creaHp + " from " + creaName + wtchfamStr + wtchCompHp + ")");
		},
        hpForceRecalc : true,
		setAltHp : true,
	},
	changeeval : function(prefix, lvl) {
        if(!classes.known.witch) return;
		var sNameEntity = "Witch's Familiar";
		var sExplanation = "A witch's familiar adds its master's proficiency bonus (oProf) to its AC, all saving throws, and to the damage of its attacks.";
		// Add oProf to the AC, if not already present
		var sACfld = prefix + "Comp.Use.AC";
		if (lvl[0] === 0 && What(sACfld).indexOf("oProf") === -1) {
				AddToModFld(sACfld, "oProf", false, sNameEntity, sExplanation);
		}
		// Add oProf to all Saving Throws
		var sASfld = prefix + "BlueText.Comp.Use.Ability.All.ST.Bonus";
		if (lvl[0] === 0 && What(sASfld).indexOf("oProf") === -1) {
			AddToModFld(sASfld, "oProf", false, sNameEntity, sExplanation)
		}
	},
};

// ! This section adds creatures

// * Abbot Captain cohort
CreatureList["abbot"] = {
	name: "Abbot",
	source: ["VSoS", 54],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 15,
	hp: 11,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [13, 11, 12, 10, 14, 11],
	saves: ["", "", "", "", 4, 2],
	senses: "",
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Mace",
		source: ["SRD"],
		regExpSearch: /mace/i,
		baseWeapon: "mace",
	}, {
		name: "Light Crossbow",
		source: ["SRD"],
		regExpSearch: /light crossbow/i,
		baseWeapon: "light crossbow",
	}],
	skills: { "Medicine" : 4, "Religion" : 2 },
	actions: [{
		name: "Healing Hands",
		description: "(1/day) The abbot or 1 creature the abbot touches regains 11 (2d8 + proficiency) hit points.",
	}, {
		name: "Guiding Strike",
		description: "(bonus action, 1/day) When the abbot hits a creature with a weapon attack, the next attack roll made against this target before the end of the abbot's next turn has advantage.",
	}],
	features: [{
		name: "Divine Devotion",
		description: "The abbot can use its Healing Hands & Guiding Strike an additional time each day when the captain reaches 5th, 11th, and 17th level.",
		minlevel: 2,
	}, {
		name: "Spellcasting",
		minlevel: 6,
		description: "(DC 8+Prof+Wis) The abbot can cast the following spells, at will, using Wisdom as its spellcasting ability:"+
						"\n    At will: guidance, spare the dying"+
						"\n    1/day each: bless, lesser restoration, protection from evil and good", 
	}],
	traits: [{
		name: "Divine Strike",
		minlevel: 10,
		description: "The abbot deals an extra 1d8 radiant damage when they hit with an attack roll.",
		eval: function (prefix, lvl){
			for (var i = 1; i < 4; ++i){
				if (What(prefix + "Comp.Use.Attack." + i + ".Weapon Selection"))
					Value(prefix + "Comp.Use.Attack." + i + ".Description", "+1d8 radiant damage");
			}
		},
		removeeval: function (prefix, lvl){
			for (var i = 1; i < 4; ++i){
				RemoveString(prefix + "Comp.Use.Attack." + i + ".Description", "+1d8 radiant damage");
			}
		}
	}, {
		name: "Merciful Light",
		minlevel: 18,
		description: "(Reaction) When a friendly creature within 30 ft of the abbot takes damage, the abbot causes that creature to regain hit points equal to 2d8 + the abbot's Wisdom modifer."
	}],
	changeeval: function(prefix, lvl){
		// update healing hands/guiding strike usages
		var uses = lvl[1] < 5 ? "1" : lvl[1] < 11 ? "2" : lvl[1] < 17 ? "3" : "4";
		var oldUses = lvl[0] < 5 ? "1" : lvl[0] < 11 ? "2" : lvl[0] < 17 ? "3" : "4"
		Value(prefix + "Comp.Use.Traits", What(prefix + "Comp.Use.Traits").replace("Healing Hands: (" + oldUses + "/day)", "Healing Hands: (" + uses + "/day)"));
		Value(prefix + "Comp.Use.Traits", What(prefix + "Comp.Use.Traits").replace("Guiding Strike: (bonus action, " + oldUses + "/day)", "Guiding Strike: (bonus action, " + uses + "/day)"));
	
		// update spellcasting
		if (lvl[0] < 14 && lvl[1] >= 14) ReplaceString(prefix + "Comp.Use.Features", "protection from evil and good, death ward, revivify, speak with dead", undefined, "protection from evil and good", false);
		else if (lvl[0] >=14 && lvl[1] < 14) RemoveString(prefix + "Comp.Use.Features", ", death ward, revivify, speak with dead", false);
	},
	eval: function(prefix, lvl){       
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
	
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Chain Shirt");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "20");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Shield");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "6");
						break;
					case 2:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Mace");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "4");
						break;
					case 3:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Light Crossbow");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "5");
						break;
				}
				added++;
				if (added == 4) break;
			}
		}
	},
}
	
// * Berserker Captain cohort
CreatureList["berserker"] = {
	name: "Berserker",
	source: ["VSoS", 55],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 12,
	hp: 13,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [14, 14, 14, 9, 10, 9],
	saves: [4, "", 4, "", "", ""],
	senses: "",
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Greataxe",
		source: ["SRD"],
		regExpSearch: /greataxe/i,
		baseWeapon: "greataxe",
	}, {
		name: "Handaxe",
		source: ["SRD"],
		regExpSearch: /handaxe/i,
		baseWeapon: "handaxe",
	}],
	skills: { "Athletics" : 4, "Survival" : 2 },
	actions: [{
		name: "Retaliation",
		description: "(reaction, 3/day) After being hit by a melee attack, the berserker can make 1 melee weapon attack against the attacker.",
		minlevel: 10,
	}],
	features: [{
		name: "Unarmored Defense",
		description: "AC gains Constitution modifier when wearing no armor and wielding no shield.",
		addMod: [{ type: "", field: "Comp.Use.AC", mod: "Con", text: "While the berserker is wearing no armor and wielding no shield, its AC includes its Constitution modifier."}]
	},{
		name: "Reckless",
		description: "The berserker can gain adv. on all melee weapon attacks that turn, but attack rolls against it have adv. until the start of its next turn.",
		minlevel: 2,
	}, {
		name: "Relentless",
		minlevel: 6,
		description: "(1/day) If the berserker is reduced to 0 hit points but not killed outright, it drops to 1 hit point instead."
	}],
	traits: [{
		name: "Critical Rush",
		minlevel: 14,
		description: "Once per turn, when the berserker scores a critical hit, it can move up to its movement speed and make a melee weapon attack with advantage."
	}, {
		name: "Primal Resolve",
		minlevel: 18,
		description: "When the berserker has half its hit points or fewer, it has resistance to bludgeoning, piercing, or slashing damage from nonmagical attacks."
	}],
	eval: function(prefix, lvl){       
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
	
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Greataxe");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "7");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Handaxe");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
				}
				added++;
				if (added == 2) break;
			}
		}
	},
}
	
// * Champion Captain cohort
CreatureList["champion"] = {
	name: "Champion",
	source: ["VSoS", 56],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 16,
	hp: 11,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [14, 11, 13, 11, 12, 9],
	saves: [4, "", 3, "", "", ""],
	senses: "",
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Longsword",
		source: ["SRD"],
		regExpSearch: /longsword/i,
		baseWeapon: "longsword",
	}, {
		name: "Javelin",
		source: ["SRD"],
		regExpSearch: /javelin/i,
		baseWeapon: "javelin",
	}],
	skills: { "Animal Handling" : 3, "Athletics" : 4 },
	actions: [{
		name: "Second Wind",
		description: "(bonus action, 1/short rest) The champion regains 5 hit points. This healing increases when the captain reaches certain levels: 10 hp at 6th level, 20 hp at 14th level.",
		minlevel: 2,
	}],
	features: [{
		name: "Indomitable",
		description: "(1/day) The champion can reroll a failed saving throw.",
	},{
		name: "Ability Score Increase 1",
		minlevel: 6,
		description: "The champion's Strength, Dexterity, or Constitution score increases by 2, to a max of 20."
	},{
		name: "Ability Score Increase 2",
		minlevel: 14,
		description: "The champion's Strength, Dexterity, or Constitution score increases by 2, to a max of 20."
	},{
		name: "Action Surge",
		description: "(1/short rest) The champion takes 2 actions on its turn.",
		minlevel: 18,
	}],
	traits: [ {
		name: "Martial Prowess",
		minlevel: 10,
		description: "When the champion hits with a melee weapon, the weapon deals an additional 3 (1d8) damage. When the captain reaches 18th level, the extra damage increases to 9 (2d8).",
	}],
	eval: function(prefix, lvl){       
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
	
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Ringmail");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "40");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Shield");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "6");
						break;
					case 2:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Longsword");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "3");
						break;
					case 3:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Javelin");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
				}
				added++;
				if (added == 4) break;
			}
		}
	},
	changeeval: function(prefix, lvl){
		// if we are downleveling past martial prowess, remove it
		if (lvl[1] < 10 && lvl[0] >= 10){       
			var str = lvl[0] >= 18 ? "+9 (2d8)" : "+3 (1d8)" ;
				for (var i = 1; i <= 3; ++i){
					var sAtkFld = prefix + "Comp.Use.Attack." + i;
					Value(sAtkFld + ".Description", What(sAtkFld + ".Description").replace("; " + str + " damage", ""));
				}
		}
		// if we have martial prowess, update it
		if (lvl[1] >= 10){
			var removestr = lvl[0] < 10 ? "" : lvl[0] < 18 ? "; +3 (1d8) damage" : "; +9 (2d8) damage"; 
			var str = lvl[1] >= 18 ? "+9 (2d8)" : "+3 (1d8)" ;
			for (var i = 1; i <= 3; ++i){
				var sAtkFld = prefix + "Comp.Use.Attack." + i;
				if (What(sAtkFld + ".Weapon Selection") && /\bmelee\b/i.test(What(sAtkFld + ".Range"))){
					if (removestr == "") Value(sAtkFld + ".Description", What(sAtkFld + ".Description") + "; " + str + " damage");
					else Value(sAtkFld + ".Description", What(sAtkFld + ".Description").replace(removestr, "; " + str + " damage"));
				}
			}
		}
	}
}
	
// * Construct Captain cohort
CreatureList["construct"] = {
	name: "Construct",
	source: ["VSoS", 56],
	size: 3,
	type: "Construct",
	companion: "cohort",
	alignment: "Any",
	ac: 17,
	hp: 13,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [14, 10, 15, 10, 10, 9],
	saves: ["", "", "", "", "", ""],
	senses: "darkivsion 60 ft",
	languages: "any 1 language, cannot speak",
	header: "Cohort",
	damage_immunities: "poison",
	condition_immunities: "charmed, exhaustion, poisoned",
	attacksAction: 1,
	attacks: [{
		name: "Slam",
		source: ["VSoS", 56],
		regExpSearch: /\bslam\b/i,
		type: "Natural",
		ability: 1,
		damage: [1,8, "bludgeoning"],
		range: "Melee (5 ft)",
		description: "",
	},{    
		name: "Death Burst",
		source: ["VSoS", 56],
		regExpSearch: /\bdeath burst\b/i,
		type: "Natural",
		ability: 1,
		damage: [2,6, "fire"],
		range: "5 ft radius",
		dc: true,
		modifiers: ["-Str+oCha", ""],
		abilitytodamage: false,
		description: "Occurs when reduced to 0 hit points; Dexterity save; half on save",        
	},{
		name: "Charged Slam",
		source: ["VSoS", 56],
		regExpSearch: /charged slam/i,
		type: "Natural",
		ability: 1,
		damage: [1,8, "bludgeoning"],
		range: "Melee (5 ft)",
		description: "+4 (1d8) lightning damage",
	}],
	features: [{
		name: "Surveillance Protocol",
		minlevel: 2,
		description: "The construct gains 60 ft blindsight. It adds the captain's level to its passive perception.",
	},{
		name: "Improved Armor 1",
		minlevel: 6,
		description: " +1 to AC",
		addMod: [{type:"", field: "Comp.Use.AC", mod: "1", text: "The construct's armor class increases by 1." }]
	},{
		name: "Improved Armor 2",
		minlevel: 14,
		description: " +1 to AC",
		addMod: [{type:"", field: "Comp.Use.AC", mod: "1", text: "The construct's armor class increases again by 1." }]
	}],
	traits: [{
		name: "Death Burst",
		description: "When the construct drops to 0 hit points, each creature within 5 feet of it must make a DC (12 or Captain's maneuver save DC) Dexterity save, taking 7 (2d6) fire damage on a failed save, or half as much on a success.",
	}, {
		name: "Charged Slam",
		minlevel: 10,
		description: "The construct's slam attack now deals an extra 4 (1d8) lightning damage on a hit.",
		eval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Attack.1.Weapon Selection", "Charged Slam");
			Value(prefix + "Comp.Use.Attack.1.Description", "+4 (1d8) lightning damage");
		},
		removeeval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Attack.1.Weapon Selection", "Slam");
		}
	},{
		name: "Improved Death Burst",
		minlevel: 6,
		description: "The construct's Death Burst damage increases to 21 (6d6).",
		eval: function(prefix, lvl) {
			Value(prefix + "BlueText.Comp.Use.Attack.2.Damage Die", "6d6");
		},
		removeeval: function(prefix, lvl){
			Value(prefix + "BlueText.Comp.Use.Attack.2.Damage Die", "2d6");
		}
	},{
		name: "Magic Resistance",
		description: "The construct has advantage on saves against spells and other magical effects.",
		minlevel: 10,
	},{
		name: "Unerring Strike",
		description: "Once on each of its turns, when the construct misses with a slam attack, it can reroll it.",
		minlevel: 18,
	}],
	eval: function(prefix, lvl){
		// get rid of the charged slam on selection
		Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "");
	
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);    
	},
	changeeval: function (prefix, lvl){
		// update passive perception bonus
		if (lvl[1] >= 2) Value(prefix + "BlueText.Comp.Use.Skills.Perc.Pass.Bonus", classes.known.captain.level);
		else Value(prefix + "BlueText.Comp.Use.Skills.Perc.Pass.Bonus", 0);
	}
}
	
// * Cultist Captain cohort
CreatureList["cultist"] = {
	name: "Cultist",
	source: ["VSoS", 57],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 12,
	hp: 11,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [11, 13, 12, 11, 9, 14],
	saves: ["", "", "", "", 1, 4],
	skills: { "Deception" : 4, "Persuasion" : 4 },
	senses: "",
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Melee Eldritch Strike",
		source: ["VSoS", 57],
		regExpSearch: /\bmelee eldritch strike\b/i,
		type: "AlwaysProf",
		ability: 6,
		damage: [1,10, "force"],
		range: "Melee (5 ft)",
		description: "",
	}, {
		name: "Ranged Eldritch Strike",
		source: ["VSoS", 57],
		regExpSearch: /\branged eldritch strike\b/i,
		type: "AlwaysProf",
		ability: 6,
		damage: [1,10, "force"],
		range: "120 ft",
		description: "",
	}],
	features: [{
		name: "Dark Devotion",
		description: "The cultist has advantage on saves against being charmed or frightened.",
	},{
		name: "Spellcasting",
		description: "(DC 8+Prof+Cha) The cultist can cast the following spells, at will, using Charisma as its spellcasting ability:"+
						"\n    At will: dancing lights, mage hand, minor illusion"+
						"\n    1/day each: charm person, detect magic", 
	}],
	traits: [{
		name: "Eldritch Pact",
		minlevel: 2,
		description: "The cultist's Eldritch strike damage increases by +1d10 when the captain reaches 5th, 11th, and 17th level",
	}, {
		name: "Spellcasting",
		minlevel: 6,
		description: "The cultist gains new spells. See features",
	},{
		name: "Sinister Curse",
		minlevel: 10,
		description: "(action, 1/day) 1 creature the cultist can see within 60 ft of it must succeed on a Wisdom save (spell DC) or be cursed for 1 minute,. While cursed, the creature has disadvantage on attack rolls and saves, and may repeat the save at the end of each of its turns to end the curse.",
	},{
		name: "Spellcasting",
		description: "The cultist gains new spells. See features",
		minlevel: 14,
	},{
		name: "Spiteful Rebuke",
		description: "(reaction) In response to being damaged by a visible creature within 60 feet of it, the cultist forces that creature to make a Dexterity save (spell DC). The creature takes 11 (2d10) fire damage, or half on save.",
		minlevel: 18,
	}],
	eval: function(prefix, lvl){
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add leather armor
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				Value(prefix + "Comp.eqp.Gear Row " + i, "Leather Armor");
				Value(prefix + "Comp.eqp.Gear Weight " + i, "10");
				break;
			}
		}
	},
	changeeval: function (prefix, lvl){
		// update spellcasting
		var atWillRemoveStr = lvl[0] < 6 ? "illusion" : lvl[0] < 14 ? "illusion, disguise self, false life" : "illusion, disguise self, false life, darkness, spider climb";
		var perDayRemoveStr = lvl[0] < 6 ? "detect magic" : lvl[0] < 14 ? "detect magic, suggestion" : "detect magic, suggestion, fear";
		var atWillStr = lvl[1] < 6 ? "illusion" : lvl[1] < 14 ? "illusion, disguise self, false life" : "illusion, disguise self, false life, darkness, spider climb";
		var perDayStr = lvl[1] < 6 ? "detect magic" : lvl[1] < 14 ? "detect magic, suggestion" : "detect magic, suggestion, fear";
		Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(atWillRemoveStr, atWillStr));
		Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(perDayRemoveStr, perDayStr));
	
		// update eldritch strike damage
		var die = lvl[1] < 5 ? "1d10" : lvl[1] < 11 ? "2d10" : lvl[1] < 17 ? "3d10" : "4d10";
		Value(prefix + "BlueText.Comp.Use.Attack.1.Damage Die", die);
		Value(prefix + "BlueText.Comp.Use.Attack.2.Damage Die", die);
	}
}
	
// * Hunter Captain cohort
CreatureList["hunter"] = {
	name: "Hunter",
	source: ["VSoS", 58],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 14,
	hp: 11,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [10, 14, 12, 10, 14, 9],
	saves: [2, 4, "", "", "", ""],
	senses: "",
	skills: { "Perception" : 4, "Survival" : 4 },
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Scimitar",
		source: ["SRD"],
		regExpSearch: /\bscimitar\b/i,
		baseWeapon: "scimitar"
	}, {
		name: "Longbow",
		source: ["SRD"],
		regExpSearch: /\blongbow\b/i,
		baseWeapon: "longbow"
	}],
	features: [{
		name: "Keen Hearing & Sight",
		description: "The hunter has advantage on Perception checks that rely on hearing or sight.",
	},{
		name: "Vantage Point",
		minlevel: 6,
		description: "The hunter gains a climb speed equal to its walk speed.",
		eval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Speed", "30 ft, climb 30 ft")
		},
		removeeval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Speed", "30 ft")
		}
	}],
	traits: [{
		name: "True Shot",
		minlevel: 2,
		description: "(bonus action, 1/day) After making an attack or damage roll with a ranged weapon, the hunter can roll a d10 and add it to the total. The hunter gains +1 use of this feature when its captain reaches 5th, 11th, and 17th level.",
	}, {
		name: "Predator's Mark",
		minlevel: 10,
		description: "(bonus action, 1/day) When the hunter hits with an attack, it marks the target for 1 minute or until it loses concentration. The hunter has advantage on attack rolls against the marked target and deals an extra 1d8 damage on a hit.",
	},{
		name: "Instinctive Dodge",
		minlevel: 14,
		description: "(reaction) In response to being hit by an attack or failing a Dexterity save, the hunter can add +3 to its AC/save.",
	},{
		name: "Multiattack",
		minlevel: 18,
		description: "(3/day) The hunter makes 2 ranged weapon attacks.",
	}],
	eval: function(prefix, lvl){
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Studded Leather");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "13");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Scimitar");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "3");
						break;
					case 2:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Longbow");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
				}
				added++;
				if (added == 3) break;
			}
		}
	},
	changeeval: function (prefix, lvl){
		// update true shot uses
		var uses = lvl[1] < 5 ? "1" : lvl[1] < 11 ? "2" : lvl[1] < 17 ? "3" : "4";
		var oldUses = lvl[0] < 5 ? "1" : lvl[0] < 11 ? "2" : lvl[0] < 17 ? "3" : "4";
		Value(prefix + "Comp.Use.Traits", What(prefix + "Comp.Use.Traits").replace("True Shot: (bonus action, " + oldUses + "/day)", "True Shot: (bonus action, " + uses + "/day)"));
	}
}
	
// * Mage Captain cohort
CreatureList["mage"] = {
	name: "Mage",
	source: ["VSoS", 58],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 11,
	hp: 9,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [9, 12, 10, 14, 13, 12],
	saves: ["", "", "", 4, 3, ""],
	senses: "",
	skills: { "Arcana" : 4, "History" : 4 },
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Dagger",
		source: ["SRD"],
		regExpSearch: /\bdagger\b/i,
		baseWeapon: "dagger"
	}, {
		name: "Arcane Arrow",
		source: ["VSoS", 58],
		regExpSearch: /\barcane arrow\b/i,
		type: "AlwaysProf",
		ability: 4,
		damage: [1,10, "force"],
		range: "120 ft",
		description: "",
	}, {
		name: "Elemental Burst",
		source: ["VSoS", 59],
		regExpSearch: /\barcane arrow\b/i,
		type: "AlwaysProf",
		ability: 4,
		dc: true,
		abilitytodamage: false,
		damage: [8,6, ""],
		range: "120 ft",
		description: "10 foot radius, Dexterity save; half on save",
	}],
	features: [{
		name: "Magic Resistance",
		description: "The mage has advantage on saves against spells and other magical effects.",
	},{
		name: "Spellcasting",
		description: "(DC 8+Prof+Int) The mage can cast the following spells, at will, using Intelligence as its spellcasting ability:"+
		"\n    At will: mage hand, prestidigitation"+
		"\n    1/day each: floating disk, grease, mage armor", 
	}],
	traits: [{
		name: "Arcane Apprenticeship",
		minlevel: 2,
		description: "The mage's Arcane Arrow attack gains +1d10 damage when its captain reaches 5th, 11th, and 17th level. The mage adds its Intelligence modifier to its damage roll.",
	}, {
		name: "Spellcasting",
		minlevel: 6,
		description: "The mage gains new spells. See features",
	},{
		name: "Elemental Burst",
		minlevel: 10,
		description: "(action, 1/day) The mage unleashes a 10 ft radius magical explosion that deals damage of a chosen type: acid, cold, fire, lightning, or thunder.",
		eval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "Elemental Burst");
		},
		removeeval: function(prefix, lvl){
			Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "");
		}
	},{
		name: "Spellcasting",
		minlevel: 14,
		description: "The mage gains new spells. See features",
	},{
		name: "Contingent Sphere",
		minlevel: 18,
		description: "(reaction, 1/day) In response to taking damage, the mage casts the resilent sphere spell targeting itself.",
	}],
	eval: function(prefix, lvl){
		// remove elemental burst
		Value(prefix + "Comp.Use.Attack.3.Weapon Selection", "");
	
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add dagger
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
						Value(prefix + "Comp.eqp.Gear Row " + i, "Dagger");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "1");
						break
			}
		}
	},
	changeeval: function (prefix, lvl){
		// update arcane arrow damage
		var die = lvl[1] < 5 ? "1d10" : lvl[1] < 11 ? "2d10" : lvl[1] < 17 ? "3d10" : "4d10";
		Value(prefix + "BlueText.Comp.Use.Attack.2.Damage Die", die);
	
		// update spellcasting
		var atWillRemoveStr = lvl[0] < 6 ? "prestidigitation" : "prestidigitation, message";
		var perDayRemoveStr = lvl[0] < 6 ? "mage armor" : lvl[0] < 14 ? "mage armor, hold person, invisibility" : "mage armor, hold person, invisibility, dimension door, polymorph";
		var atWillStr = lvl[1] < 6 ? "prestidigitation" : "prestidigitation, message";
		var perDayStr = lvl[1] < 6 ? "mage armor" : lvl[1] < 14 ? "mage armor, hold person, invisibility" : "mage armor, hold person, invisibility, dimension door, polymorph";
		Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(atWillRemoveStr, atWillStr));
		Value(prefix + "Comp.Use.Features", What(prefix + "Comp.Use.Features").replace(perDayRemoveStr, perDayStr));
	}
}
	
// * Scoundrel Captain cohort
CreatureList["scoundrel"] = {
	name: "Scoundrel",
	source: ["VSoS", 59],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 13,
	hp: 9,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [8, 14, 11, 13, 12, 10],
	saves: ["", 4, "", 3, "", ""],
	senses: "",
	skills: { "Acrobatics" : 4, "Perception" : 3, "Sleight of Hand": 4, "Stealth": 4 },
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Shortsword",
		source: ["SRD"],
		regExpSearch: /\bshortsword\b/i,
		baseWeapon: "shortsword"
	}, {
		name: "Shortbow",
		source: ["SRD"],
		regExpSearch: /\bshortbow\b/i,
		baseWeapon: "shortbow"
	}],
	features: [{
		name: "Sneak Attack",
		description: "Once on each of its turns, the scoundrel can add +3(1d6) damage to a finesse/ranged weapon attack if it has advantage. It doesn't need advantage if an unincapacitated ally is within ft of the target and the scoundrel doesn't have disadvantage.",
	}, {
		name: "Evasion",
		minlevel: 14,
		description: "The scoundrel's Dexterity saves vs. areas of effect negate damage on success and halve it on failure.",
	}],
	traits: [{
		name: "Rogue Training",
		minlevel: 2,
		description: "The scoundrel's Sneak Attack damage increases by +3(1d6) when its captain reaches 6th, 10th, 14th, and 18th level.",
	},{
		name: "Cunning Action",
		minlevel: 6,
		description: "(bonus action) The scoundrel takes the Dash, Disengage, or Hide action.",
	},{
		name: "Uncanny Dodge",
		minlevel: 10,
		description: "(reaction) The scoundrel halves the damage that it takes from an attack that hits it, by an attacker it can see.",
	},{
		name: "Assassinate",
		minlevel: 18,
		description: "(1/day) During its first turn in combat, the scoundrel turns a hit that it makes with a weapon attack into a critical hit.",
	}],
	eval: function(prefix, lvl){
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Leather Armor");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "10");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Shortsword");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
					case 2:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Shortbow");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
				}
				added++;
				if (added == 3) break;
			}
		}
	},
	changeeval: function (prefix, lvl){
		// update sneak attack damage
		var die = lvl[1] < 6 ? "+3(1d6)" : lvl[1] < 10 ? "+7(2d6)" : lvl[1] < 14 ? "+10(3d6)" : lvl[1] < 18 ? "+14(4d6)" : "+17(5d6)";
		var oldDie = lvl[0] < 6 ? "+3(1d6)" : lvl[0] < 10 ? "+7(2d6)" : lvl[0] < 14 ? "+10(3d6)" : lvl[0] < 18 ? "+14(4d6)" : "+17(5d6)";
		for (var i = 1; i < 4; ++i){
			var atkFld = prefix + "Comp.Use.Attack." + i;
			if (/finesse/i.test(What(atkFld + ".Description")) || /\//.test(What(atkFld + ".Range")))
			{
				if (!/sneak attack/i.test(What(atkFld + ".Description")))
					Value(atkFld + ".Description", What(atkFld + ".Description") + "; Sneak Attack " + die + " damage");
				else
					Value(atkFld + ".Description", What(atkFld + ".Description").replace(oldDie, die));
			}
		}
	}
}
	
// * Templar Captain cohort
CreatureList["templar"] = {
	name: "Templar",
	source: ["VSoS", 60],
	size: 3,
	type: "Humanoid",
	subtype: "any race",
	companion: "cohort",
	alignment: "Any",
	ac: 16,
	hp: 11,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [14, 9, 12, 10, 10, 14],
	saves: ["", "", "", "", 2, 4],
	senses: "",
	skills: { "Athletics" : 4, "Religion" : 2 },
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Longsword",
		source: ["SRD"],
		regExpSearch: /\blongsword\b/i,
		baseWeapon: "longsword"
	}, {
		name: "Javelin",
		source: ["SRD"],
		regExpSearch: /\bjavelin\b/i,
		baseWeapon: "javelin"
	}],
	features: [{
		name: "Brave",
		description: "The templar has advantage on saves to avoid or end the frightened condition.",
	}, {
		name: "Holy Weapons",
		minlevel: 10,
		description: "The templar's weapons are magical and it has a +2 bonus to its weapon attack rolls.",
	}],
	traits: [{
		name: "Smite",
		minlevel: 2,
		description: "(bonus action, 1/day) When the templar hits with a melee weapon, the target takes an extra 9 (2d8) radiant damage. The templar gains extra uses of this feature when its captain reaches 5th, 11th, and 17th level.",
	},{
		name: "Parry",
		minlevel: 6,
		description: "(reaction) The templar adds 2 to its AC against 1 melee attack that would hit it. The templar must be able to see the attacker and wielding a melee weapon.",
	},{
		name: "Zealous Inspiration",
		minlevel: 14,
		description: "(action, 1/day) The templar and each friendly creature within 30 feet of it gain 20 temporary hit points.",
	},{
		name: "Improved Smite",
		minlevel: 18,
		description: "The extra damage of Smite increases to 18 (4d8). When the templar finishes a short rest and has no uses of Smite remaining, it regains 1 use.",
	}],
	eval: function(prefix, lvl){
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	
		// add equipment
		var added = 0;
		for (var i = 1; i <= 17; ++i) {
			if (!What(prefix + "Comp.eqp.Gear Row " + i)){
				switch (added) {
					case 0:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Chain Mail");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "55");
						break;
					case 1:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Longsword");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "3");
						break;
					case 2:
						Value(prefix + "Comp.eqp.Gear Row " + i, "Javelin");
						Value(prefix + "Comp.eqp.Gear Weight " + i, "2");
						break;
				}
				added++;
				if (added == 3) break;
			}
		}
	},
	changeeval: function (prefix, lvl){
		// update smite damage
		var die = lvl[1] < 2 ? "" : lvl[1] < 18 ? "+9(2d8)" : "+18(4d8)";
		var oldDie = lvl[0] < 2 ? "" : lvl[0] < 18 ? "+9(2d8)" : "+18(4d8)";
		for (var i = 1; i < 4; ++i){
			var atkFld = prefix + "Comp.Use.Attack." + i;
			if (/melee/i.test(What(atkFld + ".Range")))
			{
				if (die == "") RemoveString(atkFld + ".Description", "; Smite " + oldDie + " radiant damage");
				else if (!/smite/i.test(What(atkFld + ".Description")))
					Value(atkFld + ".Description", What(atkFld + ".Description") + "; Smite " + die + " radiant damage");
				else
					Value(atkFld + ".Description", What(atkFld + ".Description").replace(oldDie, die));
			}
		}
	
		// update holy weapons feature
		if (lvl[1] >= 10){
			for (var i = 1; i < 4; ++i){
				var atkFld = prefix + "Comp.Use.Attack." + i;
				if (What(atkFld + ".Weapon Selection") && !/magical/i.test(What(atkFld + ".Description"))){
					Value(atkFld + ".Description", What(atkFld + ".Description") + "; magical");
					Value(prefix + "BlueText.Comp.Use.Attack." + i + ".To Hit Bonus", What(prefix + "BlueText.Comp.Use.Attack." + i + ".To Hit Bonus") + "+2");
				}
			}
		}
		else{
			for (var i = 1; i < 4; ++i){
				var atkFld = prefix + "Comp.Use.Attack." + i;
				if (/magical/i.test(What(atkFld + ".Description"))){
					Value(atkFld + ".Description", What(atkFld + ".Description").replace("; magical", ""));
					Value(prefix + "BlueText.Comp.Use.Attack." + i + ".To Hit Bonus", What(prefix + "BlueText.Comp.Use.Attack." + i + ".To Hit Bonus").replace("+2", ""));
				}
			}
		}
	
		// update smite uses
		var uses = lvl[1] < 5 ? "1" : lvl[1] < 11 ? "2" : lvl[1] < 17 ? "3" : "4";
		var oldUses = lvl[0] < 5 ? "1" : lvl[0] < 11 ? "2" : lvl[0] < 17 ? "3" : "4";
		Value(prefix + "Comp.Use.Traits", What(prefix + "Comp.Use.Traits").replace("Smite: (bonus action, " + oldUses + "/day)", "Smite: (bonus action, " + uses + "/day)"));
	}
}
	
// * Undead Captain cohort
CreatureList["undead"] = {
	name: "Undead",
	source: ["VSoS", 61],
	size: 3,
	type: "Undead",
	companion: "cohort",
	alignment: "Any",
	ac: 9,
	hp: 13,
	hd: [2,8],
	speed: "30 ft",
	proficiencyBonus: 2,
	challengeRating: "1/4",
	scores: [15, 9, 15, 9, 9, 9],
	damage_immunities: "poison",
	condition_immunities: "charmed, exhaustion, poisoned",
	senses: "darkvision 60 ft",
	languages: "any 1 language",
	header: "Cohort",
	attacksAction: 1,
	attacks: [{
		name: "Bite",
		source: ["VSoS", 61],
		regExpSearch: /\bbite\b/i,
		type: "Natural",
		ability: 1,
		damage: [1,6, "piercing"],
		range: "Melee (5 ft)",
		description: "",
	}],
	features: [{
		name: "Undead Fortitude",
		description: "If the undead drops to 0 hit points, it must make a Con save DC 5 + the damage taken. On success, the undead drops to 1 hit point instead. It automatically fails if the damage was radiant or from a critical hit.",
	}, {
		name: "Turn Resistance",
		minlevel: 2,
		description: "Advantage on saves against effects that turns undead.",
	}],
	traits: [{
		name: "Necrotizing Bite",
		minlevel: 6,
		description: "The undead's bite deals an extra 1d6 necrotic damage on hit.",
	},{
		name: "Regeneration",
		minlevel: 10,
		description: "The undead regains 1 hit point at the start of its turn, unless it took fire/radiant damage since the start of its last turn. The undead dies only if it starts its turn with 0 hit points and doesn't regenerate.",
	},{
		name: "Improved Necrotizing Bite",
		minlevel: 14,
		description: "The necrotic damage for the undead's bite increases to 7 (2d6), and the undead regains hit points equal to the necrotic damage on a hit.",
		eval: function(prefix, lvl){
			var atkFld = prefix + "Comp.Use.Attack.1";
			Value(atkFld + ".Description",  What(atkFld + ".Description") + "; regain hitpoints equal to necrotic damage");
		},        
		removeeval: function(prefix, lvl){
			var atkFld = prefix + "Comp.Use.Attack.1";
			RemoveString(atkFld + ".Description", "; regain hitpoints equal to necrotic damage");
		}
	},{
		name: "Undead Horde",
		minlevel: 18,
		description: "A Humanoid slain by the undead's bite attack rises 24 hours later as a zombie, unless the Humanoid is restored to life or its body is destroyed. Zombies are under the captain's control for 24 hours, refreshed if the captain casts the animate dead spell. The captain only control 6 zombies max.",
	}],
	eval: function(prefix, lvl){
		// add equipment section
		var layersArray = eval_ish(What(prefix + "Companion.Layers.Remember"));
		if (layersArray[1] == true) return;
		layersArray[1] = true;
		Value(prefix + "Companion.Layers.Remember", layersArray.toSource());
		ShowCompanionLayer(prefix);
		
		// clear equipment
		for (var i = 1; i <= 17; ++i) {
			Value(prefix + "Comp.eqp.Gear Row " + i, "");
			Value(prefix + "Comp.eqp.Gear Weight " + i, "");
		}
	},
	changeeval: function (prefix, lvl){
		// update bite extra damage
		var die = lvl[1] < 6 ? "" : lvl[1] < 14 ? "+1d6 necrotic damage" : "+7 (2d6) necrotic damage";
		var oldDie = lvl[0] < 6 ? "" : lvl[0] < 14 ? "+1d6 necrotic damage" : "+7 (2d6) necrotic damage";
		var atkFld = prefix + "Comp.Use.Attack.1";
			if (oldDie == "") Value(atkFld + ".Description",  What(atkFld + ".Description") + die);
			else Value(atkFld + ".Description", What(atkFld + ".Description").replace(oldDie, die));
	}
}

// * Bonebeast undead thrall
CreatureList["bonebeast"] = {
    name: "Bonebeast",
    source: ["VSoS", 141],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 14,
    hp: 27,
    hd: [5, 8],
    speed: "40 ft",
    proficiencyBonus: 2,
    challengeRating: "1",
    scores: [12, 15, 13, 5, 10, 5],
    senses: "Darkvision 60 ft",
    attacksAction: 1,
    attacks : [{
        name : "Bite",
        ability: 0,
        damage: [2, 6, "Piercing"],
        range: "Melee",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_immunities: "poison",
    condition_immunities: "poisoned",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Keen Smell",
        description: "The bonebeast has advantage on Wisdom (Perception) checks that rely on smell.",
    }, {
        name: "Pack Tactics",
        description: "The bonebeast has advantage on attack rolls agains a creature if at least one of the bonebeast's allies is within 5 feet of the creature and the ally isn't incapacitated."
    }],  
}

// * Gorger undead thrall
CreatureList["gorger"] = {
    name: "Gorger",
    source: ["VSoS", 141],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 8,
    hp: 36,
    hd: [8, 8],
    speed: "30 ft",
    proficiencyBonus: 2,
    challengeRating: "1",
    scores: [16, 7, 10, 7, 10, 6],
    senses: "Blindsight 10 ft, Darkvision 60 ft",
    attacksAction: 1,
    attacks : [{
        name : "Bite",
        ability: 0,
        damage: [2, 8, "Piercing"],
        range: "Melee",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_immunities: "poison",
    condition_immunities: "charmed, exhaustion, poisoned",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Echolocation",
        description: "The gorger can't use its blindsight while deafened.",
    }],  
}

// * Gravetouched Ghoul undead thrall
CreatureList["gravetouched ghoul"] = {
    name: "Gravetouched Ghoul",
    source: ["VSoS", 141],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 12,
    hp: 63,
    hd: [14, 8],
    speed: "30 ft",
    proficiencyBonus: 2,
    challengeRating: "2",
    scores: [18, 15, 10, 9, 10, 8],
    senses: "Blindsight 60 ft",
    attacksAction: 1,
    attacks : [{
        name : "Claws",
        ability: 0,
        damage: [4, 6, "Slashing"],
        range: "Melee",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_immunities: "poison",
    condition_immunities: "charmed, exhaustion, poisoned",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Regeneration",
        description: "The ghoul regains 5 hit points at the start of its turn. If the ghoul takes fire or radiant damage, this trait doesn't function at the start of the ghoul's next turn. The ghoul dies only if it starts its turn with 0 hit points and doesn't regenerate.",
    }], 
}

// * skeleton undead thrall
CreatureList["skeleton"] = {
    name: "Skeleton",
    source: ["VSoS", 142],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 13,
    hp: 13,
    hd: [2, 8],
    speed: "30 ft",
    proficiencyBonus: 2,
    challengeRating: "1/4",
    scores: [10, 14, 15, 6, 8, 5],
    senses: "Darkvision 60 ft",
    attacksAction: 1,
    attacks : [{
        name : "Shortsword",
        ability: 0,
        damage: [1, 6, "Piercing"],
        range: "Melee",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }, {
        name : "Shortbow",
        ability: 0,
        damage: [1, 6, "Piercing"],
        range: "80/320 ft",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_vulnerabilities: "bludgeoning",
    damage_immunities: "poison",
    condition_immunities: "exhaustion, poisoned",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
}

// * Spirit undead thrall
CreatureList["spirit"] = {
    name: "Spirit",
    source: ["VSoS", 142],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 15,
    hp: 7,
    hd: [2, 8],
    speed: "25 ft, fly 25 ft (hover)",
    proficiencyBonus: 2,
    challengeRating: "1/4",
    scores: [1, 14, 9, 10, 10, 11],
    senses: "Darkvision 120 ft",
    attacksAction: 1,
    attacks : [{
        name : "Grave Touch",
        ability: 0,
        damage: [1, 4, "Necrotic"],
        range: "Melee",
        description: "target's hit point maximum is reduced by amount equal to damage dealt, lasts until long rest",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_vulnerabilities: "radiant",
    damage_immunities: "cold, poison, necrotic",
    condition_immunities: "exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Incorporeal Movement",
        description: "The spirit can move through other creatures as if they were difficult terrain. The spirit takes 5 (1d10) force damage if it ends its turn inside an object.",
    }],
}

// * Visage undead thrall
CreatureList["visage"] = {
    name: "Visage",
    source: ["VSoS", 143],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 17,
    hp: 40,
    hd: [9, 8],
    speed: "25 ft, fly 25 ft (hover)",
    proficiencyBonus: 2,
    challengeRating: "2",
    scores: [1, 16, 11, 10, 10, 11],
    senses: "Darkvision 120 ft",
    attacksAction: 1,
    attacks : [{
        name : "Horrify",
        ability: 0,
        damage: [5, 4, "Psychic"],
        range: "Melee",
        modifiers: ["oInt+oProf-Prof", "oInt"],
    }],
    damage_immunities: "cold, poison, necrotic",
    condition_immunities: "exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Incorporeal Movement",
        description: "The visage can move through other creatures as if they were difficult terrain. The visage takes 5 (1d10) force damage if it ends its turn inside an object.",
    }, {
    name: "Magic Resistance",
        description: "The visage has advantage on saving throws against spells and other magical effects.",
    }, {
        name: "Invisibility",
        description: "As an action, the visage can magically turn invisible until it attacks or until its concentration ends (as if concentrating on a spell). Any equipment the visage wears or carries is invisible with it."
    }]
}

// * Zombie undead thrall
CreatureList["zombie"] = {
    name: "Zombie",
    source: ["VSoS", 143],
    size: 3,
    type: "Undead",
    companion: "undead thrall",
    alignment: "Unaligned",
    ac: 8,
    hp: 22,
    hd: [3, 8],
    speed: "20 ft",
    proficiencyBonus: 2,
    challengeRating: "1/4",
    scores: [13, 6, 16, 3, 6, 5],
    senses: "Darkvision 60 ft",
    attacksAction: 1,
    attacks : [{
        name : "Slam",
        ability: 1,
        damage: [1, 6, "Bludgeoning"],
        range: "Melee",
        modifiers: ["(oInt+oProf)-(Prof+Str)", ""],
    }],
    damage_immunities: "poison",
    condition_immunities: "poisoned",
    languages: "All languages it knew in life & languages of its creator (can't speak)",
    traits: [{
        name: "Undead Fortitude",
        description: "If damage reduces the zombie to 0 hit points, it must make a Constitution saving throw with a DC of 5 + the damage taken, unless the damage is radiant or from a critical hit. On a success, the zombie drops to 1 hit point instead.",
    }]
}

CreatureList["brass dragon wyrmling"] = {
	name : "Brass Dragon Wyrmling",
	nameAlt : ["Dragon, Brass Wyrmling"],
	source : ["M", 106],
	size : 3,
	type : "Dragon",
	companion : "witch_improved_familiar",
	alignment : "Chaotic Good",
	ac : 16,
	hp : 16,
	hd : [3, 8],
	speed : "30 ft, burrow 15 ft, fly 60 ft",
	proficiencyBonus : 2,
	challengeRating : "1",
	scores : [15, 10, 13, 10, 11, 13],
	saves : ["", 2, 3, "", 2, 3],
	skills : {
		"Perception" : 4,
		"Stealth" : 2
	},
	senses : "Blindsight 10 ft, darkvision 60 ft",
	passivePerception : 14,
	damage_immunities : "fire",
	languages : "Draconic",
	attacksAction : 1,
	attacks : [{
		name : "Bite",
		ability : 1,
		damage : [1, 10, "piercing"],
		range : "Melee (5 ft)",
		description : "",
        abilitytodamage : true
	}],
};

CreatureList["death snail"] = {
	name : "Death Snail",
	source : ["VSoS", 364],
	size : 5,
	type : "Monstrosity",
	companion : "witch's familiar",
	alignment : "Neutral Evil",
	ac : 14,
	hp : 11,
	hd : [2, 4],
	speed : "10 ft, climb 10 ft",
	proficiencyBonus : 2,
	challengeRating : "1/4",
	scores : [14, 6, 16, 10, 11, 6],
	senses : "Blindsight 30 ft (Blind beyond this radius)",
	passivePerception : 10,
	attacksAction : 1,
	attacks : [{
		name : "Leech",
		ability : 1,
		damage : [1, 4, "piercing"],
		range : "Melee (5 ft)",
        abilitytodamage : true,
		description : "+1d8 Poison dmg; DC 13 Con save or poisoned 1 min; repeat save at end of turn",
		tooltip : "The attack deals an additional 1d8 Poison damage; The target hit must succeed on a DC 13 Constitution saving throw or become poisoned for 1 minute. The creature can repeat the saving throw at the end of each of its turns, ending the effect on a success."
	}],
};

CreatureList["flying book"] = {
	name : "Flying Book",
	source : ["VSoS", 364],
	size : 5,
	type : "Construct",
	companion : "witch's familiar",
	alignment : "Unaligned",
	ac : 13,
	hp : 2,
	hd : [1, 4],
	speed : "0 ft, fly 30 ft (hover)",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [3, 15, 11, 1, 4, 1],
	senses : "Blindsight 60 ft (Blind beyond this radius)",
	passivePerception : 7,
	damage_immunities : "poison, psychic",
	damage_vulnerabilities : "fire",
	condition_immunities : "blinded, charmed, deafened, frightened, paralyzed, petrified, poisoned",
	attacksAction : 1,
	attacks : [{
		name : "Slam",
		ability : 2,
		damage : [1, "", "bludgeoning"],
		range : "Melee (5 ft)",
		description : "",
		abilitytodamage : false
	}],
	traits : [{
		name : "Antimagic Susceptibility",
		description : "The flying book is incapacitated while in the area of an antimagic field. If targeted by dispel magic, the flying books must succeed on a Constitution saving throw against the caster's spell save DC or fall unconscious for 1 minute.",
	}],
	features : [{
		name : "False Appearance",
		description : "While the flying book remains motionless, it is indistinguishable from a normal book.",
	}]
};

CreatureList["fright"] = {
	name : "Fright",
	source : ["VSoS", 365],
	size : 4,
	type : "Undead",
	companion : "witch_improved_familiar",
	alignment : "Chaotic Neutral",
	ac : 12,
	hp : 21,
	hd : [6, 6],
	speed : "0 ft, fly 40 ft (hover)",
	proficiencyBonus : 2,
	challengeRating : "1",
	scores : [1, 14, 10, 10, 9, 14],
	senses : "Darkvision 60 ft",
	passivePerception : 9,
	languages : "Understands all languages it knew in life but can't speak",
	damage_immunities : "poison",
	damage_resistances : "acid, cold, fire, lightning, necrotic, thunder; bludgeoning, piercing, and slashing from nonmagical weapons",
	condition_immunities : "charmed, exhaustion, grappled, paralyzed, petrified, poisoned, prone, restrained, unconcious",
	attacksAction : 1,
	attacks : [{
		name : "Life Drain",
		ability : 2,
		damage : [2, 8, "necrotic"],
		range : "Melee (5 ft)",
		description : "DC 12 Con Save or HP max reduced by damage taken until LR; dies if reduced to 0 max HP",
		tooltip : "The target must succeed on a DC 10 Constituion saving throw or its hit points maximum is reduced by an amount equal to the damage taken. This reduction lasts until the creature finishes a long rest. The target dies if this effect reduces its hit point maximum to 0",
		abilitytodamage : false
	}],
	traits : [{
		name : "Incorporeal Movement",
		description : "The fright can move through other creatures and objects as if they were difficult terrain. It takes 5 (1d10) force damage if it ends its turn inside an object.",
	}]
};

CreatureList["grep"] = {
	name : "Grep",
    source : ["VSoS", 365],
    size : 5,
	type : "Monstrosity",
	companion : "witch_improved_familiar",
	alignment : "Neutral",
	ac : 15,
	hp : 19,
	hd : [6, 4],
	speed : "15 ft, fly 50 ft",
	proficiencyBonus : 2,
	challengeRating : "1",
	scores : [3, 18, 13, 13, 15, 10],
	skills : {
		"Perception" : 4,
		"Sleight of Hand" : 6,
		"Stealth" : 6
	},
	senses : "Darkvision 60 ft, Adv. on Wis (Perception) checks using hearing or smell",
	passivePerception : 12,
    senses : "",
	languages : "Understands Common and Undercommon but can't speak",
	condition_immunities : "poisoned",
	attacksAction : 1,
	attacks : [{
		name : "Claw",
		ability : 2,
		damage : [1, 4, "slashing"],
		range : "Melee (5 ft)",
		description : "",
        abilitytodamage : true
	}],
	traits : [{
		name : "Ambusher",
		description : "The grep has advantage on attack rolls against any creature it has surprised.",
	}, {
		name : "Keen Hearing and Smell",
		description : "The grep has advantage on Wisdom (Perception) checks that rely on hearing or smell.",
	}, {
		name : "Mimicry",
		description : "The grep can mimic animal sounds and humanoid voices. A creature that hears the sounds can tell they are imitations with a successful DC 14 Wisdom (Insight) check.",
	}],
};

CreatureList["mock"] = {
	name : "Mock",
	source : ["VSoS", 366],
	size : 5,
	type : "Monstrosity",
	subtype : "Shapechanger",
	companion : "witch's familiar",
	alignment : "Neutral",
	ac : 11,
	hp : 18,
	hd : [4, 4],
	speed : "15 ft",
	proficiencyBonus : 2,
	challengeRating : "1/2",
	scores : [9, 11, 14, 4, 13, 6],
	skills : {
		"Stealth" : 5
	},
	senses : "Darkvision 60 ft",
	passivePerception : 11,
	damage_resistances : "acid",
	condition_immunities : "prone",
	attacksAction : 1,
	attacks : [{
		name : "Bite",
		ability : 2,
		damage : [1, 4, "piercing"],
		range : "Melee (5 ft)",
		description : "+1d6 Acid damage; Can trigger Adhesive",
        modifier : [1, ""],
        abilitytodamage : true
	}],
    calcChanges : {
        hp : function (totalHD, HDobj, prefix) {
            return [4, "The mock as a +4 bonus to HP. This is the same as 2\xD7(Prof. Bonus +  Con. Mod.)"]
        }
    },
	traits : [{
		name : "Shapechanger",
		description : "The mimic can use its action to polymorph into an object or back into its true, amorphous form. It can only take the appearance of Tiny objects and prefers the form of gold coins and jewels. Its statistics are the same in each form. Any equipment it is wearing or carrying isn't transformed. It reverts to its true form if it dies.",
	}, {
		name : "Adhesive (Object Form Only)",
		description : "The mimic adheres to anything that touches it. A creature which picks up the mimic can't drop it unless it succeeds a DC 9 Strength check, made with disadvantage. The mimic can only adhere to one creature at a time. The mimic has advantage on attack rolls against any creature adhered to it.",
	}],
	features : [{
		name : "False Appearance (Object Form Only)",
		description : "While the mimic remains motionless, it is indistinguishable from an ordinary object.",
	}]
};

CreatureList["moon jelly"] = {
	name : "Moon Jelly",
	source : ["VSoS", 366],
	size : 5,
	type : "Beast",
	companion : "witch's familiar",
	alignment : "Unaligned",
	ac : 11,
	hp : 1,
	hd : [1, 4],
	speed : "0 ft, swim 25 ft",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [1, 13, 8, 2, 11, 3],
	senses : "Darkvision 60 ft",
	passivePerception : 10,
	attacksAction : 0,
    attacks : [],
	traits : [{
		name : "Bioluminescense",
		description : "The moon jelly sheds dim light in a 10 ft radius.",
	}, {
		name : "Water Breathing",
		description : "The moon jelly can only breathe underwater.",
	}]
};

CreatureList["pet rock"] = {
	name : "Pet Rock",
	source : ["VSoS", 367],
	size : 5,
	type : "Elemental",
	companion : "witch's familiar",
	alignment : "Unaligned",
	ac : 15,
	hp : 5,
	hd : [1, 4],
	speed : "0 ft",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [1, 1, 16, 1, 5, 1],
	passivePerception : 5,
    senses : "",
	damage_vulnerabilities : "thunder",
	damage_immunities : "necrotic, poison, psychic",
	damage_resistances : "fire, lightning, radiant; bludgeoning, piercing, and slashing from nonmagical weapons",
	condition_immunities : "charmed, exhausted, frightened, paralyzed, petrified, poisoned, prone, unconscious",
	attacksAction : 0,
    attacks : [],
	traits : [{
		name : "Just a Rock",
		description : "The pet rock counts as an object for the purposes of spells and magical effects. Additionally, the rock cannot take actions that are not specified in its statistics.",
	}],
	features : [{
		name : "False Appearance",
		description : "The pet rock is indistinguishable from an ordinary rock with a face drawn on it.",
	}]
};

CreatureList["rag doll"] = {
	name : "Rag Doll",
	source : ["VSoS", 367],
	size : 5,
	type : "Construct",
	companion : "witch's familiar",
	alignment : "Neutral Good",
	ac : 11,
	hp : 2,
	hd : [1, 4],
	speed : "20 ft",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [4, 12, 10, 3, 5, 16],
	senses : "Darkvision 60 ft",
	passivePerception : 7,
	skills : {
		"Persuasion" : 3,
		"Stealth" : 3
	},
	damage_vulnerabilities : "fire",
    condition_immunities : "poisoned",
	damage_immunities : "poison, psychic; bludgeoning from nonmagical weapons",
	attacksAction : 1,
	attacks : [{
		name : "Headbutt",
		ability : 0,
		damage : [1, "", "bludgeoning"],
		range : "Melee (5 ft)",
		description : "",
		abilitytodamage : false
	}],
	traits : [{
		name : "Mimicry",
		description : "The rag doll can mimic simple sounds it has heard, such as a person whispering, a baby crying, or an animal chittering. A creature that hears the sounds can tell they are imitations with a successful DC 11 Wisdom (Insight) check.",
	}],
	features : [{
		name : "False Appearance",
		description : "While the rag doll remains motionless, it is indistinguishable from a normal stuffed toy.",
	}]
};

CreatureList["tin soldier"] = {
	name : "Tin Soldier",
	source : ["VSoS", 368],
	size : 5,
	type : "Construct",
	companion : "witch's familiar",
	alignment : "Lawful Neutral",
	ac : 14,
	hp : 7,
	hd : [2, 4],
	speed : "30 ft",
	proficiencyBonus : 2,
	challengeRating : "1/8",
	scores : [7, 12, 12, 5, 10, 10],
	senses : "Darkvision 60 ft",
	passivePerception : 12,
	skills : {
		"Perception" : 2
	},
	damage_immunities : "poison, psychic",
    condition_immunities : "poisoned",
	attacksAction : 1,
	attacks : [{
		name : "Bayonet",
		ability : 0,
		damage : [1, "", "piercing"],
		range : "Melee (5 ft)",
		description : "",
		abilitytodamage : false
	}, {
		name : "Rifle (Recharge 6)",
		ability : 2,
		damage : [1, 6, "piercing"],
		range : "20/60 ft",
		description : "",
		abilitytodamage : true
	}],
	traits : [{
		name : "Formation",
		description : "The tin soldier has advantage on attack rolls when it is within 5 feet of another tin soldier.",
	}],
	features : [{
		name : "False Appearance",
		description : "While the tin soldier remains motionless, it is indistinguishable from a normal toy.",
	}]
};

CreatureList["winter wolf pup"] = {
	name : "Winter Wolf Pup",
	source : ["VSoS", 368],
	size : 4,
	type : "Monstrosity",
	companion : "witch's familiar",
	alignment : "Neutral Evil",
	ac : 13,
	hp : 7,
	hd : [2, 6],
	speed : "45 ft",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [5, 12, 11, 4, 12, 7],
	passivePerception : 13,
    senses : "",
	skills : {
		"Perception" : 3,
		"Stealth" : 3
	},
	damage_resistances : "cold",
	attacksAction : 1,
	attacks : [{
		name : "Bite",
		ability : 2,
		damage : [1, "", "piercing"],
		range : "Melee (5 ft)",
		description : "",
		abilitytodamage : true
	}],
	traits : [{
		name : "Snow Camouflage",
		description : "The pup has advantage on Dexterity (Stealth) checks made to hide in snowy terrain.",
	}],
};

CreatureList["yarn golem"] = {
	name : "Yarn Golem",
	source : ["VSoS", 368],
	size : 5,
	type : "Construct",
	companion : "witch's familiar",
	alignment : "Chaotic Neutral",
	ac : 12,
	hp : 2,
	hd : [1, 4],
	speed : "30 ft",
	proficiencyBonus : 2,
	challengeRating : "0",
	scores : [8, 15, 10, 1, 10, 8],
	passivePerception : 10,
	damage_resistances : "piercing",
    damage_immunities : "poison, psychic",
    condition_immunities : "poisoned",
	attacksAction : 1,
    senses : "",
	attacks : [{
		name : "Tangle",
		ability : 2,
		damage : [0, "", ""],
		range : "Melee (5 ft)",
		description : "Medium or smaller target is restrained (escape DC 12)",
		abilitytodamage : false,
	}],
	traits : [{
		name : "Mutable Form",
		description : "Whenever a spell or effect would alter the golem's form, the effect works as normal, except that the new form is always made out of a tangle of yarn.",
	}],
	features : [{
		name : "False Appearance",
		description : "While the golem remains motionless, it is indistinguishable from a normal ball of yarn.",
	}]
};

// ! This section adds magic items

// * Amorist Only
MagicItemsList["potion of true love"] = {
    name: "Potion of True Love",
    sortname: "Potion, True Love",
    source: ["VSoS", 38],
    type: "potion",
    rarity: "",
    weight: 0.5,
    prerequisite: "Can only be made by 18th level Amorists",
    prereqeval: function (v) { return classes.known.alchemist.level >= 18 && classes.known.alchemist.subclass.indexOf("amorist") !== -1; },
    allowDuplicates: false,
    description: "When creating, choose a target. A creature who knows/meets the target within 24 hrs of drinking this is charmed by the target until I make a new potion of true love or the effect ends via remove curse/similar magic. On effect end, the creature is disgusted by the target & can never love them again.",
    descriptionLong: "Costs 4 reagent dice to create. When you make the potion, you choose the creature the target regards as its true love, provided the target knows the creature or meets it within 24 hours of consuming the potion. Additionally, this effect lasts indefinitely, ended only when you make a new potion of true love, or the effect is removed with a remove curse spell or similar magic. When this potion's effects are ended on a target, it regards the creature it once loved with total disgust, and can never love that creature again.",
    descriptionFull: "Starting at 18th level, during a long rest, you can spend 4 reagent dice to make an extremely potent potion of true love. This potion acts much like a philter of love, except that when you make the potion, you choose the creature the target regards as its true love, provided the target knows the creature or meets it within 24 hours of consuming the potion.\nAdditionally, this effect lasts indefinitely, ended only when you make a new potion of true love, or the effect is removed with a remove curse spell or similar magic. When this potion's effects are ended on a target, it regards the creature it once loved with total disgust, and can never love that creature again.",
}

// * Mutagenist's Only
MagicItemsList["mutagen"] = {
	name: "Mutagen",
	sortname: "Mutagen",
	source: ["VSoS", 40],
	type: "mutagen",
	rarity: "",
	prerequisite: "Can only be used by Mutagenists",
	prereqeval: function (v) { return classes.known.alchemist.level >= 2 && classes.known.alchemist.subclass.indexOf("mutagenist") !== -1; },
	allowDuplicates: false,
	choices: ['Strength', 'Dexterity', 'Constitution'],
	description: "Your Strength score increases by 3, to a maximum of 20. You sprout a natural weapon of your choice that you can make unarmed strikes with. This natural weapon deals 1d6 + Strength modifier damage, of type bludgeoning, piercing, or slashing.",
	"strength": {
		name: "Strength Mutagen",
		description: "Your Strength score increases by 3, to a maximum of 20. You sprout a natural weapon of your choice that you can make unarmed strikes with. This natural weapon deals 1d6 + Strength modifier damage, of type bludgeoning, piercing, or slashing.",
		descriptionLong: "Your Strength score increases by 3, to a maximum of 20. Additionally, you sprout claws, fangs, spines, horns, or a different natural weapon of your choice. You can use this natural weapon to make unarmed strikes. If you hit with it, you deal damage equal to 1d6 + your Strength modifier instead of the bludgeoning damage normal for an unarmed strike. The damage of this attack is bludgeoning, piercing, or slashing, as appropriate for the natural weapon.",
		descriptionFull: "Your Strength score increases by 3, to a maximum of 20. Additionally, you sprout claws, fangs, spines, horns, or a different natural weapon of your choice. You can use this natural weapon to make unarmed strikes. If you hit with it, you deal damage equal to 1d6 + your Strength modifier instead of the bludgeoning damage normal for an unarmed strike. The damage of this attack is bludgeoning, piercing, or slashing, as appropriate for the natural weapon.",
		scores: [3,0,0,0,0,0],
		weaponOptions : [{
			name : "Unarmed Strike (Strength Mutagen)",
			regExpSearch : /unarmed strike \(strength mutagen\)/i,
			source : [["VSoS", 40]],
			ability : 1,
			damage : [1, 6, "Choose"],
			type : "Natural",
			range : "Melee",
			abilitytodamage : true,
			baseWeapon : "unarmed strike",
			selectNow : true
		}]
	},
	"dexterity": {
		name: "Dexterity Mutagen",
		description: "Your Dexterity score increases by 3, to a maximum of 20. Additionally, your walking speed increases by 5 feet.",
		descriptionLong: "Your Dexterity score increases by 3, to a maximum of 20. Additionally, your walking speed increases by 5 feet.",
		descriptionFull: "Your Dexterity score increases by 3, to a maximum of 20. Additionally, your walking speed increases by 5 feet.",
		scores: [0,3,0,0,0,0],
		speed : {
			walk : {spd: "+5", enc : 0}
		}
	},
	"constitution": {
		name: "Constitution Mutagen",
		description: "Your Constitution score increases by 3, to a maximum of 20. As a result, your current and maximum hit points increase accordingly with your new Constitution score, but when this effect ends, both your current and maximum hit points decrease by the same amount.",
		descriptionLong: "Your Constitution score increases by 3, to a maximum of 20. As a result, your current and maximum hit points increase accordingly with your new Constitution score, but when this effect ends, both your current and maximum hit points decrease by the same amount.",
		descriptionFull: "Your Constitution score increases by 3, to a maximum of 20. As a result, your current and maximum hit points increase accordingly with your new Constitution score, but when this effect ends, both your current and maximum hit points decrease by the same amount.",
		scores: [0,0,3,0,0,0]
	}
}

// * Tri-mutagen as a magic item
MagicItemsList["trimutagen"] = {
	name: "Tri-Mutagen",
	sortname: "Tri-Mutagen",
	source: ["VSoS", 40],
	type: "mutagen",
	rarity: "",
	prerequisite: "Can only be used by Mutagenists with the Tri-Mutation discovery",
	prereqeval: function (v) { return classes.known.alchemist.subclass.indexOf("mutagenist") !== -1 && classes.known.alchemist.level >= 13},
	allowDuplicates: false,
	description: "Your Strength, Dexterity, and Constitution scores increase by 3, to a maximum of 20. Your walking speed increases by 5 feet, you sprout natural weapons that deal (1d6 + Str mod) damage of type bludgeoning/piercing/slashing damage. Your current and maximum hit points increase/decrease accordingly.",
	descriptionLong: "Your Strength, Dexterity, and Constitution scores increase by 3, to a maximum of 20. Your walking speed increases by 5 feet, you sprout natural weapons that deal (1d6 + Str mod) damage of type bludgeoning/piercing/slashing damage. Your current and maximum hit points increase/decrease accordingly.",
	descriptionFull: "Your Strength, Dexterity, and Constitution scores increase by 3, to a maximum of 20. Your walking speed increases by 5 feet, you sprout natural weapons that deal (1d6 + Str mod) damage of type bludgeoning/piercing/slashing damage. Your current and maximum hit points increase/decrease accordingly.",
	scores: [3,3,3,0,0,0],
	speed : {
		walk : {spd: "+5", enc : 0}
	}
}

// * Mutagenist's advanced mutagen effects
MagicItemsList["advanced mutation"] = {
	name: "Advanced Mutation",
	sortname: "Mutation, Advanced",
	source: ["VSoS", 41],
	type: "mutagen",
	rarity: "",
	prerequisite: "Can only be gained by 10th level Mutagenists",
	prereqeval: function (v) { return classes.known.alchemist.level >= 10 && classes.known.alchemist.subclass.indexOf("mutagenist") !== -1; },
	allowDuplicates: false,
	choices: ['Hyperelastic', 'Mucilaginous', 'Polybrachia'],
	description: "",
	"hyperelastic": {
		name: "Hyperelastic Mutation",
		description: "Melee weapons you use are considered to have the Reach property, if they didn't have it already. Additionally, you have advantage on ability checks you make to escape grapple or slip binds.",
		descriptionLong: "Your flesh takes on a rubbery quality, allowing you to bend and stretch with ease. Melee weapons you use are considered to have the Reach property, if they didn't have it already. Additionally, you have advantage on ability checks you make to escape grapple or slip binds.",
		descriptionFull: "Your flesh takes on a rubbery quality, allowing you to bend and stretch with ease. Melee weapons you use are considered to have the Reach property, if they didn't have it already. Additionally, you have advantage on ability checks you make to escape grapple or slip binds.",
		savetxt: {
			text: ["Adv. on checks to escape grapples or binds"]
		},
		calcChanges: {
			atkAdd : [
				function (fields, v){
					if (v.isMeleeWeapon && !/reach/i.test(v.WeaponTextName)) {
						fields.Description += (fields.Description ? "; " : "") + "Reach";
					}
				},
				"While under the effects of a Hyperelastic mutation, melee weapons I wield have Reach, if they didn't already."
			]
		}
	},
	"mucilaginous": {
		name: "Mucilaginous Mutation",
		description: "You can move up, down, and across vertical surfaces and upside down along ceilings, while leaving your hands free. You also have a climbing speed equal to your walking speed. Additionally, creatures have disadvantage on ability checks made to escape your grapples.",
		descriptionLong: "Your skin secretes a thick, extremely sticky substance that helps you adhere to objects. You can move up, down, and across vertical surfaces and upside down along ceilings, while leaving your hands free. You also have a climbing speed equal to your walking speed. Additionally, creatures have disadvantage on ability checks made to escape your grapples.",
		descriptionFull: "Your skin secretes a thick, extremely sticky substance that helps you adhere to objects. You can move up, down, and across vertical surfaces and upside down along ceilings, while leaving your hands free. You also have a climbing speed equal to your walking speed. Additionally, creatures have disadvantage on ability checks made to escape your grapples.",
		speed: {
			climb: {spd: "walk", enc: "walk"}
		}
	},
	"polybrachia": {
		name: "Polybrachia Mutation",
		description: "You grow a pair of extra arms. These arms are fully functional and can be used to hold weapons and shields (allowing you to hold 2 two-handed weapons, or 4 one-handed weapons), perform somatic components of spells, & perform other actions. The arms themselves don't grant you any additional actions.",
		descriptionLong: "You grow a pair of additional arms. These arms are fully functional and can be used to hold weapons and shields (allowing you to hold 2 two-handed weapons, or 4 one-handed weapons), perform somatic components of spells, and perform other actions, though the arms themselves don't grant you any additional actions.",
		descriptionFull: "You grow a pair of additional arms. These arms are fully functional and can be used to hold weapons and shields (allowing you to hold 2 two-handed weapons, or 4 one-handed weapons), perform somatic components of spells, and perform other actions, though the arms themselves don't grant you any additional actions.",
	}
}

// * Ooze bottle magic item for Ooze rancher subclass
MagicItemsList["ooze bottle"] = {
	name: "Ooze Bottle",
	sortname: "Bottle, Ooze",
	source: ["VSoS", 313],
	type: "potion",
	rarity: "rare",
	description: "As an action, you can throw this vial up to 20 feet, releasing a gray ooze. This ooze is friendly to you and your allies, and will attack the nearest creature it can detect. If there is no creature to attack, the ooze will follow you. The ooze dissolves into a lifeless sludge after 1 hour.",
	descriptionLong: "As an action, you can throw this vial up to 20 feet, shattering it on impact and releasing a gray ooze. This ooze is friendly to you and your allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, the ooze will follow you. However, the biochemistry of this ooze is unstable, and the ooze dissolves into a lifeless sludge after 1 hour. The charcoal-colored liquid inside this bottle seems to lunge about with unnatural momentum.",
    descriptionFull: "As an action, you can throw this vial up to 20 feet, shattering it on impact and releasing a gray ooze. This ooze is friendly to you and your allies, and will otherwise attack the nearest creature it can detect. If there is no creature to attack, the ooze will follow you. However, the biochemistry of this ooze is unstable, and the ooze dissolves into a lifeless sludge after 1 hour. The charcoal-colored liquid inside this bottle seems to lunge about with unnatural momentum.",
}

// * Bag of bones Necromancer 
MagicItemsList["bag of bones"] = {
    name: "Bag of Bones",
    source: ["VSoS", 131],
    type: "wondrous item",
    rarity: "none",
    attunement: false,
    description: "Use an action to place a corpse or willing Undead creature into an extradimensional space connected to the bag; up to 10 Medium or smaller corpses/creatures. Use an action to dump the contents of the bag within 5 feet of me. This bag is destroyed if placed in another extradimensional space.",
    descriptionLong: "Use an action to place a corpse or willing Undead creature into an extradimensional space connected to the bag; up to 10 Medium or smaller corpses/creatures. Use an action to dump the contents of the bag within 5 feet of me. This bag violently expels anything other than corpses/bones/undead creatures placed into it. This bag is destroyed if placed in another extradimensional space. Its contents remain in the same extradimensional space until I create a new bag.",
    descriptionFull: "The bag connects to a vast extradimensional space that can only hold Medium or smaller corpses, bones, and Undead creatures; it violently expels anything else placed within it. You can use an action to place a corpse or willing Undead creature into the bag, up to a maximum of ten corpses or Undead creatures, or use your action to dump the contents of the bag, which land in spaces within 5 feet of you. You can transform any container you can carry into a bag of bones by performing a special ritual over the course of 1 hour while you hold it. This container ceases to be magical if you perform this ritual again to create a new bag of bones. The container always connects to the same extradimensional space. If the bag is placed inside an extradimensional space, such as that created by a bag of holding, it is destroyed. Its contents remain in the same extradimensional space until you create a new bag.",
    action: [["action", " (add item)"], ["action", " (dump contents)"]]
};

// ! This section adds weapons

/*

"off-hand" or "secondary" for "two-weapon fighting"
Following properties get this feature:
    - Blaster
    - Loading
    - Reload
    - Thrown

TODO: Need to create a function that loops through each weapon with one of these properties and add "off-hand" to it
*/

RunFunctionAtEnd(function () {
    for( var weapon in WeaponsList ) {
        // If it has one of the following, it is considered to have the off-hand, two-weapon property
        var aRegExp = /(blaster|loading|reload|thrown)/i;
        // The weapon object
        var weaObj = WeaponsList[weapon];

        // Check whether one of the attributes is found
        if((aRegExp).test(weaObj.name + weaObj.description)) {
            // skip if this is not a firearm and if it's not a light weapon
            if( !/firearms?/i.test(weaObj.list) && !/light/i.test(weaObj.description) ) continue;
            // If "off-hand" or "secondary" isn't already included in the name or description, add it to the description.
            if(((/^(?!.*(spell|cantrip))(?=.*(off.{0,3}hand|secondary))(?=.*\-\d+\s?dmg)(?=.*\(min\.\s?1\)).*$/i).test(weaObj.name + weaObj.description))) continue;
            weaObj.description += (weaObj.description ? ", " : "") + "off-hand -2 dmg (min. 1)";
        }
    }
});

WeaponsList["bomb"] = {
	regExpSearch : /^(?!.*renaissance)(?=.*\bbomb\b).*$/i,
	name : "Bomb",
	source : [["VSoS", 294], ["VSoS", 29]],
	list : "ranged",
	ability : 1,
	dc : true,
	type : "Exotic",
	damage : [1, 10, "fire"],
	range : "30/90 ft",
	weight : 1,
	description : "Finesse, special, DC 11 Dex save or \u00BD dmg to all in 7.5 ft; See tool tip",
	tooltip : "   Special: When a bomb hits a target, it explodes in a 5-foot radius and is destroyed. The bomb can be thrown at an unoccupied space within its range. Each creature other than the target within the blast radius must succeed on a DC 11 Dexterity saving throw, taking half the damage rolled on a failed save or no damage on a successful one.\n   Additionally, as a bonus action, you can empty some of the bomb's explosive material to permanently remove the blast radius from this bomb, dealing damage only to the bomb's target.",
	special : true,
	abilitytodamage : true,
};
// * Simple weapons
WeaponsList["cestus"] = {
    regExpSearch : /cestus/i,
    name : "Cestus",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "bludgeoning"],
    range : "Melee",
    weight : 2,
    description : "Fist, light",
    tooltip : "Fist: Attacks made with this weapon are treated as unarmed strikes",
    abilitytodamage : true,
    monkweapon : true,
    baseWeapon : "unarmed strike"
};
WeaponsList["claw gauntlet"] = {
    regExpSearch : /claw gauntlet/i,
    name : "Claw Gauntlet",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "slashing"],
    range : "Melee",
    weight : 2,
    description : "Fist, light",
    tooltip : "Fist: Attacks made with this weapon are treated as unarmed strikes",
    abilitytodamage : true,
    monkweapon : true,
    baseWeapon : "unarmed strike"
};
WeaponsList["fishhook"] = {
    regExpSearch : /fishhook/i,
    name : "Fishhook",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 6, "piercing"],
    range : "Melee",
    weight : 3,
    description : "Versatile (1d8)",
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["hook hand"] = {
    regExpSearch : /hook hand/i,
    name : "Hook Hand",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "piercing"],
    range : "Melee",
    weight : 1,
    description : "Finesse, light, special",
    tooltip : "Special: A creature must be missing a hand to use this weapon. If a creature replaces their missing hand with their weapon, they're considered always proficient.",
    isAlwaysProf : true,
    special : true,
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["kama"] = {
    regExpSearch : /^(?=.*kama)(?!.*kusarigama).*$/i,
    name : "Kama",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "slashing"],
    range : "Melee",
    weight : 2,
    description : "Finesse, light",
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["machete"] = {
    regExpSearch : /machete/i,
    name : "Machete",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 6, "Slashing"],
    range : "Melee",
    weight : 4,
    description : "Special",
    tooltip : "Special: Deals double damage to Plants and vegetation",
    special : true,
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["pickaxe"] = {
    regExpSearch : /pickaxe/i,
    name : "Pickaxe",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 8, "piercing"],
    range : "Melee",
    weight : 10,
    description : "Two-handed",
    abilitytodamage : true,
};
WeaponsList["punching dagger"] = {
    regExpSearch : /punching dagger/i,
    name : "Punching Dagger",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "piercing"],
    range : "Melee",
    weight : 2,
    description : "Fist, light",
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["sai"] = {
    regExpSearch : /sai/i,
    name : "Sai",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "piercing"],
    range : "Melee",
    weight : 2,
    description : "Finesse, light",
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["scorpion on a stick"] = {
    regExpSearch : /scorpion on a stick/i,
    name : "Scorpion on a Stick",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 6, "poison"],
    range : "Melee",
    weight : 0.5,
    description : "",
    abilitytodamage : true,
    monkweapon : true
};
WeaponsList["shovel"] = {
    regExpSearch : /shovel/i,
    name : "Shovel",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 8, "slashing"],
    range : "Melee",
    weight : 5,
    description : "Two-handed",
    abilitytodamage : true,
};
WeaponsList["tonfa"] = {
    regExpSearch : /tonfa/i,
    name : "Tonfa",
    source : ["VSoS", 292],
    list : "melee",
    ability : 1,
    type : "Simple",
    damage : [1, 4, "bludgeoning"],
    range : "Melee",
    weight : 1,
    description : "Light",
    abilitytodamage : true,
    monkweapon : true
};
// * Martial Weapons
WeaponsList["bayonet"] = {
    regExpSearch : /bayonet/i,
    name : "Bayonet",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 4, "piercing"],
    range : "Melee",
    weight : 1,
    description : "Finesse, light, special",
    tooltip : "Special: As an action, a bayonet can be mounted to any two-handed ranged weapon or removed from it. While mounted, you can use the bayonet to make a two-handed melee weapon attack, which deals 1d8 piercing damage on a hit.",
    special : true,
    abilitytodamage : true,
};
WeaponsList["catchpole"] = {
    regExpSearch : /catchpole/i,
    name : "Catchpole",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 6, "piercing"],
    range : "Melee",
    weight : 6,
    description : "Reach, two-handed, special",
    tooltip : "Special: This weapon is used to immobilize creatures at a distance. When you hit a creature of Large size or smaller with this weapon, you can attempt to grapple the creature instead of dealing damage. This grapple check uses your attack roll instead of a Strength (Athletics) check. If I grapple a creature this way, I can't use this weapon on another target.",
    special : true,
    abilitytodamage : true,
};
WeaponsList["cutlass"] = {
    regExpSearch : /cutlass/i,
    name : "Cutlass",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 8, "slashing"],
    range : "Melee",
    weight : 2,
    description : "Finesse",
    abilitytodamage : true,
};
WeaponsList["estoc"] = {
    regExpSearch : /estoc/i,
    name : "Estoc",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 8, "piercing"],
    range : "Melee",
    weight : 3,
    description : "Versatile (1d10)",
    abilitytodamage : true,
};
WeaponsList["harpoon"] = {
    regExpSearch : /harpoon/i,
    name : "Harpoon",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 8, "piercing"],
    range : "Melee, 20/60 ft",
    weight : 4,
    description : "Thrown, special",
    tooltip : "You can use an action to tie a rope to the end of a harpoon before it is thrown. If a rope-tied harpoon hits a target, it becomes embedded in the target, and you can use an action on subsequent turns to hold fast to the rope and make an opposed Strength (Athletics) check against the target to pull it up to 10 feet closer to you. Additionally, when the target moves, you can use your reaction to make an opposed Strength (Athletics) check against it, preventing its movement on a success. If you use your action to do anything else, you lose your grip on the rope. If the target has hands, it can remove the harpoon as an action.",
    special : true,
    abilitytodamage : true,
};
WeaponsList["katana"] = {
    regExpSearch : /katana/i,
    name : "Katana",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 8, "slashing"],
    range : "Melee",
    weight : 3,
    description : "Finesse, versatile (1d10)",
    abilitytodamage : true,
};
WeaponsList["khopesh"] = {
    regExpSearch : /khopesh/i,
    name : "Khopesh",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 6, "slashing"],
    range : "Melee",
    weight : 4,
    description : "Fiensse, light, trip",
    tooltip : "Trip: You can attempt a shove against any creature within the weapon's reach. IYou have advantage on ability checks you make to shove a creature using this weapon.",
    abilitytodamage : true,
};
WeaponsList["naginata"] = {
    regExpSearch : /naginata/i,
    name : "Naginata",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 10, "slashing"],
    range : "Melee",
    weight : 5,
    description : "Heavy, reach, two-handed",
    abilitytodamage : true,
};
WeaponsList["nunchaku"] = {
    regExpSearch : /nunchaku/i,
    name : "Nunchaku",
    source : ["VSoS", 293],
    list : "melee",
    ability : 1,
    type : "Martial",
    damage : [1, 6, "bludgeoning"],
    range : "Melee",
    weight : 1,
    description : "Finesse, light",
    abilitytodamage : true,
};
WeaponsList["arc blade"] = {
	regExpSearch : /^(?=.*arc)(?=.*blade).*$/i,
	name : "Arc Blade",
	source : ["VSoS", 330],
	list : "spell",
	ability : 0,
	type : "Cantrip",
	damage : ["Bd8/Cd6", "", "lightning"],
	range : "With melee wea",
	description : "Wea dmg is Ltng; 1st dmg added to the atk; 2nd to a tgt within 5 ft on hit",
	abilitytodamage : false,
	dc : false
};
WeaponsList["burning blade"] = {
	regExpSearch : /^(?=.*burning)(?=.*blade).*$/i,
	name : "Burning Blade",
	source : ["VSoS", 331],
	list : "spell",
	ability : 0,
	type : "Cantrip",
	damage : ["Bd6/Cd6", "", "fire"],
	range : "With melee wea",
	description : "Wea dmg is Fire; 1st dmg added to the atk; 2nd as rea when tgt enters/ends in space",
	abilitytodamage : false,
	dc : false
};
WeaponsList["candy blast"] = {
	regExpSearch : /candy blast/i,
	name : "Candy Blast",
	source : ["VSoS", 332],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "bludgeoning"],
	range : "60 ft",
	description : "On hit, target space becomes difficult terrain; 1 action to clear",
	abilitytodamage : false,
	dc : false
};
WeaponsList["card trick"] = {
	regExpSearch : /card trick/i,
	name : "Card Trick",
	source : ["VSoS", 332],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 6, "force"],
	range : "60 ft",
	description : "Choose: spell attack, or target Dex save vs. spell save DC",
	abilitytodamage : false,
	dc : false
};
WeaponsList["caustic blade"] = {
	regExpSearch : /caustic blade/i,
	name : "Caustic Blade",
	source : ["VSoS", 332],
	list : "spell",
	ability : 0,
	type : "Cantrip",
	damage : ["Bd8/Cd8", "", "acid"],
	range : "With melee wea",
	description : "Wea dmg is Acid; 1st dmg on hit, 2nd on miss by 3 or less",
	abilitytodamage : false,
	dc : false
};
WeaponsList["eldritch orb"] = {
	regExpSearch : /eldritch orb/i,
	name : "Eldritch Orb",
	source : ["VSoS", 337],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "force"],
	range : "60 ft",
	description : "On hit, crea in 5 ft Dex save; success: nothing, fail: half dmg",
	abilitytodamage : false,
	dc : false
};
WeaponsList["eye of anubis"] = {
	regExpSearch : /eye of anubis/i,
	name : "Eye of Anubis",
	source : ["VSoS", 337],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "necrotic"],
	range : "60 ft",
	description : "On hit, tgt can't Disengage til end of my next turn; see spell or book for scaling",
	abilitytodamage : false,
	dc : false
};
WeaponsList["eye of ra"] = {
	regExpSearch : /eye of ra/i,
	name : "Eye of Ra",
	source : ["VSoS", 338],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "radiant"],
	range : "60 ft",
	description : "On hit, tgt can't Hide til end of my next turn; see spell or book for scaling",
	abilitytodamage : false,
	dc : false
};
WeaponsList["finger guns"] = {
	regExpSearch : /finger guns/i,
	name : "Finger Guns",
	source : ["VSoS", 338],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "force"],
	range : "60 ft",
	description : "1 action to attack for 1 minute; counts as firearm",
	abilitytodamage : false,
	dc : false
};
WeaponsList["flesh ripper"] = {
	regExpSearch : /flesh ripper/i,
	name : "Flesh Ripper",
	source : ["VSoS", 338],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "piercing"],
	range : "30 ft",
	description : "On hit, target can't move more than 30 ft away from me without a Str save",
	abilitytodamage : false,
	dc : false
};
WeaponsList["force dart"] = {
	regExpSearch : /force dart/i,
	name : "Force Dart",
	source : ["VSoS", 339],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 10, "force"],
	range : "120 ft",
	description : "Can target creatures or objects",
	abilitytodamage : false,
	dc : false
};
WeaponsList["force weapon"] = {
	regExpSearch : /force weapon/i,
	name : "Force Weapon",
	source : ["VSoS", 339],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 10, "Force"],
	range : "5 ft",
	description : "Can also make 1 opportunity attack before next turn; scaling adds atks, not dmg",
	abilitytodamage : false,
	dc : false
};
WeaponsList["frigid blade"] = {
	regExpSearch : /frigid blade/i,
	name : "Frigid Blade",
	source : ["VSoS", 340],
	list : "spell",
	ability : 0,
	type : "Cantrip",
	damage : ["Bd8/Cd8", "", "cold"],
	range : "With melee wea",
	description : "Wea dmg is Cold; 1st dmg add to atk; 2nd as rea to tgt if it moves before my next turn",
	abilitytodamage : false,
	dc : false
};
WeaponsList["lightning surge"] = {
	regExpSearch : /lightning surge/i,
	name : "Lightning Surge",
	source : ["VSoS", 347],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 6, "lightning"],
	range : "S:5-ft rad",
	description : "Crea in range Dex save; success: nothing",
	abilitytodamage : false,
	dc : true
};
WeaponsList["magic daggers"] = {
	regExpSearch : /magic daggers/i,
	name : "Magic Daggers",
	source : ["VSoS", 348],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 6, "piercing"],
	range : "60 ft",
	description : "Each die is a separate dagger; scaling adds attacks, not dmg",
	abilitytodamage : false,
	dc : false
};
WeaponsList["minor lifesteal"] = {
	regExpSearch : /minor lifesteal/i,
	name : "Minor Lifesteal",
	source : ["VSoS", 349],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 4, "necrotic"],
	range : "60 ft",
	description : "Con save, success: nothing; fail: I gain damage dealt as Temporary HP",
	abilitytodamage : false,
	dc : true
};
WeaponsList["sonic pulse"] = {
	regExpSearch : /sonic pulse/i,
	name : "Sonic Pulse",
	source : ["VSoS", 354],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 8, "thunder"],
	range : "60 ft",
	description : "Con save, fail: deafened until my next turn; within 10 ft, d10s instead of d8s",
	abilitytodamage : false,
	dc : true
};
WeaponsList["spark of life"] = {
	regExpSearch : /spark of life/i,
	name : "Spark of Life",
	source : ["VSoS", 354],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["Special", "", "bludgeoning"],
	range : "60 ft",
	description : "Corpse in range moves up to 15 ft and attack for 1d4/1d6/1d8/1d10/1d12 dmg; see book",
	abilitytodamage : false,
	dc : false
};
WeaponsList["thunderous distortion"] = {
	regExpSearch : /thunderous distortion/i,
	name : "Thunderous Distortion",
	source : ["VSoS", 355],
	list : "spell",
	ability : 6,
	type : "Cantrip",
	damage : ["C", 6, "thunder"],
	range : "S:10-ft cone",
	description : "Crea in area Con save; cast again next turn for d8s instead of d6s",
	abilitytodamage : false,
	dc : true
};

// ! This section adds spells

SpellsList["abduct"] = {
	name : "Abduct",
	classes : ["necromancer", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 329],
	level : 7,
	school : "Conj",
	time : "1 min",
	range : "1 mile",
	components : "V,S,M",
	compMaterial : "A silver saucer",
	duration : "1 h",
	save : "Cha",
    descriptionShorter : "known crea save or teleports w/in 30ft; I pick sit/stand/prone/bound, and if it stay or returns",
	description : "1 known crea in range save or teleport w/in 30 ft of me; sit/stand/prone/bound; stay or return at end",
	descriptionFull : "This spell teleports a creature to your location. Choose a creature within range that is known to you as the target of this spell. An unwilling creature can make a Charisma saving throw to resist this effect. The target is placed at a location of your choice within 30 feet of you. You choose if the target is sitting, standing, prone, or bound with nearby restraints. At the end of the spell’s duration, you can choose whether the target remains at your location or is teleported back to the location from which it was abducted."
};
SpellsList["aberrate"] = {
	name : "Aberrate",
	classes : ["witch", "druid", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 329],
	level : 2,
	school : "Trans",
	time : "1 a",
	range : "Self",
	components : "V,S",
	duration : "1 min",
    descriptionShorter : "No extra dmg from crits; after taking dmg, rea to resist that dmg type (not the trigger dmg)",
	description : "I don't take extra dmg from crits; after taking dmg, rea to resist that dmg type (not the trigger dmg)",
	descriptionFull : "This spell causes your anatomy to become fluid, constantly refreshing into new and more terrible shapes. For the duration, you do not take extra damage from critical hits." + "\n   " + "Additionally, your body adapts to threats as it warps. Immediately after you take damage while this spell is active, you can use your reaction to gain resistance to that damage type until this spell ends or until you use this ability again to gain resistance to a different damage type. This resistance doesn't apply to the triggering damage."
};
SpellsList["accelerate/decelerate"] = {
	name : "Accelerate/Decelerate",
	classes : ["bard", "sorcerer", "wizard"],
	source : ["VSoS", 329],
	level : 1,
	school : "Trans",
	time : "1 rea",
	timefull : "1 reaction, which you take when a creature you can see within 60 feet is hit with an attack",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A drop of oil or a drop of molasses",
	duration : "Instantaneous",
	description : "Triggering attack damage is increased or decreased by 1d6+1d6/SL+spell mod",
	descriptionFull : "This spell speeds up or slows down an attack the instant before it strikes, lessening or multiplying its force." + "\n   " + toUni("Accelerate") + ": Increase the damage the target takes by 1d6 + your spellcasting ability modifier." + "\n   " + toUni("Decelerate") + ": Reduce the damage the target takes by 1d6 + your spellcasting ability modifier (to a minimum of 0 damage)." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the change in damage increases by 1d6 for each slot level above 1st."
};
SpellsList["accursed act"] = {
	name : "Accursed Act",
	classes : ["witch"],
	source : ["VSoS", 329],
	level : 1,
	school : "Ench",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "Incense or a black candle",
	duration : "Conc, 1 min",
	save : "Wis",
	description : "1 crea save or 1d8+1d8/SL+spell mod Psy dmg 1/turn on atk or cast; if not, rpt save at EOT to end",
	descriptionFull : "Lighting a candle, you speak dark curses in a lost tongue, directed at one creature you can see within range. That creature must make a Wisdom saving throw or be cursed for the duration. While cursed, the creature takes psychic damage once per turn equal to 1d8 + your spellcasting ability modifier whenever it attacks or casts a spell. If the target doesn’t attack or cast a spell on its turn, it can repeat their saving throw at the end of their turn, ending the effect on a success." + "\n   " + "A remove curse spell ends this curse early." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, you deal an additional 1d8 psychic damage for each slot level above 1st."
};
SpellsList["action"] = {
	name : "Action",
	classes : ["witch", "bard", "paladin", "sorcerer", "wizard"],
	source : ["VSoS", 329],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "30 ft",
	components : "V,S,M",
	compMaterial : "A shaving of licorice root",
	duration : "1 rnd",
	description : "1 willing crea gets add'l action next turn to Attack (1 wea atk), Dash, Diseng., Hide, or Use Object",
	descriptionFull : "Choose a willing creature that you can see within range. During its next turn, the target gains an additional action. That action can be used only to take the Attack (one weapon attack only), Dash, Disengage, Hide, or Use an Object action."
};
SpellsList["aerial alacrity"] = {
	name : "Aerial Alacrity",
	classes : ["witch", "druid", "sorcerer", "wizard"],
	source : ["VSoS", 330],
	level : 2,
	school : "Trans",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A feather from a bird of prey",
	duration : "10 min",
	description : "willing crea w/fly speed gets hover, adv on Acrobatics, flyby, bns to Dash",
	descriptionFull : "Target a willing creature you can see within range that has a flying speed (including those with a temporary or magically bestowed flying speed). That creature gains the following benefits for the duration:" + "\n \u2022" + "The target can take the Dash action as a bonus action." + "\n \u2022" + "The target can hover." + "\n \u2022" + "The target has advantage on Dexterity (Acrobatics) checks." + "\n \u2022" + "The target doesn’t provoke an opportunity attack when it flies out of an enemy’s reach."
};
SpellsList["after image"] = {
	name : "After Image",
	classes : ["investigator", "ranger", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 330],
	level : 3,
	school : "Illus",
	time : "1 a",
	range : "Self",
	components : "V,S,M\u0192",
	compMaterial : "A silver hand mirror worth 50 gp",
	duration : "10 min",
	ritual: false,
	description : "When hit by atk, roll a die; odd hits duplicate, disappears until I move 10 ft or Dodge (50 gp)",
	descriptionFull : "You create an illusory duplicate of yourself which follows your every movement. When you are hit by an attack during the spell’s duration, roll any die. On an odd roll, the attack targets and hits the duplicate instead of you. The duplicate vanishes, reappearing after you move 10 feet or more or take the Dodge action. On an even roll, the attack targets you as normal."
};
SpellsList["antiballistics field"] = {
	name : "Antiballistics Field",
	classes : ["necromancer", "cleric", "wizard"],
	source : ["VSoS", 330],
	level : 6,
	school : "Abjur",
	time : "1 a",
	range : "S:40-ft rad",
	components : "V,S,M",
	compMaterial : "A pinch of wet gunpowder",
	duration : "Conc, 10 min",
	ritual: false,
	description : "Atks w/firearms fail and jam; 1 a to clear jam; firearm atks from outside, disadv and 1/2 dmg",
	descriptionFull : "An invisible 40-foot-radius field of magic extends from you, disrupting bullets and causing firearms to malfunction. Within the sphere, attacks with firearms fail, and firearms used to make an attack immediately jam. A jammed firearm can’t be used to make an attack until a creature uses its action to clear the weapon malfunction." + "\n   " + "Firearms outside the sphere which are fired into it have disadvantage on attack rolls, and deal only half damage on a successful hit."
};
SpellsList["arc blade"] = {
	name : "Arc Blade",
	classes : ["warmage"],
	source : ["VSoS", 330],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:5-ft rad",
	components : "V,M",
	compMaterial : "A melee weapon",
	duration : "Instantaneous",
	ritual: false,
	description : "Melee wea atk w/cast; hit: wea dmg is Ltng., +0d8 Ltng. dmg; 1 crea in 5ft 1d6 Ltng. dmg; +1 die ea CL5/11/17",
	descriptionCantripDie : "Melee wea atk w/cast; hit: wea dmg is Ltng., +`CD-1`d8 Ltng. dmg, 1 crea in 5 ft `CD`d6 Ltng. dmg",
	descriptionFull : "As part of the action used to cast this spell, you must make a melee attack with a weapon against one creature within the spell’s range, otherwise the spell fails. On a hit, the target suffers the weapon attack’s normal effects, except that any damage dealt by the attack is lightning damage instead of its normal type. Additionally, an arc of lightning jumps to a creature you choose within 5 feet of the target, dealing 1d6 lightning damage." + "\n   " + "This spell’s damage increases when you reach certain levels. At 5th level, the melee attack deals an additional 1d8 lightning damage, and the secondary damage deals an additional 1d6 lightning damage to their targets. Both damage rolls increase by one die at 11th level (2d8 and 3d6) and 17th level (3d8 and 4d6)."
};
SpellsList["arcane anomaly"] = {
	name : "Arcane Anomaly",
	classes : ["necromancer", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 330],
	level : 1,
	school : "Abjur",
	time : "1 a",
	range : "S:30-ft rad",
	components : "V,S,M",
	compMaterial : "A broken mirror",
	duration : "Conc, 1 min",
	ritual: false,
	description : "Spells cast in range have 1/6 chance to fail, wasting spell slot but not components",
	descriptionFull : "You spread cracks in the magical energy that suffuses the multiverse. For the duration, whenever a spell is cast within range, roll a d6. On a 1, the spell casting fails, expending a spell slot as normal, but not consuming expensive material components."
};
SpellsList["arcane capacitor"] = {
	name : "Arcane Capacitor",
	classes : ["sorcerer", "wizard"],
	source : ["VSoS", 330],
	level : 6,
	school : "Evoc",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A potato",
	duration : "Instantaneous",
	ritual: false,
	description : "Melee spell atk for 5d10 Force dmg; hit or miss, regain 1st-lvl spell slot; 7th:2nd, 9th:3rd",
	descriptionFull : "You channel a wave of arcane power into your fingertips, recycling the leftover energy into a new spell slot. Make a melee spell attack against a creature you can reach. On a hit, the target takes 5d10 force damage. Whether you hit or miss, you then regain one expended 1st-level spell slot." + AtHigherLevels + "When you cast this spell using a 7th-level spell slot, you instead regain an expended 2nd-level spell slot. If you cast it using a 9th-level spell slot, you instead regain an expended 3rd-level spell slot."
};
SpellsList["benign dismemberment"] = {
	name : "Benign Dismemberment",
	classes : ["investigator", "necromancer", "witch", "wizard"],
	source : ["VSoS", 331],
	level : 3,
	school : "Necro",
	time : "1 min",
	range : "Touch",
	components : "V,S",
	duration : "1 h",
	ritual: true,
	description : "willing crea can be dismembered w/o dmg; hold together to fix; irreversible on spell end",
	descriptionFull : "For the duration, a willing target’s body parts (fingers, legs, tail, and even its head) can be harmlessly severed from its body. It takes no damage from such dismemberment, as long as the cut removing the body part is swift and leaves a clean cut. The target’s head remains alive and conscious, and parts connected to it also remain alive. All severed body parts become inanimate, but do not begin decomposition for the spell’s duration. Any of the target’s severed body parts that are removed during this spell’s duration can be held back to the stump, which instantly causes the part to knit to the stump, restoring the body part." + "\n   " + "At the end of the duration, severed body parts become permanently severed. The target dies if vital organs have not been reattached to its head."
};
SpellsList["blood print"] = {
	name : "Blood Print",
	classes : ["investigator", "martyr", "necromancer", "witch", "bard", "cleric", "druid", "paladin", "ranger", "sorcerer", "wizard"],
	source : ["VSoS", 331],
	level : 1,
	school : "Necro",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "An ounce or more of blood",
	duration : "Instantaneous",
	ritual: true,
	description : "Know what type of crea a blood sample came from, & uniquely identify; can preserve and compare",
	descriptionFull : "At your touch, wet blood on a surface shifts and reforms into a pattern of crimson blotches. This blood print is unique to the particular creature to whom the blood belongs, but you can determine the creature’s kind (such as human, gnoll, deer, or fire giant) by examining the general shape. A print can be preserved by pressing a sheet of paper against it. If this spell is cast twice, it is possible to match samples of blood originating from the same creature by comparing the prints."
};
SpellsList["boomering"] = {
	name : "Boomering",
	classes : ["martyr", "cleric", "paladin", "sorcerer"],
	source : ["VSoS", 331],
	level : 1,
	school : "Evoc",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 3d6+1d6/SL Radiant dmg; miss: reroll once; extra tgts at higher levels",
	descriptionFull : "A dizzying ring of sparks launches from your outstretched hand and ricochets back to you moments later. Make a ranged spell attack roll against a creature within range. On a hit, you deal 3d6 radiant damage. If this attack misses, you can repeat the attack roll against the same target once." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d6 for each slot level above 1st." + "\n   " + "If you cast this spell using a spell slot of 3rd level or higher, after the ring hits the first target, it ricochets to a second target of your choice that you can see within 30 feet of the first target, dealing damage as normal on a hit. If you cast this spell using a spell slot of 5th level or higher, the ring can ricochet to a third target of your choice that you can see within 30 feet of the second target. No matter how many creatures the ring ricochets to, you can only repeat the attack roll against one of the spell’s targets."
};
SpellsList["burning blade"] = {
	name : "Burning Blade",
	classes : ["warmage"],
	source : ["VSoS", 331],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:5-ft rad",
	components : "V,M",
	compMaterial : "A melee weapon",
	duration : "Instantaneous",
	ritual: false, 
	description : "Melee wea atk w/cast; hit: wea dmg is Fire, +0d6 Fire dmg, fire stays in tgt space; +1d6 CL5/11/17, B",
	descriptionCantripDie : "Melee wea atk w/cast; hit: wea dmg is Fire, +`CD-1`d6 Fire dmg, ignite tgt space; crea in space `CD`d6 Fire dmg",
	descriptionFull : "As part of the action used to cast this spell, you must make a melee attack with a weapon against one creature within the spell’s range, otherwise the spell fails. On a hit, the target suffers the weapon attack’s normal effects, except that any damage dealt by the attack is fire damage instead of its normal type. Additionally, embers whirl in the target’s space. Until the start of your next turn, when a creature enters the space for the first time or ends its turn there, you can use your reaction to deal 1d6 fire damage to the creature, ending the spell." + "\n   " + "This spell’s damage increases when you reach certain levels. At 5th level, the melee attack deals an additional 1d6 fire damage to the target on a hit, and the secondary damage deals an additional 1d6 fire damage to its target. Both damage rolls increase by one die at 11th level (2d6 and 3d6) and 17th level (3d6 and 4d6)."
};
SpellsList["burnt offering"] = {
	name : "Burnt Offering",
	classes : ["martyr"],
	source : ["VSoS", 332],
	level : 1,
	school : "Abjur",
	time : "10 min",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A pyre and a slain animal",
	duration : "24 h",
	ritual: true,
	description : "While armored, Wis to AC instead of Dex; 3rd: reroll 1 saving throw, must use new roll",
	descriptionFull : "By constructing a pyre and burning an animal’s corpse, you court the favor of the gods. For the duration, while you are wearing armor, you can add your Wisdom modifier, instead of your Dexterity modifier, to your Armor Class." + AtHigherLevels + "If you cast this spell using a spell slot of 3rd level or higher, you can also reroll one saving throw you make during the duration. You can choose to reroll the saving throw after you roll the die, but must decide before the outcome is determined and must use the new roll."
};
SpellsList["candy blast"] = {
	name : "Candy Blast",
	classes : ["witch", "sorcerer", "wizard"],
	source : ["VSoS", 332],
	level : 0,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 1d8 Bludg. dmg; tgt space is diff. terrain; 1 a to clear; +1d8 CL5/11/17",
	descriptionCantripDie : "Ranged spell atk for `CD`d8 Bludg. dmg; tgt space is diff. terrain; 1 a to clear",
	descriptionFull : "You summon a handful of hard candy—boiled sweets, mints, jelly beans, etc.—and hurl them at a target you can see within range. Make a ranged spell attack roll. On a hit, the target takes 1d8 bludgeoning damage, and the space it is standing in, up to a 5-foot square, becomes difficult terrain until a creature uses an action to gather up the fallen candy. The candy produced by this spell is edible, but has no nutritional value." + "\n   " + "This spell’s damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8)."
};
SpellsList["card trick"] = {
	name : "Card Trick",
	classes : ["warmage", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 332],
	level : 0,
	school : "Trans",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A deck of playing cards",
	duration : "Instantaneous",
	save : "Dex",
	ritual: false,
	description : "Choose ranged spell attack or 1 crea Dex save, hit/fail: 1d6 Force dmg; +1d6 CL5/11/17",
    descriptionCantripDie : "Choose ranged spell atk or 1 crea Dex save; hit/fail: `CD`d6 Force dmg",
	descriptionFull : "With a flash of your hands, you fling a playing or tarot card charged with energy at your opponents. Choose whether you make a ranged spell attack roll or for the target to make a Dexterity saving throw. On a hit or a failed saving throw, the target takes 1d6 force damage." + "\n   " + "This spell’s damage increases by 1d6 when you reach 5th level (2d6), 11th level (3d6), and 17th level (4d6)."
};
SpellsList["caustic blade"] = {
	name : "Caustic Blade",
	classes : ["necromancer", "warmage"],
	source : ["VSoS", 332],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:5-ft rad",
	components : "V,M",
	compMaterial : "A melee weapon",
	duration : "Instantaneous",
	ritual: false, 
	description : "Melee wea atk w/cast; hit: wea dmg is Acid +0d8 Acid dmg, miss by 3 or less: 1d8 Acid dmg; +1d8 CL5/11/17",
	descriptionCantripDie : "Melee wea atk w/cast; hit: +`CD-1`d8 Acid dmg, miss by 3 or less: `CD`d8 Acid dmg",
	descriptionFull : "As part of the action used to cast this spell, you must make a melee attack with a weapon against one creature within the spell’s range, otherwise the spell fails. On a hit, the target suffers the weapon attack’s normal effects, except that any damage dealt by the attack is acid damage instead of its normal type. If you miss by 3 or less, acid splashes on the target, and you instead deal 1d8 acid damage." + "\n   " + "This spell’s damage increases when you reach certain levels. At 5th level, the melee attack deals an additional 1d8 acid damage to the target on a hit, and the acid damage dealt on a miss increases to 2d8. Both damage rolls increase by one die at 11th level (2d8 and 3d8) and 17th level (3d8 and 4d8)."
};
SpellsList["cheat"] = {
	name : "Cheat",
	classes : ["necromancer", "warmage", "witch", "bard", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 332],
	level : 0,
	school : "Div",
	time : "1 bns",
	range : "Self",
	components : "S,M",
	compMaterial : "A weighted die",
	duration : "1 rnd",
	ritual: false,
	description : "Reroll ability checks to play nonmagical games of skill",
	descriptionFull : "You subtly twist your fingers, and fate seems to follow suit. For the duration, you can reroll any ability check you make to play nonmagical games of skill. Therefore, this spell could influence a game of poker, but not the result of a deck of many things."
};
SpellsList["chromatic bullet"] = {
	name : "Chromatic Bullet",
	classes : ["paladin", "ranger"],
	source : ["VSoS", 333],
	level : 1,
	school : "Evoc",
	time : "1 bns",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A firearm",
	duration : "Conc, 1 min",
	ritual: false,
	description : "Next ranged firearm atk +2d4+2d4/SL Acid/Cold/Fire/Ltng/Psn/Thun. dmg; can chg wea dmg type",
	descriptionFull : "The next time you hit a creature with a ranged weapon attack using a firearm during the spell’s duration, your bullet sparks with elemental energy. The attack deals an extra 2d4 damage to the target. You choose whether this additional damage is acid, cold, fire, lightning, poison, or thunder damage, and you can choose to change the firearm’s damage to one of these damage types. You do not need to pick the same damage type for both." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 2d4 for each slot level above 1st."
};
SpellsList["clue"] = {
	name : "Clue",
	classes : ["investigator", "witch", "bard", "cleric", "druid", "paladin", "ranger", "wizard"],
	source : ["VSoS", 333],
	level : 1,
	school : "Div",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A magnifying glass and pipe",
	duration : "10 min",
	ritual: true,
	description : "Foot/fingerprints in 45 ft rad glow; pick a time w/in last 10 days; each crea print glows diff; reveals invis",
	descriptionFull : "When you cast this spell, all footprints and fingerprints within a 45-foot radius of a point you touch become highlighted and glow faintly for the duration. At the time of casting, choose any period of time up to the last 10 days to the present; only footprints and fingerprints left within that time will be highlighted. Each creature whose footprints or fingerprints are detected by the spell is assigned a unique color, but are not otherwise identified. Any creature that moves or touches objects in the area will also leave colorful footprints and fingerprints, which might reveal invisible creatures in the area."
};
SpellsList["concealed shot"] = {
	name : "Concealed Shot",
	classes : ["bard", "druid", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 333],
	level : 0,
	school : "Illus",
	time : "1 a",
	range : "Self",
	components : "S,M",
	compMaterial : "A ranged weapon",
	duration : "Instantaneous",
	description : "Ranged wea atk w/cast; projectile invis. in flight and wea doesn't reveal my position",
	descriptionFull : "As part of the action used to cast this spell, you must make an attack with a ranged weapon, otherwise the spell fails. The attack’s projectile is invisible while in flight, and the weapon itself is silent. If the weapon is a firearm, this spell suppresses the smoke and light the weapon produces, making it impossible to see or hear where the shot came from." + "\n   " + "This spell only conceals the first shot you make; any additional shots aren’t concealed."
};
SpellsList["conjure cannonball"] = {
	name : "Conjure Canonball",
	classes : ["sorcerer", "wizard"],
	source : ["VSoS", 333],
	level : 3,
	school : "Conj",
	time : "1 a",
	range : "600 ft",
	components : "V,S,M",
	compMaterial : "A small replica cannon",
	duration : "Instantaneous",
	save : "Dex",
	description : "Ranged spell atk for 4d10+1d10/SL Bludg. dmg; crea w/in 5 ft of target save or \u00BD dmg",
	descriptionFull : "You summon a cannonball, mid-flight and at full velocity, which explodes on impact. Make a spell attack roll against a target you can see within range. On a hit, the target takes 4d10 bludgeoning damage, and each creature within 5 feet of the target must make a Dexterity saving throw. On a failed save, a creature takes half as much damage." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d10 for each spell slot above 3rd."
};
SpellsList["conjure cover"] = {
	name : "Conjure Cover",
	classes : ["investigator", "druid", "ranger", "sorcerer", "wizard"],
	source : ["VSoS", 333],
	level : 1,
	school : "Conj",
	time : "1 bns",
	range : "10 ft",
	components : "V,S,M",
	compMaterial : "A duck figurine",
	duration : "Conc, 1 h",
	ritual: true,
	description : "Create 5\xD718\xD73 ft (L\xD7W\xD7H) segments; Med \u00BD, Small \u00BE, prone full cover; ea 10 AC, 60 hp; can hurdle",
	descriptionFull : "You conjure a low cobblestone wall along the ground, a perfect source of cover, at a point you can see within range. The wall is 18 inches thick and is composed of three 5-foot long by 3-foot high segments. Each segment must be contiguous with at least one other segment." + "\n   " + "A Medium creature that hunkers behind the wall has half cover from ranged attacks, and a Small creature that hunkers behind it has three-quarters cover from ranged attacks. A prone creature has full cover behind the wall. The wall can be leapt over without using any additional movement." + "\n   " + "Each segment has AC 10 and 60 hit points. Reducing a segment of the wall to 0 hit points causes it to crumble, destroying it. The wall disappears when all the segments are destroyed or the spell ends."
};
SpellsList["consecrated armor"] = {
	name : "Consecrated Armor",
	classes : ["investigator", "cleric"],
	source : ["VSoS", 334],
	level : 1,
	school : "Abjur",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A drop of blessed oil",
	duration : "8 h",
	ritual: true,
	description : "AC becomes 12+Dex, or 15+Dex against fiends and undead; can use w/shields",
	descriptionFull : "You trace a holy symbol on your chest, and an invisible barrier protects you until the spell ends. Your base AC becomes 12 + your Dexterity modifier. If you are attacked by a fiend or undead, your AC becomes 15 + your Dexterity modifier against that attack."
};
SpellsList["corruption curse"] = {
	name : "Corruption Curse",
	classes : ["witch"],
	source : ["VSoS", 334],
	level : 6,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Conc, 1 min",
	ritual: false,
	description : "1 crea cursed, choose Dex, Con, or Wis; disadv on chosen save and add'l effect; see book",
    descriptionShorter : "1 crea; I pick: Dex: disadv Dex save/chk, Con: disadv Con save/no heal, or Wis: disadv Wis save/spll atks",
	descriptionFull : "With a piercing glare and a sinister gesture, you send a ribbon of dark magic into a target’s body. A creature you can see within range is cursed for the duration and suffers from one of the following effects of your choice while cursed:" + "\n   " + toUni("Dull Reflexes") + ": The target has disadvantage on Dexterity checks and saving throws." + "\n   " + toUni("Feeble Fortitude") + ": The target has disadvantage on Constitution saving throws and can’t regain hit points." + "\n   " + toUni("Weak Will") + ": The target has disadvantage on Wisdom saving throws as well as spell attack rolls." + "\n   " + "A remove curse spell cast using a spell slot of 6th level or higher ends this curse early."
};
SpellsList["cryptogram"] = {
	name : "Cryptogram",
	classes : ["necromancer", "warmage", "witch", "bard", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 334],
	level : 0,
	school : "Conj",
	time : "1 a",
	range : "Unlimited",
	components : "V,S,M",
	compMaterial : "A small written message",
	duration : "Instantaneous",
	description : "Send a message up to 8 characters (incl. spaces) to known crea on same plane, 1/day",
	descriptionFull : "You send a small scroll with a short message to a creature of your choice. The recipient must be a creature known to you and also be on the same plane of existence as you. This scroll will hover in front of the recipient, drop into their pocket, or appear sitting on something nearby. The scroll’s message can be up to 8 characters long (spaces count as characters). You can send only one scroll to a single target each day."
};
SpellsList["curse of binding"] = {
	name : "Curse of Binding",
	classes : ["witch"],
	source : ["VSoS", 334],
	level : 7,
	school : "Ench",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A body part from the intended target, such as a fingernail, a lock of hair, or a drop of blood",
	duration : "Until dispelled",
	save : "Cha",
	ritual: true,
	description : "Pick 1 tgt and location; tgt must stay w/in 20 ft; if tgt starts turn \u003E20 ft away, Str save or drag 60 ft to it",
	descriptionFull : "You bind one creature or object to a location, cursing it so that it may never leave. Choose a target and a location within range, both of which you must be able to see. If the target is a creature, it must make a Charisma saving throw (a willing creature may choose to fail this save), or be cursed to be permanently bound to the chosen location. While cursed, the target can act and move around freely, as long as it remains within 20 feet of the point it is bound to. If the target begins its turn outside of this area, it must make a Strength saving throw against your spell save DC or be dragged 60 feet towards the point it was bound to." + "\n   " + "Additionally, if the creature tries to use extraplanar travel, it must make another Charisma saving throw. On a failure, the travel attempt fails and any resources used are wasted. On a success, the curse is suppressed until the creature returns to the plane on which it was bound, at which point the dragging effect resumes." + "\n   " + "A remove curse spell cast using a spell slot of 7th level or higher ends this curse early."
};
SpellsList["curse of blades"] = {
	name : "Curse of Blades",
	classes : ["necromancer", "witch", "bard", "warlock", "wizard"],
	source : ["VSoS", 334],
	level : 3,
	school : "Ench",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Wis",
	description : "1 crea w/wea, save or can't drop/stow wea; w/ Attack action, makes additional wea atk vs. self",
	descriptionFull : "Unholy bands of black energy tie a creature to its weapon. Choose a creature you can see within range that is holding a weapon to make a Wisdom saving throw. On a failed save, the creature is cursed for the duration. A cursed target can’t willingly drop or stow its weapon. Additionally, whenever it takes the Attack action on its turn, it makes one additional attack using its weapon targeting itself, against its own AC, dealing damage as normal on a hit." + "\n   " + "A remove curse spell ends this curse early."
};
SpellsList["curse of chains"] = {
	name : "Curse of Chains",
	classes : ["witch"],
	source : ["VSoS", 335],
	level : 1,
	school : "Ench",
	time : "1 a",
	range : "120 ft",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Con",
	ritual: false,
	description : "2 crea w/in 30 ft of another save, or can't move further apart; if 1 cursed, bns to pick another w/in 30 ft",
	descriptionFull : "A black brand resembling iron shackles darkens the ankles of two creatures you can see. Choose two creatures you can see within range of the spell, and within 30 feet of each other, to each make a Constitution saving throw. A willing creature can choose to fail this saving throw. On a failed save, a target is cursed for the duration. If only one target is cursed by this spell, you can use your action or bonus action on a subsequent turn to choose another target within 30 feet of the cursed creature to make a saving throw. While two creatures are cursed by this spell, they are unable to willingly move further away from each other." + "\n   " + "A remove curse spell ends this curse early."
};
SpellsList["curse ward"] = {
	name : "Curse Ward",
	classes : ["investigator", "martyr", "necromancer", "witch", "cleric", "paladin", "warlock", "wizard"],
	source : ["VSoS", 335],
	level : 2,
	school : "Abjur",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "1 h",
	ritual: false,
	description : "1 willing crea resist Necro. dmg; immune to curse, possession, and hexes; max HP can't be reduced",
	descriptionFull : "You reach out your hand and touch a willing creature within your reach, raising a smoke-like barrier around it. For the duration, the target has resistance to necrotic damage and can’t be cursed, possessed, or targeted by a hex. Also, its maximum hit points can’t be lowered. If the target is already affected by one of these effects, the effect is suspended until the spell ends."
};
SpellsList["dead fog"] = {
	name : "Dead Fog",
	classes : ["necromancer"],
	source : ["VSoS", 335],
	level : 3,
	school : "Necro",
	time : "1 a",
	range : "120 ft",
	components : "V,S",
	duration : "1 rnd",
	save : "Con",
	ritual: false,
    descriptionShorter : "15 ft rad sphere fog; crea enter/start turn save or 3d8+1d8/(10+5hp or SL) Necro; Escping can Str save",
	description : "Create 15-ft rad sphere of fog; crea enter or start turn in it save or 3d8+1d8/SL Necro. dmg; B",
	descriptionFull : "A 15-foot-radius sphere of fog, filled with the necromantic Dead Mists, appears centered on a point you can see within range. The fog spreads around corners, and its area is heavily obscured. It lasts for the duration, or until strong wind disperses the fog, ending the spell." + "\n   " + "When you cast this spell, you can empower it with your own life essence by losing 10, 15, or 20 hit points when you cast it. When you do so, treat the spell slot used to cast the spell as being one level higher if you lost 10 hit points, two levels higher if you lost 15 hit points, and three levels higher if you lost 20 hit points, up to a maximum of 9th level." + "\n   " + "When a creature enters the area for the first time on a turn or starts its turn there, it must make a Constitution saving throw, taking 3d8 necrotic damage on a failed save." + "\n   " + "Additionally, when a creature tries to leave the sphere of fog, you can choose for the fog to grasp the creature with misty tendrils. The creature must make a Strength saving throw to leave the fog, and is unable to move on a failed save." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d8 for each slot level above 3rd."
};
SpellsList["dead mist lash"] = {
	name : "Dead Mist Lash",
	classes : ["necromancer"],
	source : ["VSoS", 335],
	level : 1,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 3d8+1d8/(5hp/SL) Necro. dmg",
	descriptionFull : "You conjure forth a glowing white tendril formed of the sinister, necromantic Dead Mists, which lashes out at a foe you can see within range. When you cast this spell, you can empower it with your own life essence by losing 5, 10, or 15 hit points when you cast it. When you do so, treat the spell slot used to cast the spell as being one level higher for every 5 hit points lost, up to a maximum of 9th level." + "\n   " + "Make a ranged spell attack roll against a creature within range. On a hit, the target takes 3d8 necrotic damage." + AtHigherLevels + "If you cast this spell using a slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st."
};
SpellsList["defenestration"] = {
	name : "Defenestration",
	classes : ["bard"],
	source : ["VSoS", 336],
	level : 2,
	school : "Evoc",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Str",
	ritual: false,
	description : "1 crea save \u0026 pushed 5 ft or 4d6+1d6/SL Slash dmg and flies 20 ft away through a window",
	descriptionFull : "A wave of force erupts from your open hand, hurling a creature you can see within range through a window. The target makes a Strength saving throw. On a failure, the target is thrown up to 20 feet through a window of your choice. If there is no window within 20 feet of the target, it is instead thrown through a window of arcane force, which materializes 10 feet behind it and vanishes after the creature shatters it. The target takes 4d6 slashing damage as it flies through a window. On a successful save, the target instead is pushed back 5 feet and takes no damage." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, the target can be pushed back an additional 5 feet for each slot level above 2nd, and takes an additional 1d6 slashing damage for each slot level above 2nd."
};
SpellsList["delay"] = {
	name : "Delay",
	classes : ["necromancer", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 336],
	level : 2,
	school : "Trans",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "An octagonal sign",
	duration : "Instantaneous",
	save : "Wis",
	ritual: false,
	description : "1 crea save or moved to end of init. starting next rnd onwards",
	descriptionFull : "You briefly slow time for a creature of your choice that you can see within range. The target must succeed on a Wisdom saving throw or be moved to last place in the initiative order from the beginning of the next round onwards."
};
SpellsList["demand"] = {
	name : "Demand",
	classes : ["witch", "bard", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 336],
	level : 6,
	school : "Ench",
	time : "1 a",
	range : "Unlimited",
	components : "V,S,M",
	compMaterial : "A snake's tongue and a piece of copper wire",
	duration : "Conc, 8 h",
	save : "Wis",
	ritual: false,
    descriptionShorter : "Send msg \u226425 words to crea w/ Int \u22651; can use as per Suggestion spell",
	description : "Send 25 words or less to 1 crea, it can reply; can use as per Suggestion; B",
	descriptionFull : "You send a short message of twenty-five words or fewer to a creature with which you are familiar. The creature hears the message in its mind, recognizes you as the sender if it knows you, and can answer in a like manner immediately. The spell enables creatures with Intelligence scores of at least 1 to understand the meaning of your message." + "\n   " + "You can send the message across any distance, and even to other planes of existence, but if the target is on a different plane than you, there is a 5 percent chance that the message doesn’t arrive." + "\n   " + "You can use this message to suggest a reasonable-sounding course of activity to the target, in which case the target must make a Wisdom saving throw or be compelled to follow your instructions for the duration, as per the suggestion spell."
};
SpellsList["dire charm"] = {
	name : "Dire Charm",
	classes : ["witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 336],
	level : 4,
	school : "Ench",
	time : "1 a",
	range : "Touch",
	components : "V,S,M\u0192",
	compMaterial : "A nymph's eyelash, worth at least 100 gp",
	duration : "10 days",
	save : "Wis",
	ritual: false,
	description : "1 humanoid save w/ disadv unless fighting or charmed; Reroll save if we harm it; Becomes perm. \u2265SL",
	descriptionFull : "You attempt to charm a humanoid you can see within range. It must make a Wisdom saving throw, and has disadvantage unless you or your companions are fighting it. If it fails the saving throw, it is charmed by you until the spell ends. If you or your companions do anything harmful to it, it can reattempt the saving throw. The charmed creature regards you as a friendly acquaintance. When the spell ends, the creature knows it was charmed by you." + AtHigherLevels + "When you cast this spell using a spell slot of 8th level or higher, the duration becomes permanent (until dispelled)."
};
SpellsList["dire warning"] = {
	name : "Dire Warning",
	classes : ["investigator", "necromancer", "cleric", "wizard"],
	source : ["VSoS", 336],
	level : 4,
	school : "Div",
	time : "1 a",
	range : "Self",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Get 6 helpful words from future self; must do 10-min ritual w/in 1 week to deliver; B",
    descriptionShorter : "Receive \u22646 word msg from future me; must do 10 min (R) w/in 1 week before casting again",
	descriptionFull : "You receive a message of up to 6 words from your future self, warning you of a critical threat or pointing you toward a fruitful avenue. At some point in the future, once you have learned why you sent the message, you must perform a 10-minute-long ritual to deliver the message back in time to your past self. Once you cast this spell, you can’t cast it again until you perform this ritual, or one week later if you don’t discover this information. If you cast this spell and receive no message, it indicates that you never complete the ritual in the future, possibly owing to your death or some other hindrance."
};
SpellsList["distort gravity"] = {
	name : "Distort Gravity",
	classes : ["investigator", "necromancer", "druid", "sorcerer", "wizard"],
	source : ["VSoS", 337],
	level : 4,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A gyroscope",
	duration : "Conc, 1 h",
	ritual: true,
	description : "All crea/obj w/in 15 ft of where I touch, treat as if it was the ground; All crea/obj fall after spell ends",
	descriptionFull : "The spell manipulates the direction of gravity on a non-horizontal surface you touch, causing it to attract creatures and objects within 15 feet of it as if it were the ground. The surface can be up to a 60-foot square in area and can wrap around a structure, if its geometry permits. A creature can walk on this surface as if it were level ground, even if the surface is perpendicular to the ground or upside down." + "\n   " + "When the duration ends, all creatures and objects fall from the surface."
};
SpellsList["eldritch orb"] = {
	name : "Eldritch Orb",
	classes : ["necromancer", "witch", "warlock"],
	source : ["VSoS", 337],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Dex",
	ritual: false,
	description : "Ranged spell atk for 1d8 Force dmg; each crea in 5 ft save or half dmg; +1d8 CL5/11/17",
	descriptionCantripDie : "Ranged spell atk for `CD`d8 Force dmg; each crea in 5 ft save or half dmg",
	descriptionFull : "You fling a ball of eldritch energy at a creature or object within range. Make a ranged spell attack against the target. On a hit, the target takes 1d8 force damage, and each other creature within 5 feet of the target must make a Dexterity saving throw. On a failed save, a creature takes half as much damage." + "\n   " + "This spell’s damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8)."
};
SpellsList["elemental curse"] = {
	name : "Elemental Curse",
	classes : ["witch"],
	source : ["VSoS", 337],
	level : 6,
	school : "Evoc",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Con",
	ritual: false,
	description : "1 crea save or vuln to Acid/Cold/Fire/Ltng/Thun; if resist, no resist; if immune, resist",
	descriptionFull : "A spark leaps from your finger to a creature you touch, spreading in bright cracks across its skin. The target must make a Constitution saving throw or be cursed for the duration. While cursed, the target has vulnerability to your choice of acid, cold, fire, lightning, or thunder damage. If the creature has resistance to the chosen damage type, it instead only loses that resistance. If the target has immunity to the chosen damage type, it is treated as having only resistance to that damage." + "\n   " + "A remove curse spell ends this curse early."
};
SpellsList["evasiveness"] = {
	name : "Evasiveness",
	classes : ["sorcerer", "wizard"],
	source : ["VSoS", 337],
	level : 5,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,M",
	compMaterial : "A scrap of silk",
	duration : "Conc, 1 h",
	ritual: false,
	description : "1 crea AC becomes 20 and gets adv. on Dex saves",
	descriptionFull : "You touch a willing creature. Until the spell ends, the target gains a superhuman ability to dodge attacks. The target’s AC becomes 20, if it were lower, regardless of what kind of armor it is wearing, and it has advantage on Dexterity saving throws."
};
SpellsList["exhume"] = {
	name : "Exhume",
	classes : ["necromancer", "cleric", "wizard"],
	source : ["VSoS", 337],
	level : 1,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A drop of blood",
	duration : "Instantaneous",
	ritual: true,
	description : "A pile of humanoid bones emerge from the ground; 1d4 piles if in a burial place",
	descriptionFull : "Choose an unoccupied 20-foot square within range—note that the area must have solid earth beneath it; this spell fails if cast on the upper floor of a building. This spell then causes one pile of humanoid bones to rise out of the ground within that square. If you cast this spell within a burial place such as a graveyard, mausoleum, or barrow, 1d4 piles of bones are exhumed instead of 1. The ground itself is not changed or disturbed by this spell; the bones simply appear out of the ground."
};
SpellsList["eye of anubis"] = {
	name : "Eye of Anubis",
	classes : ["necromancer", "witch", "cleric"],
	source : ["VSoS", 337],
	level : 0,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "M",
	compMaterial : "A holy symbol",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 1d8 Necro dmg \u0026 can't Diseng. til end of my next turn; +1d8 CL5/11/17 \u0026 +1 atk CL5; B",
    descriptionCantripDie : "Ranged spell atk for `CD`d8 Necro \u0026 can't Diseng. til end of my next turn; +1 atk at CL5 for `CD-1`d8 Necro",
	descriptionFull : "A beam of tenebrous moonlight streaks from your left eye toward a creature within range. Make a ranged spell attack against the target. On a hit, the target takes 1d8 necrotic damage and can’t take the Disengage action until the end of your next turn. This spell creates an additional beam and deals more damage at higher levels. At 5th level, you fire a second beam originating from your right eye. Your first beam’s damage increases by 1d8 (2d8) when you reach 11th level, and your second beam’s damage increases by 1d8 (2d8) when you reach 17th level."
};
SpellsList["eye of ra"] = {
	name : "Eye of Ra",
	classes : ["cleric"],
	source : ["VSoS", 338],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "60 ft",
	components : "M",
	compMaterial : "A holy symbol",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 1d8 Radiant dmg \u0026 can't Hide until end of my next turn; +1d8 CL5/11/17 \u0026 +1 atk CL5; B",
    descriptionCantripDie : "Ranged spell atk for `CD`d8 Radiant \u0026 can't Hide until end of my next turn; +1 atk at CL5 for `CD-1`d8 Radiant",
	descriptionFull : "A beam of furious radiance erupts from your right eye, directed at a creature you can see within range. Make a ranged spell attack against the target. On a hit, the target takes 1d8 radiant damage and can’t take the Hide action until the end of your next turn. This spell creates an additional beam and deals more damage at higher levels. At 5th level, you fire a second beam originating from your left eye. Your first beam’s damage increases by 1d8 (2d8) when you reach 11th level, and your second beam’s damage increases by 1d8 (2d8) when you reach 17th level."
};
SpellsList["false vision"] = {
	name : "False Vision",
	classes : ["investigator", "necromancer", "witch", "bard", "wizard"],
	source : ["VSoS", 338],
	level : 4,
	school : "Illus",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A pinch of dust from a precious gem",
	duration : "8 h",
	ritual: false,
	description : "1 crea/place/obj \u226410 ft in any dimension hidden from divination, or I can deceive the diviner",
	descriptionFull : "For the duration, you hide a target that you touch from divination magic. The target can be a willing creature, a place, or an object no larger than 10 feet in any dimension. If the target is targeted by any divination magic or perceived through a scrying spell’s sensors, you are able to present the diviner with false information of your choice, as long as you are conscious at the time of the divination attempt. The target could appear to be in different circumstances, in one or more false locations, or completely undetectable."
};
SpellsList["finger guns"] = {
	name : "Finger Guns",
	classes : ["warmage", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 338],
	level : 0,
	school : "Evoc",
	time : "1 bns",
	range : "Self",
	components : "V,S",
	duration : "1 min",
	ritual: false,
	description : "Action for ranged spell atk, 60 ft, 1d8 Force dmg on hit; counts as firearm; +1d8 CL5/11/17",
	descriptionCantripDie : "Action for ranged spell atk, 60 ft, `CD`d8 Force dmg on hit; counts as firearm",
	descriptionFull : "You extend your forefinger and thumb, a dangerous gesture mimicking a gun. For the duration, you can use your action to make a ranged spell attack against one creature you can see within 60 feet of you, dealing 1d8 force damage on a hit." + "\n   " + "Your finger gun doesn’t require ammunition, but it is considered to be a firearm for spells and effects that apply to firearms." + "\n   " + "The spell’s damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8)."
};
SpellsList["flawed reconstruction"] = {
	name : "Flawed Reconstruction",
	classes : ["necromancer", "witch", "warlock", "wizard"],
	source : ["VSoS", 338],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A needle and thread",
	duration : "Instantaneous",
	ritual: false,
	description : "1 crea regain 4d6+1d6/SL hit points; max hit points reduced by same until LR",
    descriptionShorter : "1 crea regains 4d6+1d6/SL hp; max hp reduced by same until end of long rest; Leaves perm. scars",
	descriptionFull : "You stitch together the wounds of a willing creature you touch, which regains 4d6 hit points. However, the mending is imperfect, and the target’s hit point maximum is reduced by the same amount until it finishes a long rest. A creature that regains hit points due to this spell will be left with some permanent scars." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the healing increases by 1d6 for each slot level above 1st."
};
SpellsList["flesh ripper"] = {
	name : "Flesh Ripper",
	classes : ["necromancer"],
	source : ["VSoS", 338],
	level : 0,
	school : "Trans",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Str",
	ritual: false,
	description : "Ranged spell atk for 1d8 Prc dmg \u0026 save or can't move more than 30 ft from me; +1d8 CL5/11/17",
	descriptionCantripDie : "Ranged spell atk for `CD`d8 Pierc. \u0026 save or must stay w/in 30 ft of me, ending if \u003E30 ft away",
	descriptionFull : "As you cast this spell, a spectral meat hook is flung at the creature of your choice, connected to a spectral chain. Make a ranged spell attack against a creature within range. On a hit, the target takes 1d8 piercing damage as a spectral meat hook plunges into their body. Until the start of your next turn, the target must make a Strength saving throw to move further than 30 feet from you. On a failed save, it is prevented from moving until the start of your turn. This effect ends if you are further than 30 feet away from the target." + "\n   " + "This spell’s damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8)."
};
SpellsList["force buckler"] = {
	name : "Force Buckler",
	classes : ["warmage"],
	source : ["VSoS", 339],
	level : 0,
	school : "Abjur",
	time : "1 bns",
	range : "Self",
	components : "V,S,M\u0192",
	compMaterial : "A specially prepared gauntlet worth at least 5 gp",
	duration : "1 rnd",
	ritual: false,
	description : "My AC gains +2 as if wielding a shield; ends if hit by an attack",
	descriptionFull : "You summon a translucent yet visible field of force, which springs forth from the prepared gauntlet. Until the start of your next turn, this shield grants you a +2 bonus to your Armor Class, as if you were wielding a shield. This spell ends early if you are hit by an attack."
};
SpellsList["force dart"] = {
	name : "Force Dart",
	classes : ["warmage"],
	source : ["VSoS", 339],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M\u0192",
	compMaterial : "A specially prepared gauntlet worth at least 5 gp",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk for 1d10 Force dmg; +1d10 CL5/11/17",
	descriptionCantripDie : "Ranged spell atk for `CD`d10 Force dmg",
	descriptionFull : "You fling a dart of magical force at a creature or object within range. Make a ranged spell attack against the target. On a hit, the target takes 1d10 force damage." + "\n   " + "This spell’s damage increases by 1d10 when you reach 5th level (2d10), 11th level (3d10), and 17th level (4d10)."
};
SpellsList["force weapon"] = {
	name : "Force Weapon",
	classes : ["warmage"],
	source : ["VSoS", 339],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "5 ft",
	components : "V,S,M\u0192",
	compMaterial : "A specially prepared gauntlet worth at least 5 gp",
	duration : "1 rnd",
	ritual: false,
	description : "Melee spell atk for 1d10 Force dmg; can opportunity attack until next turn; +1 atk CL5/11/17",
	descriptionCantripDie : "`CD` melee spell atks for 1d10 Force dmg each; can make 1 Opp. Attack before next turn",
	descriptionFull : "You conjure a blade of magical force in the air, which lashes out at your foes. Make a melee spell attack against a creature within range. On a hit, the target takes 1d10 force damage. The blade remains in existence for a short time; until the start of your next turn, you can make a single strike with your mystical blade as an opportunity attack." + "\n   " + "You can make 1 additional attack on your turn at 5th level (2 attacks), at 11th level (3 attacks), and at 17th level (4 attacks)."
};
SpellsList["free throw"] = {
	name : "Free Throw",
	classes : ["bard", "sorcerer", "wizard"],
	source : ["VSoS", 339],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Self",
	components : "S,M",
	compMaterial : "A scrap of pigskin",
	duration : "1 rnd",
	save : "Dex",
	ritual: false,
	description : "I throw 1 obj \u22645+5/SL lb. up to 150 ft; If at crea, ignores cover \u0026 save or 4d4+2d4/SL Bludg dmg; save halves",
	descriptionFull : "As part of the casting of this spell, you throw a handheld object weighing 5 pounds or less. For the duration of the spell, you choose the object’s exact trajectory, up to 150 feet of distance. The object can navigate around obstacles and corners, and ignores half and three-quarters cover if it is directed at a creature. If the object strikes a creature, that creature must make a Dexterity saving throw or take 4d4 bludgeoning damage, or half as much on a successful save. The object stops moving after striking a creature or object." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the maximum weight of objects that you can throw with this spell increases by 5 pounds, and the damage increases by 2d4 for each slot level above 1st."
};
SpellsList["frenzy"] = {
	name : "Frenzy",
	classes : ["necromancer", "witch", "bard", "wizard"],
	source : ["VSoS", 340],
	level : 6,
	school : "Ench",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M",
	compMaterial : "A drop of fresh blood",
	duration : "Conc, 1 min",
	save : "Wis",
	ritual: false,
	description : "Crea in 20 ft of a point save or atk crea in reach or self w/melee wea; improv/unarmed if no melee wea",
	descriptionFull : "With a gesture, you reduce a crowd to base instinct and violence. Choose a point you can see within range. Each creature within 20 feet of that point must make a Wisdom saving throw. On a failed save, a creature is frenzied for the duration. When a creature is frenzied, it draws a melee weapon, if it has one." + "\n   " + "A frenzied creature must use its action at the beginning of its turn to attack a creature within its reach. It uses a melee weapon, if it has one, or an improvised weapon or unarmed strike if it doesn’t. If multiple targets are within the creature’s reach, it chooses its target randomly. If there is no target within the creature’s reach, it attacks itself, against its own AC, dealing damage as normal on a hit." + "\n   " + "At the end of its turn, a frenzied creature can repeat its saving throw, ending the effect on itself early on a success."
};
SpellsList["frigid blade"] = {
	name : "Frigid Blade",
	classes : ["warmage"],
	source : ["VSoS", 340],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:5-ft rad",
	components : "V,M",
	compMaterial : "A melee weapon",
	duration : "1 rnd",
	ritual: false,
	description : "Melee wea atk w/cast; hit: wea dmg is Cold +0d8 Cold dmg, 1d8 Cold if moves before my turn; +1d8 CL5/11/17, B",
	descriptionCantripDie : "Melee wea atk with cast; hit: wea dmg is Cold, +`CD-1`d8 Cold, rea for `CD`d8 Cold if moves before my turn",
	descriptionFull : "As part of the action used to cast this spell, you must make a melee attack with a weapon against one creature within the spell’s range, otherwise the spell fails. On a hit, the attack does damage as normal, except that the attack deals cold damage instead of its normal type. Additionally, the target is covered in a brittle frost until the start of your next turn. If the target willingly moves before then, you can use your reaction to deal 1d8 cold damage to the target, ending the spell." + "\n   " + "At 5th level, the melee attack and secondary damage each deal an additional 1d8 cold damage. Both damage rolls increase by 1d8 at 11th level (2d8 and 3d8) and 17th level (3d8 and 4d8)."
};
SpellsList["frolicking fountain"] = {
	name : "Frolicking Fountain",
	classes : ["witch", "bard", "druid", "warlock", "wizard"],
	source : ["VSoS", 340],
	level : 5,
	school : "Ench",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M",
	compMaterial : "A conductor's baton",
	duration : "Conc, 1 min",
	save : "Wis",
	ritual: false,
	description : "Create 5-ft water cube; crea that see it w/in 60 ft save or charmed; B",
	descriptionFull : "You conjure a 5-foot cube of water that animates in a hypnotic motion at an unoccupied space within range. The water swirls for the duration, not leaving its space except to send small jets up to five feet into the air. Each creature within 60 feet other than you which sees the fountain must make a Wisdom saving throw or become charmed by you for the duration. While charmed by this spell, a creature must use its movement on each of its turns to get as close to the water as possible. A charmed creature can’t willingly move away from the fountain. At the end of its turn, a charmed creature can attempt the saving throw again, ending the effect on a success. Once a creature has succeeded on a save against this spell, it can’t be affected by the same instance of it again." + "\n   " + "If a creature is within 5 feet of the fountain, you can use a bonus action to command the water to lash out at that creature. Make a melee spell attack against the target. On a hit, the water deals 4d6 bludgeoning damage to the target. If the target is charmed by this spell, it can attempt the saving throw again after taking damage from it."
};
SpellsList["gahoul's glorious gothic"] = {
	name : "Gahoul's Glorious Gothic",
	classes : ["necromancer"],
	source : ["VSoS", 340],
	level : 8,
	school : "Conj",
	time : "1 h",
	range : "1 mile",
	components : "V,S,M\u0192",
	compMaterial : "A decorated gothic manor miniature worth at least 1,000 gp",
	duration : "7 days",
	ritual: false,
	description : "Create a gothic estate staffed by skeletons and stocked with food; B",
	descriptionFull : "A rift opens, pouring forth tons of brick and stonework that neatly and quickly assemble into a vast gothic estate. The estate consists of a manor containing a vault, a spacious 200-by-200-foot courtyard, and a 10-foot high wrought iron fence around the perimeter. Any creature within the estate’s area is escorted away by harmless but forceful specters." + "\n   " + "You can create any floor plan you like for the manor, but the space can’t exceed 50 cubes, each cube being 10 feet on each side, or five stories in total, including basements. The manor is adorned with barred windows and decorative gargoyles, but is furnished and decorated as you choose. Once the manor is first created, these details are recorded in the miniature manor used to cast the spell and can’t be changed. The manor is staffed by 50 skeletons obedient to you, and contains enough food to serve 50 people each day for a week. The skeletons can perform any task a normal human servant could perform, but they can’t attack or take any action that would directly harm another creature." + "\n   " + "The manor contains a 15-foot cube vault, which is an extradimensional space. Items placed within the vault will be present next time you cast this spell." + "\n   " + "The courtyard is drenched in necromantic magic, such that any humanoid buried in its grounds rises 24 hours later as a ghoul under your control, as per the spell animate dead. When the spell is cast, 3 ghouls are animated in the courtyard. These undead are under your control, but can’t leave the estate. They patrol the estate if given no other instructions. Undead can’t be turned within the estate." + "\n   " + "The estate crumbles into dust and bone after 7 days, and all items placed within the manor appear safely in the space the manor occupied. If cast in the same place once every 7 days for a year, the estate becomes permanent."
};
SpellsList["gahoul's scapegoat"] = {
	name : "Gahoul's Scapegoat",
	classes : ["necromancer", "witch"],
	source : ["VSoS", 341],
	level : 4,
	school : "Abjur",
	time : "1 min",
	range : "Self",
	components : "V,S,M",
	compMaterial : "Black chalk, paint, or oil",
	duration : "8 h",
	ritual: false,
	description : "Mark 1 willing crea; when hit by atk, can use rea and end spell to swap places and have atk hit crea",
	descriptionFull : "You trace a complex arcane symbol into the flesh of a willing creature within 5 feet of you, marking them for sacrifice. During the spell’s duration, when you are hit with an attack and the marked creature is within 60 feet of you, you can use your reaction to switch positions with the creature, causing it to be hit by the attack instead of you. The spell then ends."
};
SpellsList["gahoul's shrieking skull"] = {
	name : "Gahoul's Shrieking Skull",
	classes : ["necromancer"],
	source : ["VSoS", 341],
	level : 1,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A skull",
	duration : "Instantaneous",
	ritual: false,
	description : "Crea in 10-ft cube take 2d4+1d4/SL Thunder dmg; Audible for 300 ft",
	descriptionFull : "You throw a cackling skull at a point you can see within range, which emits a mortifying shriek audible out to 300 feet. Each creature within a 10-foot cube centered on the skull takes 2d4 thunder damage, without making a saving throw." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d4 for each slot level above 1st."
};
SpellsList["gahoul's spectral scythe"] = {
	name : "Gahoul's Spectral Scythe",
	classes : ["necromancer"],
	source : ["VSoS", 341],
	level : 6,
	school : "Necro",
	time : "1 a",
	range : "S:60-ft line",
	components : "V,S",
	duration : "1 rnd",
	save : "Dex",
	ritual: false,
	description : "Crea in 60\xD710 (L\xD7W) ft save or 6d8+1d8/SL Necro; if w/in 120 ft, scythe returns; save again; save \u00BD both",
	descriptionFull : "You conjure a phantasmal scythe of death in your open hand and throw it whirling through the air. The scythe travels in a 60-foot long, 10-foot wide line, coming to rest hovering in the air at the end of its line or before it strikes any solid objects. Each creature within the area while the scythe is moving must make a Dexterity saving throw or take 6d8 necrotic damage, or half as much on a successful save. A creature has disadvantage on this saving throw if the scythe comes to rest in the creature’s space." + "\n   " + "If you are within 120 feet of the scythe at the start of your next turn, it returns to you in a 10-foot wide line, forcing creatures within its area of travel to make saving throws against the scythe’s damage." + AtHigherLevels +  "When you cast this spell using a spell slot of 7th level or higher, the damage increases by 1d8 for each slot level above 6th."
};
SpellsList["game of fate"] = {
	name : "Game of Fate",
	classes : ["investigator", "bard", "wizard"],
	source : ["VSoS", 341],
	level : 6,
	school : "Ench",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A gaming set",
	duration : "1 h",
	save : "Wis",
	ritual: false,
	description : "Challenge a creature to a game for 6d6 Psychic dmg and agreed-upon stakes; B",
    descriptionShorter : "1 Crea \u0026 \u003E3 Int save or play game; Lose/Tie 6d6 (max 10d6) psy; Can up stakes; Ends tgt/I uncon./dmg; B",
	descriptionFull : "You magically compel a creature within range to a nonmagical game with vital consequences. If the creature you choose has an Intelligence of 3 or lower, or doesn’t speak any language, the creature is unaffected. An unwilling creature can make a Wisdom saving throw to resist this effect. On a failed save, the creature is compelled to join you in the game. If the target takes damage or falls unconscious, this spell ends." + "\n   " + "The loser of the game takes 6d6 psychic damage. If no player loses or has won by the end of the spell’s duration, both you and the target take this damage." + "\n   " + "Additionally, you and the target creature can negotiate for greater stakes. You can bet higher psychic damage (up to a maximum of 10d6,) property, or more esoteric rewards, such as bestowal of a noble title, on the game. The spell reveals if a creature attempts to bet property they do not own. A bet is finalized when you and the target agree on the bet, solidifying the bet with a handshake or similar gesture. Property or currency bet on the game is teleported to the winner at the game’s conclusion. The loser is also magically compelled to take any action (such as bestowing a title) promised as part of a bet." + "\n   " + "Lastly, no spell, magical effect, or creature other than you and the target can influence the game’s outcome."
};
SpellsList["geomantic discernment"] = {
	name : "Geo. Discernment",
	classes : ["investigator", "druid", "ranger", "wizard"],
	source : ["VSoS", 342],
	level : 3,
	school : "Div",
	time : "1 a",
	range : "S:100-ft rad",
	components : "V,S",
	duration : "Conc, 10 min",
	ritual: true,
	description : "See aura around precious metals, gems, etc.; not blocked by any nonmagical obstacles",
	descriptionFull : "You gain the ability to sense valuable minerals in a 100-foot radius around you. A glowing aura that only you can see appears around any valuable metals, gems, ores, native elements, or other resources in that radius for the spell’s duration. You can see this aura through any amount of nonmagical material."
};
SpellsList["glitterdust"] = {
	name : "Glitterdust",
	classes : ["witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 342],
	level : 3,
	school : "Conj",
	time : "1 a",
	range : "S:15-ft cone",
	components : "V,S,M",
	compMaterial : "A handful of powdered mica",
	duration : "Conc, 1 min",
	save : "Con",
	ritual: false,
	description : "Crea in area save or blinded; crea in area get no benefit from invisibility",
	descriptionFull : "You spray golden particles in a 15-foot cone, covering all creatures and objects in that area. Each creature in the area must succeed a Constitution saving throw or be blinded for the duration. A creature blinded by this spell can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success. Each creature within the area, whether or not it succeeds on its saving throw, can’t benefit from being invisible for the duration."
};
SpellsList["grasp of the grave"] = {
	name : "Grasp of the Grave",
	classes : ["necromancer"],
	source : ["VSoS", 342],
	level : 4,
	school : "Necro",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M",
	compMaterial : "A shrunken hand",
	duration : "Conc, 1 min",
	save : "Str",
	ritual: false,
    description : "20-ft rad becomes diff. terrain; crea entering or starting turn save or 3d6+1d6/SL Necro dmg; B",
	descriptionShorter : "20 ft rad dif ter; Non-undead enter/SoT/A save or 3d6+1d6/SL Necro, move w/in rad; save \u00BD, no move",
	descriptionFull : "Spectral skeletal arms emerge from the ground in a 20-foot-radius circle, centered on a point you can see within range. The arms grasp at creatures within the area, except for undead creatures, which ignore the effects of this spell. The area is difficult terrain." + "\n   " + "When a creature enters the area for the first time on a turn or starts its turn there, it must make a Strength saving throw. On a failed save, a creature takes 3d6 necrotic damage, and is dragged by the hands to any unoccupied space within the area that you choose. On a successful save, a creature takes half as much damage and is not moved." + "\n   " + "Until the spell ends, you can use your action to force each creature within the area to immediately make a save against this spell." + AtHigherLevels + "When you cast this spell using a spell slot of 5th level or higher, its damage increases by 1d6 for each slot level above 4th."
};
SpellsList["guided missile"] = {
	name : "Guided Missile",
	classes : ["bard", "druid", "paladin"],
	source : ["VSoS", 342],
	level : 1,
	school : "Trans",
	time : "1 bns",
	range : "Self",
	components : "V",
	duration : "Conc, 1 min",
	ritual: false,
	description : "Next ranged weapon atk has advantage and double normal/long range",
	descriptionFull : "You utter a prayer to guide your projectile, causing it to arc toward its target. The next ranged weapon attack you make before the spell ends has advantage, and has double its normal and long ranges."
};
SpellsList["halo of flame"] = {
	name : "Halo of Flame",
	classes : ["martyr", "cleric", "paladin"],
	source : ["VSoS", 342],
	level : 2,
	school : "Evoc",
	time : "1 a",
	range : "S:10-ft rad",
	components : "V,S",
	duration : "Instantaneous",
	save : "Dex",
	ritual: false,
	description : "Create a 10-ft rad, 5-ft wide ring; crea in area save or 4d6+1d6/SL Fire dmg; save halves",
	descriptionFull : "A ring of flame ignites above your head and then springs outward, coming to rest in a burning circle. The circle is composed of a 5-foot wide line of flame, curving to form a 10-foot-radius ring around you. Each creature you choose within the area must make a Dexterity saving throw. On a failed save, a creature takes 4d6 fire damage, or half as much on a successful save." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d6 for each slot level above 2nd."
};
SpellsList["hangover"] = {
	name : "Hangover",
	classes : ["bard"],
	source : ["VSoS", 343],
	level : 2,
	school : "Ench",
	time : "1 a",
	range : "30 ft",
	components : "V,S,M",
	compMaterial : "A tiny vial of strong liquor",
	duration : "Instantaneous",
	save : "Con",
	ritual: false,
	description : "1 crea save or 3d8+1d8/SL Psy dmg, Poisoned til start of my next turn; disadv. on Conc save from dmg",
	descriptionFull : "You emit a drunken aura that quickly washes away, leaving the feeling of an intense hangover. A creature you choose within range must succeed on a Constitution saving throw or take 3d8 psychic damage. The target has disadvantage on Constitution saving throws it makes to maintain concentration on a spell due to this damage. Additionally, on a failed save, the target is poisoned until the start of your next turn." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d8 for each slot level above 2nd."
};
SpellsList["heart of darkness"] = {
	name : "Heart of Darkness",
	classes : ["necromancer"],
	source : ["VSoS", 343],
	level : 9,
	school : "Necro",
	time : "1 h",
	range : "S:1-mile rad",
	components : "V,S,M\u0192",
	compMaterial : "A humanoid heart prepared with onyx and diamond dust worth at least 10,000 gp",
	duration : "Until dispelled",
	ritual: false,
	descriptionShorter : "Raise and command up to 100 undead while holding the heart; see book",
    description : "Raise up to 100 S/M Skel/Zomb \u0026 doesn't count vs me; Crea w/heart cmds 1/Day; AC 10/HP 20; See B",
	descriptionFull : "When you cast this spell, you stab a black, ritualistically prepared humanoid heart. The ichor from the heart infects the land with foul necromantic energies, causing up to one hundred piles of bones or corpses of Medium or Small humanoids within a 1-mile radius to rise from the dead, becoming skeletons or zombies (the GM has the creatures’ game statistics). The undead dig their way out of graves, smash their way out of mausoleums, and tear down cemetery gates." + "\n   " + "The creature that is holding the heart can use its action to issue a general command to all undead created by the spell, such as to destroy a town or hunt down a particular creature. Only one general command can be issued to the undead every 24 hours. If not issued a command, the undead indiscriminately attack living creatures, other than the creature that is holding the heart and creatures designated by it. Once given an order, the undead continue to follow it to the best of their ability until the task is complete." + "\n   " + "Even while you hold the heart, the undead aren’t directly under your control, and therefore don’t count against any limitations of undead you can command." + "\n   " + "The undead remain animated until the spell ends. The spell ends if the heart is destroyed (AC 20, HP 10, immunity to necrotic, poison, and psychic damage) or targeted by a dispel magic spell cast as a 9th-level spell. When the spell ends, all undead animated by it are instantly destroyed, crumpling into a heap. The spell also ends if every undead created by it is destroyed."
};
SpellsList["hocuspocus"] = {
	name : "Hocuspocus",
	classes : ["necromancer", "witch", "warlock"],
	source : ["VSoS", 343],
	level : 0,
	school : "Conj",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "1 min",
	ritual: false,
	description : "Minor phenomena; candles flicker; quiet sounds; glowing orbs; chill/warm air; small obj hover \u0026 rattle; B",
	descriptionFull : "You conjure minor paranormal phenomena and other ominous effects. You create one of the following magical effects within range for 1 minute:" + "\n \u2022" + "You cause all candles, torches, and other open flames to darken and flicker." + "\n \u2022" + "You create a quiet sound that originates from a point of your choice within range, such as ominous whispers, the drone of insects, or the sound of crying." + "\n \u2022" + "You create up to four torch-sized spectral, glowing orbs, which float around within range. The orbs do not provide light, apart from a dim glow."  + "\n \u2022" + "You can chill or warm the air in a 10-foot cube by 10 degrees." + "\n \u2022" + "You cause small, unattended objects to rattle or levitate an inch off the ground." + "\n   " + "If you cast this spell multiple times, you can have up to three of its effects active at a time, and you can dismiss such an effect as an action."
};
SpellsList["hollowing curse"] = {
	name : "Hollowing Curse",
	classes : ["necromancer", "witch", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 344],
	level : 1,
	school : "Necro",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
    description : "crea save or 2d6+1d6/SL Necro \u0026 cursed; 1 a for 1d6+1d6/SL Necro or ends; save \u00BD \u0026 no curse; see B",
	descriptionFull : "Tendrils of black mist extend from your fingertips, latching onto a creature and draining its vitality. Choose a creature you can see within range to make a Dexterity saving throw. On a failed save, the target takes 2d6 necrotic damage and is cursed for up to one minute. On a successful save, the target takes half as much damage and is not cursed. While the target is cursed, you can use your action to deal 1d6 necrotic damage to it automatically. The curse ends early if you use your action to do anything else, if the target is ever outside the spell’s range, or if the target has total cover from you. A remove curse spell also ends this curse." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the initial and secondary damage each increases by 1d6 for each slot level above 1st."
};
SpellsList["hunger of the earth"] = {
	name : "Hunger of the Earth",
	classes : ["druid", "wizard"],
	source : ["VSoS", 344],
	level : 4,
	school : "Trans",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Conc, 1 h",
	save : "Str",
	ritual: false,
    description : "\u2264Large crea save or sinking; Str chk/crea in 5 ft to esc \u0026 ends; \u2264S/M/L sinks fully in 2+1/Size rnds \u0026 Suffo",
	descriptionFull : "Choose a Large or smaller creature on the ground within range. The earth opens up beneath that creature and attempts to swallow them up. The target must make a Strength saving throw or be restrained for the duration. Furthermore, if the target fails the save, it begins sinking into the ground." + "\n   " + "A restrained target, or another creature within 5 feet of it, can attempt to free the target by using an action to make a Strength check against your spell save DC, freeing the target. The target has disadvantage on this Strength check. The spell ends early if the target is freed." + "\n   " + "At the end of the target’s turn, it sinks deeper into the ground. A Small or smaller creature fully sinks into the ground after 2 rounds of sinking, a Medium creature fully sinks after 3 rounds, and a Large creature fully sinks after 4 rounds. If a target fully sinks underground, it begins to suffocate."
};
SpellsList["ice claw prison"] = {
	name : "Ice Claw Prison",
	classes : ["sorcerer", "warlock", "wizard"],
	source : ["VSoS", 344],
	level : 3,
	school : "Evoc",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A crystal claw",
	duration : "Conc, 1 min",
	save : "Str",
	ritual: false,
    descriptionShorter : "10 ft Large ice hand in vis. rng; AC 18/HP \u00BD my max; Immune psn/psy; 1 bns Slash/Imprison/Release; B",
	description : "Create a Large ice hand that can Slash, Imprison, or Release on command; see book",
	descriptionFull : "You choose an unoccupied 10-foot square that you can see within range. A Large clawed hand made from razor-sharp ice appears there and lasts for the spell’s duration. It acts at your command, though it can’t move from its initial location." + "\n   " + "The hand is an object that has AC 18 and hit points equal to half your hit point maximum. It has immunity to poison and psychic damage. If it drops to 0 hit points, the spell ends. The claw doesn’t fill its space. When you cast the spell, and as a bonus action on your subsequent turns, you can command the claw to perform one of the following tasks:" + "\n   " + toUni("Slash") + ": The claw lashes out at a target within 10 feet of itself. Make a melee spell attack using your own spell attack bonus. On a hit, the target takes 3d8 slashing or cold damage (your choice)." + "\n   " + toUni("Imprison") + ": The claw grabs a Large or smaller creature within 10 feet of itself. The target must succeed on a Strength saving throw against your spell save DC or be dragged into the claw’s space and restrained for the duration. At the end of each of its turns, the restrained target can make a Strength check against your spell save DC. On a success, the target escapes and is no longer restrained by the hand, but on a failure it takes 1d8 cold damage. While a creature is restrained by the hand, the hand can’t imprison or slash another creature. The claw can slash a creature it has restrained." + "\n   " + toUni("Release") + ": The claw releases an imprisoned target, which is no longer restrained." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher, the damage of the Slash and Imprison options increases by 1d8 for each spell slot above 3rd."
};
SpellsList["icicle javelin"] = {
	name : "Icicle Javelin",
	classes : ["druid", "sorcerer", "wizard"],
	source : ["VSoS", 344],
	level : 1,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A small icicle",
	duration : "Instantaneous",
	save : "Str",
	ritual: false,
	description : "Ranged spell atk for 3d8+1d8/SL Cold dmg and pin to adjacent surface; B",
    descriptionShorter : "Rngd spell atk 3d8+1d8/SL Cold \u0026 pin against adj surface; SoT Str save to esc or spd 0; Lasts 1 turn",
	descriptionFull : "You fling a massive icicle toward a target of your choice within range. Make a ranged spell attack against the target. On a hit, the target takes 3d8 cold damage. If the target is also adjacent to a wall, or a similar large, immobile object, it may also be pinned to that surface on its next turn. At the beginning of its turn, the target can make a Strength saving throw. On a failed save, it has a speed of 0 until the start of its next turn." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st."
};
SpellsList["identity curse"] = {
	name : "Identity Curse",
	classes : ["witch"],
	source : ["VSoS", 345],
	level : 9,
	school : "Ench",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "Until dispelled",
	save : "Wis",
	ritual: false,
	description : "1 crea save or forget its identity and personal memories (not statistics)",
    descriptionShorter : "crea save or asleep for 1hr \u0026 forgets identity \u0026 class feat; keep stats/skills/general knowledge; see B",
	descriptionFull : "You extend a finger to a creature’s temple, who then forgets its own name. Choose one creature you can touch to make a Wisdom saving throw. On a failed save, the target falls unconscious for 1 hour and is cursed to forget its identity. When the target awakens, it loses all its personal memories, though the target retains all of its general knowledge, proficiencies, and other statistics. The target won’t realize it has any class features or special abilities, and so doesn’t willingly make use of them. If left to its own devices, the target will quickly adopt a new name and begin to build a new identity." + "\n   " + "A remove curse spell cast using a 9th-level spell slot ends this curse. When this curse ends, the target regains all its past memories."
};
SpellsList["impressions of the past"] = {
	name : "Impressions of the Past",
	classes : ["cleric", "wizard"],
	source : ["VSoS", 345],
	level : 7,
	school : "Div",
	time : "1 a",
	range : "Self",
	components : "V,S,M\u0192",
	compMaterial : "An hourglass and a glass eye worth at least 100 gp",
	duration : "Conc, 1 min",
	save : "Wis",
	ritual: false,
	description : "Observe (all senses) a time up to 100 years ago; share effect with 8th or higher level spell slot",
    descriptionShorter : "Observe w/ senses time in 100 years ago; can't move/speak/sense; \u22648th SL to share effect",
	descriptionFull : "You cast your senses back in time to perceive your current location as it was at some point in the past, including any events that were happening at that time. You must specify the exact time you wish to see, which can’t be more than 100 years ago. When viewing the past, it appears dreamlike and shadowy, but you are able to discern detail and hear conversation as normal, and any special senses you possess (such as darkvision) also work as normal." + "\n   " + "While perceiving the past, you can look in any direction, but you can’t move or speak, and are unable to sense your present surroundings." + AtHigherLevels + "When you cast this spell using a spell slot of 8th level or higher, you may share this spell with one other creature that you touch. An unwilling target can make a Wisdom saving throw to avoid being affected."
};
SpellsList["indemnify"] = {
	name : "Indemnify",
	classes : ["martyr", "necromancer"],
	source : ["VSoS", 345],
	level : 1,
	school : "Necro",
	time : "1 bns",
	range : "30 ft",
	components : "V,S,M",
	compMaterial : "A drop of blood",
	duration : "Conc, 1 h",
	save : "Con",
	ritual: false,
	description : "1 crea save or 1d8 Rad/Necro dmg whenever I lose HP while in range",
	descriptionFull : "You fling a drop of blood at a target you can see within range, marking them for reckoning. The target must make a Constitution saving throw. On a failed save, the target takes 1d8 radiant or necrotic damage (your choice) whenever you lose hit points for the duration. This spell ends early if the target begins its turn further than 60 feet from you."
};
SpellsList["inevitable boulder"] = {
	name : "Inevitable Boulder",
	classes : ["druid", "wizard"],
	source : ["VSoS", 345],
	level : 7,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "An almost spherical stone",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "Create a boulder that moves 60 ft toward target every turn; see book",
	descriptionFull : "At a point you choose within range, you conjure into existence a Large 8-foot diameter boulder, which rolls in pursuit of one creature that you can see of your choice. The boulder has 18 AC, 75 HP, immunity to poison and psychic damage, and resistance to bludgeoning, piercing, and slashing damage from nonmagical attacks. If the boulder is reduced to 0 hit points, it vanishes and the spell ends." + "\n   " + "At the beginning of each of your turns, the boulder moves 60 feet in the direction of its target. If the boulder enters a creature’s space, the creature must make a Dexterity saving throw. On a failed save, it takes 6d10 bludgeoning damage and, if it is Large size or smaller, is knocked prone. On a success, the creature takes half as much damage and is not knocked prone. The boulder also crushes nonmagical objects smaller than itself in its path. If the boulder reaches its target, it rolls over it and continues on, completing its 60-foot movement. The boulder continues to pursue its target for the duration, rolling over it more than once if possible." + "\n   " + "After the spell ends, the boulder continues to pursue its target for up to 24 hours. Once the boulder strikes its target after the spell ends, it immediately vanishes."
};
SpellsList["inexorable sarcophagus"] = {
	name : "Inexorable Sarcophagus",
	classes : ["necromancer"],
	source : ["VSoS", 346],
	level : 6,
	school : "Necro",
	time : "1 a",
	range : "30 ft",
	components : "V,S,M\u0192",
	compMaterial : "A finely made miniature sarcophagus worth at least 1,000 gp",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "1 crea save or trapped inside a sarcophagus; see book",
	descriptionFull : "You toss a palm-sized sarcophagus at an unoccupied point you can see within range, where it grows to full size in an instant and attempts to ensnare a Medium or smaller creature within 5 feet of it with grimy gauze. The creature must succeed a Dexterity saving throw or be restrained and pulled into the open sarcophagus." + "\n   " + "The gauze restraining the creature is an object with AC 10 and 100 HP. It is vulnerable to slashing and fire damage, and immune to psychic and poison damage. If it is reduced to 0 hit points, the spell ends." + "\n   " + "A creature restrained by this spell must make another Dexterity saving throw at the end of each of its turns. If it successfully saves against this spell three times, it twists free of the gauze, ending the spell. If it fails three times, the sarcophagus slams shut and sinks deep into the earth. The creature is wrapped head to toe by the gauze and becomes incapacitated. The spell ends, but the sarcophagus remains buried in the earth. The sarcophagus has 1 minute of air, and the creature begins to suffocate after this time." + "\n   " + "If a humanoid dies within the sarcophagus, they rise 24 hours later as a mummy under your control, as per the spell create undead. You can only command one mummy animated by this spell at a time." + "\n   " + "Any time after this spell ends, you can cause the sarcophagus to ascend to the surface as an action. You can also use your action to shrink the sarcophagus down to its original size while it is unoccupied."
};
SpellsList["instant replay"] = {
	name : "Instant Replay",
	classes : ["martyr", "bard", "paladin", "ranger"],
	source : ["VSoS", 346],
	level : 1,
	school : "Trans",
	time : "1 bns",
	range : "Self",
	components : "V,S",
	duration : "1 min",
	ritual: false,
	description : "Next time I miss an attack, I can reroll it",
	descriptionFull : "The next time you miss a creature with an attack before this spell ends, you can instantly reset yourself to the moment before the attack and repeat it against the same target."
};
SpellsList["intensify gravity"] = {
	name : "Intensify Gravity",
	classes : ["cleric", "druid", "sorcerer", "wizard"],
	source : ["VSoS", 346],
	level : 4,
	school : "Trans",
	time : "1 a",
	range : "100 ft",
	components : "V,S,M",
	compMaterial : "A lodestone and iron fillings",
	duration : "Conc, 1 min",
	ritual: false,
	description : "In area use double movement (incl. climb, fly, etc.); stacks with diff. terrain; see B",
    descriptionShorter : "Crea in area \u00BD spd (climb, fly, etc), 2\xD7 weight, \u0026 fall dmg; stack w/ diff. terr.; prone crea Str chk to stand",
	descriptionFull : "This spell intensifies gravity in a 50-foot-radius, 100-foot-high cylinder centered on a point within range. Each creature in this area must spend two feet of movement for every foot moved, including flying, jumping, and climbing movement. This can be combined with difficult terrain to slow movement to a quarter of normal speed. If a prone creature wishes to stand up, it must succeed on a Strength check against your spell save DC. On a failure, it can’t move at all on its turn." + "\n   " + "Objects in the area, including those being worn or carried, weigh double their usual weight, which may cause creatures to become encumbered or cause load-bearing spells like levitate to fail. Any ranged weapon attacks that pass into, out of, or through the area have disadvantage, and any falling damage dealt within the spell’s area is doubled."
};
SpellsList["intrusive thought"] = {
	name : "Intrusive Thought",
	classes : ["witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 346],
	level : 2,
	school : "Ench",
	time : "1 rea",
	timeFull : "1 reaction, which you take when you see a creature within 60 feet of you taking an action",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Wis",
	ritual: false,
	description : "1 crea taking action, save or take different action of my choice instead; B",
	descriptionFull : "As a reaction when a creature you can see within range uses its action to attack or takes the Dash, Dodge, or Disengage action, you can attempt to distort its thinking. The target makes a Wisdom saving throw. A target automatically succeeds on this saving throw if it can’t be charmed. On a failed save, the creature takes an action of your choice from among those options, instead of the action it intended to take."
};
SpellsList["invisibility purge"] = {
	name : "Invisibility Purge",
	classes : ["investigator", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 346],
	level : 4,
	school : "Abjur",
	time : "1 a",
	range : "S:120-ft rad",
	components : "V,S,M\u0192",
	compMaterial : "powdered silver worth at least 100 gp",
	duration : "Instantaneous",
	ritual: false,
	description : "Invis. effects in range dispelled if possible, or suppressed for 1 min. if not, except innate invis.",
	descriptionFull : "You purge magical invisibility effects within 120 feet of you. Any creature, object, location, or effect within 120 feet of you that is hidden by magical invisibility is revealed and the invisibility is dispelled." + "\n   " + "This spell applies to innate abilities that are magical in nature, such as an imp’s Invisibility, but it doesn’t affect creatures on other planes of existence, such as the Ethereal Plane. It also doesn’t reveal creatures that are naturally invisible. Items that grant magical invisibility (such as a ring of invisibility) have their effects suppressed for 1 minute."
};
SpellsList["jam weapon"] = {
	name : "Jam Weapon",
	classes : ["witch", "bard", "wizard"],
	source : ["VSoS", 347],
	level : 2,
	school : "Trans",
	time : "1 rea",
	timeFull : "1 reaction, which you take when a creature you can see within range attacks with a firearm",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A pinch of wet gunpowder",
	duration : "Instantaneous",
	ritual: false,
	description : "Jam 1+1/SL firearm, preventing it from firing; 1 a to clear jam",
	descriptionFull : "The firearm you target jams upon firing. The attack fails, and the firearm is jammed. A jammed firearm can’t be used to make an attack until a creature uses its action to clear the weapon malfunction. At Higher Levels. When you cast this spell using a spell slot of 3rd level or higher, you can jam one additional firearm within range for each slot level above 2nd."
};
SpellsList["jethro's instant reload"] = {
	name : "Jethro's Instant Reload",
	classes : ["investigator", "bard", "ranger", "wizard"],
	source : ["VSoS", 347],
	level : 2,
	school : "Conj",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A spent bullet casing",
	duration : "1 h",
	ritual: true,
	description : "1 wea reloads automatically; if wea takes 1 a or longer to reload, it reloads at end of turn",
	descriptionFull : "One ranged weapon you touch becomes enchanted to reload itself automatically. If the weapon has the Loading or Reload property, you can ignore this for the duration. When the weapon’s ammunition is depleted, new ammunition teleports from your person to your hand or into the weapon, as appropriate. If the weapon takes an action or longer to reload, it reloads itself at the end of your turn. If you aren’t carrying sufficient ammunition for the weapon to reload, the spell ends."
};
SpellsList["lashing tendrils"] = {
	name : "Lashing Tendrils",
	classes : ["warlock"],
	source : ["VSoS", 347],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "The tip of an octopus tentacle",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "Crea coming w/in 5 ft of me or start turn, save or 1d6+1d6/SL Bludg. dmg, up to 6d6; save halves",
	descriptionFull : "You sprout grotesque, whipping tendrils which automatically attack nearby creatures. When a creature comes within 5 feet of you or begins its turn there, it must make a Dexterity saving throw. A creature takes 1d6 bludgeoning damage on a failed save, or half as much on a successful one." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d6 for each slot level above 1st, up to a maximum of 6d6."
};
SpellsList["legendary libation"] = {
	name : "Legendary Libation",
	classes : ["bard", "cleric", "druid"],
	source : ["VSoS", 347],
	level : 0,
	school : "Conj",
	time : "1 bns",
	range : "Self",
	components : "V,M",
	compMaterial : "A container, such as a mug, tankard, or flask, which is filled with liquid that is purified by the spell",
	duration : "Instantaneous",
	ritual: false,
	description : "A drink that slakes thirst for 24 h; also, drinker gets adv. on saves vs. fear for 1 h",
	descriptionFull : "You speak a word of power and your container fills with a drink of your choosing, which can be imbibed as an action. The drink is delicious and satisfies the drinker’s thirst for the next 24 hours. Furthermore, the drinker has advantage on saving throws against becoming frightened for one hour after consuming this libation. If the drink is not consumed within one hour of being conjured, it loses its magic and turns into mundane, flavorless water." + "\n   " + "A creature can’t benefit from more than one legendary libation in any given 24-hour period."
};
SpellsList["lightning surge"] = {
	name : "Lightning Surge",
	classes : ["necromancer", "warmage", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 347],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:5-ft rad",
	components : "V,S,M",
	compMaterial : "Two bits of copper wire",
	duration : "Instantaneous",
	save : "Dex",
	ritual: false,
	description : "Crea in 5 ft save or 1d6 Lightning dmg; +1d6 CL5/11/17",
	descriptionCantripDie : "Creatures within 5 ft save or `CD`d6 Lightning damage",
	descriptionFull : "You emit a dazzling array of short lightning bolts in all directions. All other creatures within 5 feet of you must succeed on a Dexterity saving throw or take 1d6 lightning damage." + "\n   " + "This spell’s damage increases by 1d6 when you reach 5th level (2d6), 11th level (3d6), and 17th level (4d6)."
};
SpellsList["magic daggers"] = {
	name : "Magic Daggers",
	classes : ["warmage", "bard"],
	source : ["VSoS", 347],
	level : 0,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Ranged spell atk w/ dagger 1d6 force dmg; CL5:2, CL11:3, CL17:4 daggers",
	descriptionCantripDie : "`CD` ranged spell atks for 1d6 force damage each",
	descriptionFull : "With a flourish, you conjure a throwing dagger of magical force out of thin air and flick it from your wrist at a target you can see. Make a ranged spell attack roll against a creature within range. On a hit, the target takes 1d6 magical piercing damage. The dagger vanishes after the attack." + "\n   " + "At higher levels, you conjure more daggers out of force and make additional attacks: two daggers at 5th level, three daggers at 11th level, and four daggers at 17th level. You can use the daggers to attack the same target or at different ones. Make a separate attack roll for each dagger."
};
SpellsList["mandy's enchanted carriage"] = {
	name : "Mandy's Enchanted Carriage",
	classes : ["witch", "druid"],
	source : ["VSoS", 348],
	level : 4,
	school : "Trans",
	time : "1 min",
	range : "30 ft",
	components : "V,S,M",
	compMaterial : "A vegetable",
	duration : "Special",
	ritual: false,
	description : "Create carriage for six people, lasts until midnight or 24 h; see book",
	descriptionFull : "You transform a vegetable into a Large magical carriage, complete with reins and two quasi-real horses. The carriage is luxurious and carries up to six passengers—four within and two atop it at the coach’s seat. Creatures within the carriage have full cover from external effects, but can see outside through a pair of windows composed of magical force. While sitting in the coach’s seat, a creature can control the carriage, which has a speed of 100 feet and can travel 10 miles in an hour, or 13 miles at a fast pace." + "\n   " + "This spell’s duration varies depending upon when and where it was cast. If cast in a location where time passes normally, the spell lasts until the twelfth stroke of the next midnight, however long that may be. Elsewhere, the spell lasts for 24 hours. When the spell ends, the carriage’s occupants are ejected into adjacent unoccupied spaces, the carriage shrinks back into a vegetable, and the quasi-real horses fade." + "\n   " + "The carriage and horses count as a single object with 12 AC and 100 HP. The spell ends early if the carriage and horses are reduced to 0 hit points."
};
SpellsList["mandy's feral follower"] = {
	name : "Mandy's Feral Follower",
	classes : ["witch", "druid"],
	source : ["VSoS", 348],
	level : 4,
	school : "Trans",
	time : "1 min",
	range : "30 ft",
	components : "V,S,M",
	compMaterial : "A small servant's bell",
	duration : "Special",
	ritual: false,
	description : "Transform 1+1/SL Small/Tiny Beasts w/ \u22643 Int into commoners under my command; see B",
	descriptionFull : "After spending the casting time singing a song, you touch a Small or smaller beast. The target must have an Intelligence of 3 or less. The beast then transforms into a humanoid with the statistics of a commoner and an appearance of your choosing. The commoner is friendly to you and your allies, has a basic understanding of all simple unskilled tasks, and can understand the languages you speak, but doesn’t speak. The commoner is clothed in common clothes, but has no other equipment." + "\n   " + "In combat, the commoner rolls their own initiative and acts on their own turn. They behave as though they are dutifully employed by you." + "\n   " + "This spell’s duration varies depending upon when and where it was cast. If cast in a location where time passes normally, the spell lasts until the twelfth stroke of the next midnight, however long that may be. Elsewhere, the spell lasts for 24 hours." + "\n   " + "The transformation lasts for the duration, or until the target drops to 0 hit points or dies. When it reverts to its true form, the creature returns to the number of hit points it had before it transformed. If it reverts as a result of dropping to 0 hit points, any excess damage carries over to its true form. As long as the excess damage doesn’t reduce the creature’s normal form to 0 hit points, it isn’t knocked unconscious." + AtHigherLevels + "When you cast this spell using a spell slot of 5th level or higher, you can transform one additional animal for each spell slot above 4th."
};
SpellsList["mandy's marvelous dress"] = {
	name : "Mandy's Marvelous Dress",
	classes : ["witch", "bard"],
	source : ["VSoS", 349],
	level : 4,
	school : "Conj",
	time : "1 a",
	range : "Touch",
	components : "V,S,M\u0192",
	compMaterial : "A glass slipper worth at least 100 gp",
	duration : "Conc, special",
	save : "Wis",
	ritual: false,
	description : "1 crea can replace Cha chk w/ a 10; atks save or miss; lasts to midnight or 24 hr",
	descriptionFull : "A willing creature you touch is instantly clothed in a fabulous ball gown, perfectly tailored and complete with a set of glittering jewelry. You can choose for the dress to sit atop the creature’s clothing or armor, or for it to magically replace its outfit. The creature can’t remove the dress until the spell ends; similarly, the jewelry vanishes if it is removed from the dress. Until the spell ends, when the wearer makes a Charisma check, it can replace the number it rolls with a 10." + "\n   " + "Additionally, if the wearer of the dress is attacked by a creature that can see it, the attacker must succeed on a Wisdom saving throw or miss the attack. On a success, the attacker is immune to this effect until this spell ends." + "\n   " + "This spell’s duration varies depending upon when and where it was cast. If cast in a location where time passes normally, the spell lasts until the twelfth stroke of the next midnight, however long that may be. Elsewhere, the spell lasts for 24 hours. When the spell ends, the dress vanishes in a puff of sparkles, and the creature becomes clothed in its original outfit."
};
SpellsList["mass skirmish"] = {
	name : "Mass Skirmish",
	classes : ["cleric", "wizard"],
	source : ["VSoS", 349],
	level : 7,
	school : "Trans",
	time : "1 a",
	range : "S:30-ft rad",
	components : "V,S,M",
	compMaterial : "A branch from a tree",
	duration : "Conc, 10 min",
	ritual: false,
	description : "Any number of crea get +15 ft spd, ignore diff. terrain, don't provoke opportunity atks",
	descriptionFull : "This spell allows you to enhance the mobility of any number of willing creatures that you can see within range. You bolster each target, enabling them to move easily through enemy formations. For the duration, each target’s speed is increased by 15 feet, is unaffected by nonmagical difficult terrain, and doesn’t provoke opportunity attacks."
};
SpellsList["memorize"] = {
	name : "Memorize",
	classes : ["investigator", "necromancer", "bard", "cleric", "wizard"],
	source : ["VSoS", 349],
	level : 1,
	school : "Ench",
	time : "1 a",
	range : "Touch",
	components : "V,S,M\u2020",
	compMaterial : "A page of written text and a length of silver string worth 10 gp, tied in a knot, which the spell consumes",
	duration : "Instantaneous",
	ritual: true,
	description : "Perfectly memorize a page for 1 year; adv. on Int checks to remember it",
	descriptionFull : "While casting this spell, your eyes pass over the words on the page, which are committed to your memory. For the next year, you exactly remember the details of all information on this page. After that time, you have advantage on all Intelligence checks you make to recall this information."
};
SpellsList["might of the abyss"] = {
	name : "Might of the Abyss",
	classes : ["necromancer", "cleric"],
	source : ["VSoS", 349],
	level : 1,
	school : "Evoc",
	time : "1 a",
	range : "15 ft",
	components : "V,S,M",
	compMaterial : "A small, black strip of ribbon",
	duration : "Conc, 1 min",
	ritual: false,
	description : "3+1/SL crea (not me) wea atks get +1d4 dmg while in range; range 20 when upcast",
	descriptionFull : "You channel stygian power from an extraplanar source, enhancing three creatures other than yourself within range. Whenever a target makes a weapon attack, it adds 1d4 damage to their damage roll. If a target moves more than 15 feet away from you, it loses the effect until it is within range again." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the range increases by 5 feet, and you can target one additional creature for each slot level above 1st."
};
SpellsList["minor lifesteal"] = {
	name : "Minor Lifesteal",
	classes : ["necromancer", "sorcerer", "wizard"],
	source : ["VSoS", 349],
	level : 0,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "S",
	duration : "Instantaneous",
	save : "Con",
	description : "1 crea save or 1d4 Necro. dmg and I gain as Temp HP; +1d4 CL5/11/17",
	descriptionCantripDie : "1 crea save or `CD`d4 Necro. dmg, and I gain as Temp HP; No effect vs. Undead/Constructs",
	descriptionFull : "You drain life energy from a hostile creature you can see within range. The target must succeed on a Constitution saving throw or take 1d4 necrotic damage. You then gain temporary hit points equal to the amount of damage dealt, which last until you finish a long rest. This spell has no effect on undead or constructs." + "\n   " + "This spell’s damage increases by 1d4 when you reach 5th level (2d4), 11th level (3d4), and 17th level (4d4)."
};
SpellsList["moment to think"] = {
	name : "Moment to Think",
	classes : ["warmage", "cleric", "sorcerer", "wizard"],
	source : ["VSoS", 350],
	level : 0,
	school : "Trans",
	time : "1 bns",
	range : "Self",
	components : "V",
	duration : "Instantaneous",
	ritual: false,
	description : "Move in space and Search, Use Object, or Int chk to recall info while time stops",
	descriptionFull : "When you cast this spell, you briefly stop time for everyone but yourself. You can take one additional action and move around in your space while no time passes for other creatures. That action can be used only to take the Search or Use an Object action, or to make an Intelligence check to remember information about something." + "\n   " + "Furthermore, you can’t affect or damage any creature or object, other than objects you are wearing or carrying. If an object leaves your hand, it also becomes frozen in time."
};
SpellsList["nondescript"] = {
	name : "Nondescript",
	classes : ["investigator", "necromancer", "witch", "bard", "sorcerer", "wizard"],
	source : ["VSoS", 350],
	level : 2,
	school : "Illus",
	time : "1 a",
	range : "Self",
	components : "V,S",
	duration : "Conc, 10 min",
	ritual: false,
	description : "Creatures who see me while I'm under this spell can't remember what I look like",
	descriptionFull : "This spell makes you seem ordinary and nondescript to others, though it doesn’t change your actual appearance. Creatures who see you while you are under the influence of this spell are unable to recall specific details of your appearance upon being asked if they had seen you or someone matching your description, though their memory of actions you undertook or events they experienced is unaffected."
};
SpellsList["paradox"] = {
	name : "Paradox",
	classes : ["sorcerer", "warlock", "wizard"],
	source : ["VSoS", 350],
	level : 9,
	school : "Trans",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Undo 1 a from the last rnd and its direct effects; 10d8 Psy dmg to the crea that took it",
	descriptionFull : "By twisting the flow of time into knots, you cause one action of your choice taken within range within the last round to be undone. Reality then reasserts itself, recoiling from the damage caused by removing an event from time. The direct effects of that action, such as damage dealt by an attack or spell, are undone, but the indirect effects, such as creatures choosing to move to different locations, are not. The creature that took the action takes 10d8 psychic damage, as it copes with its history being modified."
};
SpellsList["perforating smite"] = {
	name : "Perforating Smite",
	classes : ["paladin"],
	source : ["VSoS", 350],
	level : 2,
	school : "Evoc",
	time : "1 bns",
	range : "Self",
	components : "V",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "Next firearm atk is 5-ft wide line at normal range; crea in area save vs. normal dmg, save halves",
	descriptionFull : "The next time you make an attack with a firearm before this spell ends, the shot is charged with an incredible amount of power. Instead of making an attack roll against a single target, the shot becomes a 5-foot wide line that extends from you out to the weapon’s normal range. Each creature in that line must make a Dexterity saving throw. A creature takes the weapon’s normal damage on a failed save, or half as much damage on a successful one."
};
SpellsList["petal storm"] = {
	name : "Petal Storm",
	classes : ["witch", "druid"],
	source : ["VSoS", 350],
	level : 2,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A handful of flower petals",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "Crea enter/start turn in area save or 3d4+2d4/SL Slash dmg; bns move 30 ft; see B",
	descriptionFull : "Choose an unoccupied 15-foot cube of air that you can see within range. An elemental force of swirling winds appears in the cube and lasts for the spell’s duration. The cloud heavily obscures its area." + "\n   " + "Any creature that enters the storm for the first time on a turn or starts its turn there must make a Strength saving throw. On a failed save, the creature takes 3d4 slashing damage. As a bonus action, you can move the storm up to 30 feet in any direction. The first time storm’s area contains leaf litter, flowers, bushes, or trees, it sucks up extra material and the damage the spell deals increases by 2d4." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 2d4 for each slot level above 2nd."
};
SpellsList["phantasmal beauty"] = {
	name : "Phantasmal Beauty",
	classes : ["witch", "bard", "wizard"],
	source : ["VSoS", 350],
	level : 3,
	school : "Illus",
	time : "1 a",
	range : "120 ft",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Wis",
	ritual: false,
	description : "1 crea save or incapacitated, can't move, and disadv. on all Perception chks",
	descriptionFull : "You tap into the dreams of a creature you can see within range and create an illusory manifestation of its deepest desires, visible only to that creature. The target must make a Wisdom saving throw. On a failed save, the target becomes incapacitated and unable to move for the duration. In addition, it has disadvantage on all Wisdom (Perception) checks it makes. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target."
};
SpellsList["phantom grapnel"] = {
	name : "Phantom Grapnel",
	classes : ["warmage"],
	source : ["VSoS", 351],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "30 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Str",
	ritual: false,
	description : "Move to Huge or larger crea or empty space, or pull Large or smaller crea 10 ft. to me on failed save",
	descriptionFull : "You conjure a chain and hook made of magical force, which you propel at a creature or unoccupied space you can see within range. When you target a space or a creature of Huge size or larger, your grapnel pulls you to that target in a straight line. You provoke opportunity attacks for this movement as normal. When you target a creature of Large size or smaller, you pull the target up to 10 feet towards you. A creature can make a Strength saving throw to resist this movement."
};
SpellsList["pharaoh's curse"] = {
	name : "Pharaoh's Curse",
	classes : ["necromancer", "witch"],
	source : ["VSoS", 351],
	level : 5,
	school : "Necro",
	time : "1 a",
	range : "10 ft",
	components : "V,S",
	duration : "Until dispelled",
	save : "Con",
	ritual: false,
	description : "1 crea save or can't regain HP, and max HP reduces by 3d6 every 24 h",
	descriptionFull : "Opening your palm, you release a puff of dust, the pestilence of mummy rot. Choose one creature within range to make a Constitution saving throw. On a failed save, the target is cursed with mummy rot. The cursed target can’t regain hit points, and its hit point maximum decreases by 3d6 for every 24 hours that elapse. If the curse reduces the target’s hit point maximum to 0, the target dies, and its body turns to dust." + "\n   " + "The curse lasts until removed by a spell or magical effect that cures mummy rot. A remove curse spell cast using a spell slot of 5th level or higher also ends this spell."
};
SpellsList["pillar of salt"] = {
	name : "Pillar of Salt",
	classes : ["martyr"],
	source : ["VSoS", 351],
	level : 3,
	school : "Trans",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M",
	compMaterial : "A drop of lantern oil and a pinch of sulfur",
	duration : "Instantaneous",
	save : "Con",
	ritual: false,
	description : "Point in range 10ft sphere ea crea save or 7d6+1d6/SL Necro; save halves; HP 0: turn to salt",
	descriptionFull : "You deliver a mote of divine wrath to a point you can see within range. Each creature you choose in a 10-foot-radius sphere centered on that point must make a Constitution saving throw. On a failed save, a creature takes 7d6 necrotic damage, or half as much on a successful save. If this damage reduces a target which failed its saving throw to 0 hit points, it is transformed into a pillar of salt." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d6 for each slot level above 3rd."
};
SpellsList["polybrachia"] = {
	name : "Polybrachia",
	classes : ["martyr", "paladin", "ranger", "warlock", "wizard"],
	source : ["VSoS", 351],
	level : 3,
	school : "Conj",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A pair of armbands",
	duration : "Conc, 10 min",
	ritual: false,
	description : "1 crea gets 2 new arms; adv. on Ath. chks using them; bns to atk w/ wea held by them; see B",
	descriptionFull : "Two muscular arms consisting of brilliant arcane energy appear on a willing creature that you touch. These arms are fully functional and can be used to hold weapons and shields (allowing the target to hold 2 two-handed weapons, or 4 one-handed weapons), perform somatic components of spells, and perform other actions, though the arms themselves don’t grant the target additional actions. For the duration, the target has advantage on Strength (Athletics) checks made using the additional arms. Also, if the arms are used to carry weapons, the target can use a bonus action to make an additional melee weapon attack using the arms."
};
SpellsList["prehensile hair"] = {
	name : "Prehensile Hair",
	classes : ["witch"],
	source : ["VSoS", 351],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A braided rope",
	duration : "1 h",
	ritual: true,
	description : "Grow prehensile hair; can do simple tasks within 10 ft; can deliver touch spells",
	descriptionFull : "You grow unduly long and tough hair (even from your eyebrows) which you can manipulate at will. You can use your hair to perform simple tasks within 10 feet of you, such as manipulating an object, opening an unlocked door or container, stowing or retrieving an item from an open container, or pouring the contents out of a vial. You can cast spells with a range of Touch using your hair, out to a range of 10 feet. Your hair returns to its normal length when this spell ends."
};
SpellsList["protection from ballistics"] = {
	name : "Protection from Ballistics",
	classes : ["martyr", "necromancer", "cleric", "druid", "paladin", "ranger", "warlock", "wizard"],
	source : ["VSoS", 351],
	level : 2,
	school : "Abjur",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "Conc, 1 min",
	ritual: false,
	description : "Ranged firearm atks have disadv. vs. tgt; tgt resists firearm dmg",
	descriptionFull : "A shimmering shield of energy surrounds one willing creature you touch. For the duration, ranged attacks made by firearms have disadvantage against the target, and the target has resistance to any damage dealt by firearms."
};
SpellsList["protect threshold"] = {
	name : "Protect Threshold",
	classes : ["investigator", "necromancer", "witch", "sorcerer", "wizard"],
	source : ["VSoS", 352],
	level : 2,
	school : "Abjur",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "An ounce of salt for each foot of the warded portal's perimeter",
	duration : "10 min",
	save : "Wis",
	ritual: true,
	description : "Crea passing thru door/window/portal save or 4d6+1d6/SL psychic dmg; save halves",
	descriptionFull : "Tracing arcane sigils along its boundary, you can ward a doorway, window, or other portal from entry. For the duration, an invisible eldritch creature stalks the warded portal. Any creature that attempts to pass through the portal must make a Wisdom saving throw or take 4d6 psychic damage, or half as much on a successful save." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, the damage increases by 1d6 for each slot level above 2nd."
};
SpellsList["psychedelics"] = {
	name : "Psychedelics",
	classes : ["witch", "bard", "druid", "ranger"],
	source : ["VSoS", 352],
	level : 1,
	school : "Illus",
	time : "1 a",
	range : "S:60-ft rad",
	components : "V,S,M",
	compMaterial : "A mushroom",
	duration : "1 rnd",
	save : "Dex",
	ritual: false,
	description : "Crea in range save or disadv on atks til end of its next turn; crea/obj are trippy for 1 h",
	descriptionFull : "For a moment, the colors around you shift in a rainbow swirl, before coming to rest far from their original hues. Each creature you choose within range must make a Dexterity saving throw. On a failed save, a creature has disadvantage on attack rolls until the end of its next turn. Additionally, the colors of all creatures and objects you choose within range change randomly and remain brightly and unnaturally colored for 1 hour."
};
SpellsList["quickstep"] = {
	name : "Quickstep",
	classes : ["warmage"],
	source : ["VSoS", 352],
	level : 0,
	school : "Trans",
	time : "1 bns",
	range : "Self",
	components : "V",
	duration : "1 rnd",
	ritual: false,
	description : "My walking speed increases by 10 ft until the start of my next turn",
	descriptionFull : "You call upon your inner reserves to give you a brief flash of speed. When you cast this spell, your walking speed increases by 10 feet until the start of your next turn."
};
SpellsList["recall"] = {
	name : "Recall",
	classes : ["sorcerer", "wizard"],
	source : ["VSoS", 352],
	level : 2,
	school : "Conj",
	time : "1 bns",
	range : "Self",
	components : "V,S",
	duration : "1 rnd",
	ritual: false,
	description : "Rea to teleport to where I was when I cast this spell; Resolve triggering effect first",
	descriptionFull : "Record where you are when you cast this spell. Until the end of your next turn, you can use your reaction to teleport back to that location, or to the nearest unoccupied space. If you use this reaction in response to an attack, spell, magical effect, or any other damaging effect, resolve the triggering effect before teleporting."
};
SpellsList["repulsor ring"] = {
	name : "Repulsor Ring",
	classes : ["cleric", "wizard"],
	source : ["VSoS", 352],
	level : 2,
	school : "Abjur",
	time : "1 a",
	range : "5 ft",
	components : "V,S,M",
	compMaterial : "A piece of chalk",
	duration : "Conc, 1 min",
	ritual: false,
	description : "Only crea I choose can enter; ranged atks vs. crea in area get disadv; melees push attacker 10 ft",
	descriptionFull : "You outline a 5-foot diameter circle on the ground, which is warded against intruders. Only creatures you choose can step within the circle. Any ranged attack roll made against a target within the circle has disadvantage. If a hostile creature makes a melee attack against a target within the circle, the attacker is pushed back 10 feet immediately after the attack."
};
SpellsList["ruby-eye curse"] = {
	name : "Ruby-Eye Curse",
	classes : ["necromancer", "witch"],
	source : ["VSoS", 353],
	level : 3,
	school : "Necro",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "Conc, 10 min",
	save : "Con",
	ritual: false,
	description : "1 crea save or blind beyond 5 ft",
	descriptionFull : "A red haze clouds the eyes of a creature that meets your gaze. Choose one creature you can see within range to make a Constitution saving throw. On a failed save, the creature is cursed for the duration. A cursed target can see normally out to 5 feet, but is blind beyond this radius." + "\n   " + "A remove curse spell ends this curse early."
};
SpellsList["rumbling charge"] = {
	name : "Rumbling Charge",
	classes : ["druid", "sorcerer", "wizard"],
	source : ["VSoS", 353],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A lump of granite",
	duration : "Instantaneous",
	save : "Str",
	ritual: false,
	description : "Move 30 ft; hit object/creas save or 2d12+1d12/2SL Bludg. dmg; save halves",
	descriptionFull : "You imbue yourself with the elemental power of a landslide. When you cast this spell, you immediately move 30 feet in a straight line without provoking opportunity attacks. If your path is blocked by a creature or object, you stop moving there, and that creature or object must make a Strength saving throw or take 2d12 bludgeoning damage, or half as much on a successful save." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d12 for every two slot levels above 1st."
};
SpellsList["rumor"] = {
	name : "Rumor",
	classes : ["investigator", "witch", "bard", "wizard"],
	source : ["VSoS", 353],
	level : 1,
	school : "Ench",
	time : "1 a",
	range : "S:100-ft rad",
	components : "V,S",
	duration : "1 min",
	ritual: true,
	description : "10 word or less rumor heard by all crea near three or more other crea that share a language",
	descriptionFull : "You magically spread a rumor of 10 words or less. Any creature within range that is near three or more other creatures which speak the same language as them believes that they hear the rumor being repeated by someone nearby. Different creatures hear the rumor from different people, so a concrete origin point is impossible to discern. Generally, creatures won’t be outright hostile upon hearing even the most vicious rumors, but hearing a rumor can affect their disposition positively or negatively."
};
SpellsList["rusting grasp"] = {
	name : "Rusting Grasp",
	classes : ["necromancer", "witch", "druid", "wizard"],
	source : ["VSoS", 353],
	level : 3,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Melee spell atk for 6d4+2d4/SL Acid \u0026 -3 AC to mundane metal armor/shield, destroyed if 10 AC; Stacks",
	descriptionFull : "You conjure a potent acid at your fingertips, which can corrode metal and burn flesh. Make a melee spell attack against a creature or object within your reach. On a hit, a creature takes 6d4 acid damage and, if it is wearing nonmagical metal armor or wielding a nonmagical metal shield, you can corrode either its armor or shield. Corroded armor takes a permanent and cumulative -3 penalty to the AC it offers. Armor reduced to an AC of 10 is destroyed. A corroded shield is destroyed." + "\n   " + "If you target a nonmagical metal object with this spell that isn’t being worn or carried, you corrode and destroy parts of the object you choose that can fit within a 1-foot cube." + AtHigherLevels + "When you cast this spell using a spell slot of 4th level or higher, the damage increases by 2d4 for each slot level above 3rd. Additionally, you can destroy one additional cubic foot of a nonmagical object for each slot level above 3rd."
};
SpellsList["scrutinize foe"] = {
	name : "Scrutinize Foe",
	classes : ["investigator", "necromancer", "cleric", "wizard"],
	source : ["VSoS", 353],
	level : 5,
	school : "Div",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
	description : "Pick 1 crea, GM tells me 2 of: AC, curr HP, cond imms, dmg imms, dmg resists, dmg vulns, enchs/spells",
	descriptionFull : "You discern minute details concerning one creature you can see within range. You learn two of the following pieces of information of your choice about the target: its Armor Class, current hit points, condition immunities, damage immunities, damage resistances, damage vulnerabilities, and enchantments (which reveals any spells which are currently affecting it). The GM must share with you the requested information."
};
SpellsList["seance"] = {
	name : "S\u00e9ance",
	classes : ["investigator", "necromancer", "witch"],
	source : ["VSoS", 353],
	level : 3,
	school : "Necro",
	time : "10 min",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A crystal ball, deck of tarot cards, or ouija board",
	duration : "1 min",
	ritual: false,
    description : "Need \u22653 willing crea; ask familiar/5% chance of wrong crea 3 questions; fails if it was tgt'd w/in 10 days",
	descriptionFull : "You and at least three willing creatures lock hands in a moment of meditation to conjure a spirit from the afterlife to answer your questions. Describe or name a creature that is familiar to you. If the creature’s soul is free and willing, it manifests as a ghostly specter. This spell fails if the spirit was the target of this spell within the last 10 days." + "\n   " + "Until the spell ends, you can ask up to three questions of the specter. The specter knows only what it knew in life, including the languages it knew. Answers are usually brief, cryptic, or repetitive, and the specter is under no compulsion to offer a truthful answer if you are hostile to it or it recognizes you as an enemy. There is a 5% chance that this spell contacts the wrong spirit, one which will answer questions untruthfully or ambiguously."
};
SpellsList["skirmish"] = {
	name : "Skirmish",
	classes : ["cleric", "ranger", "wizard"],
	source : ["VSoS", 354],
	level : 3,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A branch from a tree",
	duration : "Conc, 10 min",
	save : "Wis",
	ritual: false,
	description : "1 crea speed is doubled, ignores diff. terrain, and doesn't provoke opportunity atks",
	descriptionFull : "You enhance the mobility of one willing creature you touch, enabling them to move easily through enemy formations. For the duration, the target’s speed is doubled, it is unaffected by nonmagical difficult terrain, and it doesn’t provoke opportunity attacks."
};
SpellsList["snakestaff"] = {
	name : "Snakestaff",
	classes : ["martyr", "cleric", "druid", "wizard"],
	source : ["VSoS", 354],
	level : 3,
	school : "Trans",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A quarterstaff",
	duration : "Conc, 1 h",
	ritual: false,
	description : "Turn staff into a Giant Constrictor Snake under my control; staff breaks if snake dies",
	descriptionFull : "You cast a staff to the ground, which writhes and grows into a giant constrictor snake under your control, which acts on its own initiative count. The snake is friendly to you and your companions. The snake will obey any verbal commands that you issue to it (no action required by you). If you don’t issue any commands, it defends itself from hostile creatures, but otherwise takes no actions. If the snake is reduced to 0 hit points, it dies and reverts to a broken staff. The GM has the creature’s statistics."
};
SpellsList["sonic pulse"] = {
	name : "Sonic Pulse",
	classes : ["warmage"],
	source : ["VSoS", 354],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	save : "Con",
	ritual: false,
	description : "1 crea save or 1d8 Thun dmg and deafened until my next turn; 1d10 within 10 ft; +1d8/1d10 CL5/11/17",
	descriptionCantripDie : "1 crea save or `CD`d8 Thun dmg and deafened until start of my next turn; `CD`d10 within 10 ft",
	descriptionFull : "You compress a thunderous boom into an invisible ball and project it at a creature you can see within range. The target must succeed on a Constitution saving throw, or it takes 1d8 thunder damage and is deafened until the start of your next turn." + "\n   " + "If the spell’s target is within 10 feet of you, this spell’s damage becomes d10s, instead of d8s." + "\n   " + "This spell’s damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8)."
};
SpellsList["spark of life"] = {
	name : "Spark of Life",
	classes : ["necromancer"],
	source : ["VSoS", 354],
	level : 0,
	school : "Necro",
	time : "1 a",
	range : "60 ft",
	components : "V,S",
	duration : "Instantaneous",
	ritual: false,
    description : "1 \u2264Huge corpse of crea makes 1 atk in 15 ft; +spell mod to hit; `CD`d4/6/8/10/12 from Tiny to Huge Blud.",
	descriptionFull : "With a quick jolt of necromantic energy, the dead momentarily rise to obey you, if only for a few seconds. Choose the corpse of a Huge or smaller creature that has been dead for no more than an hour. When you cast this spell, the corpse stands up and can move up to 15 feet and make a single melee slam attack against a target of your choice within its reach, using your spell attack modifier. On a hit, this attack deals bludgeoning damage based on the corpse’s size: a Tiny corpse deals 1d4, a Small corpse deals 1d6, a Medium corpse deals 1d8, a Large corpse deals 1d10, and a Huge corpse deals 1d12. Once the corpse attacks, it once again crumples into a heap. A corpse targeted by this spell doesn’t become an undead creature." + "\n   " + "This spell’s damage increases as you gain levels. At 5th level, the corpse deals two damage dice according to its size. At 11th level, it deals three damage dice, and at 17th level, it deals four damage dice."
};
SpellsList["springheel"] = {
	name : "Springheel",
	classes : ["warmage", "druid"],
	source : ["VSoS", 354],
	level : 0,
	school : "Trans",
	time : "1 bns",
	range : "Self",
	components : "V",
	duration : "1 rnd",
	ritual: false,
	description : "Jump speed increases by 10 ft., and can running high or long jump w/o running start",
	descriptionFull : "You flood magic into your legs, allowing you to bound high into the air from a standstill. When you cast this spell, your jump distance increases 10 feet until the start of your next turn, and you can make a running high jump or a running long jump without a running start."
};
SpellsList["stone bones"] = {
	name : "Stone Bones",
	classes : ["investigator", "martyr", "necromancer", "druid", "ranger", "sorcerer", "wizard"],
	source : ["VSoS", 355],
	level : 2,
	school : "Trans",
	time : "1 bns",
	range : "30 ft",
	components : "V,S",
	duration : "1 rnd",
	ritual: false,
	description : "1 crea resists nonmagical Bludgeoning/Piercing/Slashing dmg until end of my next turn",
	descriptionFull : "You magically reinforce a creature you can see within range, granting it resistance to bludgeoning, piercing, and slashing damage from nonmagical attacks until the end of your next turn."
};
SpellsList["swift flight"] = {
	name : "Swift Flight",
	classes : ["witch", "sorcerer", "wizard"],
	source : ["VSoS", 355],
	level : 2,
	school : "Trans",
	time : "1 bns",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A wing feather from any bird",
	duration : "1 rnd",
	ritual: false,
	description : "1 crea gets fly speed of 30 ft until end of its next turn",
	descriptionFull : "Streaks of energy flow from the back of a creature you touch, tracing the shapes of wings. Until the end of the target’s next turn, it has a flying speed of 30 feet. It falls if it ends its turn in the air and nothing else is holding it aloft."
};
SpellsList["tag"] = {
	name : "Tag",
	classes : ["bard", "sorcerer", "wizard"],
	source : ["VSoS", 355],
	level : 0,
	school : "Illus",
	time : "1 a",
	range : "Touch",
	components : "S,M",
	compMaterial : "A drop of paint",
	duration : "Instantaneous",
	ritual: false,
	description : "Create 10-ft image or message up to 3 words; lasts 7 days; nonmagical cleaning can't remove",
	descriptionFull : "You press your hand against a flat plane on an object and imprint an elaborate and vibrant image that can fit within a 10-foot square onto the surface. The image can contain a message up to three words in length, and can include art, caricatures, or identifying logos in any combination of colors, decided when you cast the spell. Nonmagical cleaning supplies can’t remove the image, which fades after seven days."
};
SpellsList["thunderous distortion"] = {
	name : "Thunderous Distortion",
	classes : ["warmage"],
	source : ["VSoS", 355],
	level : 0,
	school : "Evoc",
	time : "1 a",
	range : "S:10-ft cone",
	components : "V,S",
	duration : "Instantaneous",
	save : "Con",
	ritual: false,
	description : "Crea in area save or 1d6 Thun. dmg; if cast on prev. turn, 1d8 dmg; +1d6/1d8 CL 5/11/17",
	descriptionCantripDie : "Crea in area save or `CD`d6 Thun. dmg; if cast on prev. turn, `CD`d8 instead",
	descriptionFull : "You produce a distorted wave of noise in a 10-foot cone, which can be heard up to 100 feet away. Each creature in that area must succeed a Constitution saving throw, or take 1d6 thunder damage." + "\n   " + "An echo of this noise persists until the end of your next turn. If you cast this spell again before the end of your next turn, its damage becomes d8s, instead of d6s." + "\n   " + "This spell’s damage increases by 1d6 when you reach 5th level (2d6), 11th level (3d6), and 17th level (4d6)."
};
SpellsList["time hop"] = {
	name : "Time Hop",
	classes : ["sorcerer", "wizard"],
	source : ["VSoS", 355],
	level : 1,
	school : "Conj",
	time : "1 bns",
	range : "Self",
	components : "V,S,M",
	compMaterial : "The second hand of a clock",
	duration : "Varies",
	ritual: false,
	description : "Shunted for 1/2/3 rnds; Can't take action/rea or be tgt'd, my spell effects pause; 3/SL 1 min, 5/SL 1 hr",
	descriptionFull : "You shunt yourself a few seconds into the future. Choose a duration: 1 round, 2 rounds, or 3 rounds. You vanish, reappearing after the duration at the start of your turn in the nearest unoccupied space to where you disappeared. While vanished, you are outside time; you can’t take actions or reactions, time doesn’t pass for you, your spell effects are suspended, and you can’t be affected by attacks or effects." + AtHigherLevels + "When you cast this spell using a spell slot of 3rd level or higher, you can choose a duration of 1 minute. If you cast this spell using a spell slot of 5th level or higher, you can choose a duration of 1 hour."
};
SpellsList["time's arrow"] = {
	name : "Time's Arrow",
	classes : ["ranger", "wizard"],
	source : ["VSoS", 355],
	level : 1,
	school : "Trans",
	time : "1 a",
	range : "Touch",
	components : "V,S,M",
	compMaterial : "A physical missile weighing a pound or less, such as an arrow, bolt, or sling bullet",
	duration : "1 h",
	ritual: false,
    description : "Stop proj. midair til touched, dispelled, or spell ends after which it flies 120 ft for its usual dmg +spell mod",
	descriptionFull : "This spell enchants a missile so that it freezes in time and space. You may reposition the missile as part of the action to cast the spell." + "\n   " + "The missile remains frozen in place until a creature passes within 120 feet in front of it, something touches it, a strong wind blows upon it, the effect is dispelled, or the duration ends. At that time, the missile moves suddenly, as if it was just fired or thrown with a range of 120 feet. If a creature is in the line of fire, the missile makes an attack which adds your spell attack bonus to the attack roll and does the basic damage of whatever missile type was used (missiles that vary by launcher use the highest possible damage dice)."
};
SpellsList["transient bulwark"] = {
	name : "Transient Bulwark",
	classes : ["investigator", "martyr", "wizard"],
	source : ["VSoS", 356],
	level : 1,
	school : "Abjur",
	time : "1 a",
	range : "Self",
	components : "V,S,M\u2020",
	compMaterial : "A pearl worth 10 gp, which the spell consumes",
	duration : "8 h",
	ritual: true,
	description : "Next attack against me has -10 to hit",
	descriptionFull : "The next attack made against you within the duration has a -10 penalty to hit."
};
SpellsList["tyra's coerced karaoke"] = {
	name : "Tyra's Coerced Karaoke",
	classes : ["bard", "wizard"],
	source : ["VSoS", 356],
	level : 2,
	school : "Ench",
	time : "1 a",
	range : "S:30-ft rad",
	components : "V,S",
	duration : "Conc, 1 min",
	save : "Wis",
	ritual: false,
    description : "Crea enter/starts turn in area save or sing w/ me \u0026 charmed; can Conc. with Irresistible Dance",
	descriptionFull : "As spectral instruments appear playing around you, you begin singing a well-known song, and others feel compelled to join in. For the duration, when a creature comes within 30 feet of you or begins its turn there, it must make a Wisdom saving throw or begin singing along with you. A singing creature matches the pitch and words of the song as closely as it can, even if it can’t speak the song’s language. Furthermore, it can’t speak normally (though it can still communicate telepathically), and it can’t perform the verbal components of spells. Creatures that can’t be charmed are immune to this spell." + "\n   " + "Unlike other spells, you can concentrate on this spell and the spell irresistible dance at the same time. Losing your concentration on either spell ends both spells."
};
SpellsList["unseen accountant"] = {
	name : "Unseen Accountant",
	classes : ["investigator", "necromancer", "bard", "wizard"],
	source : ["VSoS", 356],
	level : 2,
	school : "Conj",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "An abacus",
	duration : "8 h",
	ritual: true,
	description : "Create invis. servant to do intellectual tasks; see book",
	descriptionFull : "This spell creates an invisible, shapeless force that performs intellectual tasks at your command until the spell ends. The servant springs into existence in an unoccupied space on the ground within range. It has AC 10, 1 hit point, an Intelligence of 12, and it can’t attack. If it drops to 0 hit points, the spell ends. Once on each of your turns as a bonus action, you can mentally command the servant to move up to 15 feet and interact with an object. The accountant can perform intellectual tasks that a human clerk could do, such as assessing prices, updating accounts, managing inventories, or computing interest. Once you give the command, the accountant performs the task to the best of its ability until it completes the task, then waits for your next command. The accountant can perform no physical labor, and is not able to lift any object heavier than a bottle of ink. If you command the accountant to perform a task that would move it more than 300 feet away from you, the spell ends."
};
SpellsList["watery tentacles"] = {
	name : "Watery Tentacles",
	classes : ["druid", "warlock", "wizard"],
	source : ["VSoS", 356],
	level : 4,
	school : "Conj",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "An octopus tentacle",
	duration : "Conc, 1 min",
	save : "Str",
	ritual: false,
	description : "Gain 3+1/SL tentacles that can grapple within 30 ft and lift 100 pounds; see book",
	descriptionFull : "When you cast this spell, three tentacles made of water appear around your body for the duration. As part of the action used to cast the spell, and as a bonus action on subsequent turns until the spell ends, you can command one of these tentacles to grapple a Large or smaller creature that you can see within 30 feet of you. The target must make a Strength saving throw or be grappled and restrained by the tentacle. At the end of each of its turns, a restrained target can repeat the saving throw, freeing itself on a success." + "\n   " + "You can grapple as many creatures as you have tentacles. You can use an action or bonus action on your turn to release a grappled creature, or to drag it up to 20 feet in a direction you choose." + "\n   " + "You can also use the tentacles to manipulate objects as an action or a bonus action. Each tentacle can lift up to 100 pounds, and you can command multiple tentacles to work together to lift the same object as part of the same action or bonus action. The tentacles aren’t capable of detailed control—for example, they can’t open a chest or uncork a bottle. Burning objects are extinguished when a tentacle grabs them." + AtHigherLevels + "When you cast this spell using a spell slot of 5th level or higher, you gain an additional tentacle for every slot level above 4th."
};
SpellsList["whispering wind"] = {
	name : "Whispering Wind",
	classes : ["investigator", "witch", "bard", "cleric", "druid", "wizard"],
	source : ["VSoS", 356],
	level : 1,
	school : "Evoc",
	time : "1 a",
	range : "1 mile",
	components : "V,S,M",
	compMaterial : "A feather",
	duration : "1 rnd",
	ritual: false,
	description : "Whisper \u226425 words to up to 6 crea in range/same dir.; only they can hear/reply; must have clear path",
	descriptionFull : "You point your finger in a direction and whisper a message of twenty-five words or less, while specifying up to six creatures to be the targets. If a target is in range and in the approximate direction indicated, they (and only they) hear the message carried on the wind. They can reply in a whisper that only you can hear." + "\n   " + "You can cast this spell only when there is a clear path for air to move between you and the targets. The spell doesn’t have to follow a straight line and can travel freely around corners or through openings, but is blocked by solid objects and areas of magical silence."
};
SpellsList["wildfire"] = {
	name : "Wildfire",
	classes : ["druid", "sorcerer", "wizard"],
	source : ["VSoS", 357],
	level : 8,
	school : "Evoc",
	time : "1 a",
	range : "60 ft",
	components : "V,S,M",
	compMaterial : "A piece of flint",
	duration : "Conc, 1 min",
	save : "Dex",
	ritual: false,
	description : "Create 10 5-ft cubes area; crea enter/start turn in area save or 8d8 Fire dmg; save halves; see B",
	descriptionFull : "You create a magical fire that fills ten 5-foot cubes on the ground, which you can arrange as you wish within range. Each cube you place must have a face adjacent to the face of another cube. On each of your turns after you cast this spell, you can use a bonus action to expand the area of the fire by up to ten additional 5-foot cubes that each have a face adjacent to the face of another cube of fire. The fire damages objects in the area and ignites flammable objects that aren’t being worn or carried." + "\n   " + "When a creature moves into the area of fire for the first time or starts its turn there, it must make a Dexterity saving throw. It takes 8d8 fire damage on a failed save, or half as much on a successful save."
};
SpellsList["winter flower"] = {
	name : "Winter Flower",
	classes : ["druid", "sorcerer", "wizard"],
	source : ["VSoS", 357],
	level : 6,
	school : "Evoc",
	time : "1 a",
	range : "120 ft",
	components : "V,S,M",
	compMaterial : "A crystal flower",
	duration : "24 h",
	save : "Dex",
	ritual: false,
	description : "Tiny 1 HP flower explodes as bns or at 0 HP; crea in 30 ft save or 10d8 Cold dmg; save halves",
	descriptionFull : "You cause a Tiny white flower to sprout at a point on the ground you can see within range. The flower has an AC of 15, 1 hit point, vulnerability to fire damage, and immunity to cold damage. During the spell’s duration, you can use a bonus action to command it to explode in a shower of ice. Alternatively, the flower will explode if it is reduced to 0 hit points. When the flower explodes, each creature within 30 feet of it must make a Dexterity saving throw. On a failed save, a creature takes 10d8 cold damage, or half as much on a successful one. The flower withers and dies if it doesn’t explode within 24 hours." + "\n   " + "If you cast this spell again while it is active, you can maintain the flower’s existence for another 24 hours. You can create a permanent flower by casting this spell on the same flower for seven days."
};
SpellsList["zephyr's feather"] = {
	name : "Zephyr's Feather",
	classes : ["ranger", "sorcerer", "warlock", "wizard"],
	source : ["VSoS", 357],
	level : 1,
	school : "Conj",
	time : "1 a",
	range : "Self",
	components : "V,S,M",
	compMaterial : "A dove's feather",
	duration : "Conc, 1 min",
	ritual: false,
	description : "3 feathers; on cast/as action, ranged spell atk 120 ft for 2d8+1d8/SL Slash dmg; SL3:5, SL5:7 feathers",
	descriptionFull : "You wave your hand and three alabaster feathers, magically sharpened to a razor’s edge, appear and orbit around you. When you cast this spell, make a ranged spell attack using one of your feathers against a creature within 120 feet of you. On a hit, the target takes 2d8 slashing damage. Until the spell ends, while you have feathers remaining, you can make an attack using a feather on each of your turns as an action." + AtHigherLevels + "When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st, up to a maximum of 6d8. You gain an additional two feathers when you cast this spell using a spell slot of 3rd level or higher (5 feathers), and two more when you cast it using a spell slot of 5th level or higher (7 feathers)."
}
